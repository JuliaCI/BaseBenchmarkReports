cset: moving following pidspec: 21755
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342755164 seconds)
loading group "string"... done (took 0.559859634 seconds)
loading group "linalg"... done (took 7.673196029 seconds)
loading group "parallel"... done (took 0.176453153 seconds)
loading group "find"... done (took 1.181723517 seconds)
loading group "tuple"... done (took 1.836266848 seconds)
loading group "dates"... done (took 1.276245729 seconds)
loading group "micro"... done (took 0.234240669 seconds)
loading group "io"... done (took 1.029747433 seconds)
loading group "scalar"... done (took 42.209135315 seconds)
loading group "sparse"... done (took 13.744471598 seconds)
loading group "broadcast"... done (took 1.045575558 seconds)
loading group "union"... done (took 14.445971576 seconds)
loading group "simd"... done (took 4.842775234 seconds)
loading group "random"... done (took 9.777294006 seconds)
loading group "problem"... done (took 2.013527551 seconds)
loading group "array"... done (took 22.977250473 seconds)
loading group "misc"... done (took 2.084559914 seconds)
loading group "sort"... done (took 3.487575352 seconds)
loading group "collection"... done (took 19.858128236 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.577621546 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144865328 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150625435 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149459489 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192509215 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159740175 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160012913 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099347916 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.022250452 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.183134969 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155453222 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.530566757 seconds)
done (took 5.356016343 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.222523869 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095276036 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105890088 seconds)
  done (took 0.976900295 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077472507 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145629877 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096265181 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078837151 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096498516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078483672 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096733182 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078101686 seconds)
  done (took 1.453305668 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087352423 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098886086 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081870875 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098626429 seconds)
  done (took 1.148716586 seconds)
done (took 4.663697464 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742117318 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279312781 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204954441 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.469783383 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195642507 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217644717 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679572513 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349939042 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255231021 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100555715 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144769009 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389170706 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138833345 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687673413 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090462961 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126894808 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179489639 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448439639 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083993047 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110908801 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118397874 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141857841 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131093052 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091102117 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186025069 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082717265 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197109638 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109470006 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081516491 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276921951 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202798786 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688768944 seconds)
  done (took 11.023809324 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114050352 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135910202 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099859595 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1386226 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138523051 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101771794 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085092287 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098349638 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123174253 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177876145 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132450359 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121870511 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096489759 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082858319 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117287759 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246753185 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121151577 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100390584 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102311129 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08844748 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13910979 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114193272 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110016605 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094777977 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167743863 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225443115 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114238281 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129556304 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09820961 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114565104 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145889293 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143534471 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098826232 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08091807 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175624275 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125972635 seconds)
  done (took 5.296396488 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097794072 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193290575 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123610733 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172763752 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082050543 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145879909 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096770808 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114684951 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260755538 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.115995861 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158057565 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.492760123 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143433941 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099210711 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100969008 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083220666 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098976889 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628073138 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.125122413 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155413969 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11820897 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105913613 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087149772 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370895993 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101666267 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080338244 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098538362 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067001851 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162974522 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098888116 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.144037059 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101529222 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102612144 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134635104 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200834467 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127402703 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076748459 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135367193 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097963353 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079074563 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175744612 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097345577 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103296812 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081396686 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120912472 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134462751 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11734936 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100045051 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09832054 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204862285 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096924245 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098218564 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937762373 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18325732 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104134278 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096514037 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290485489 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117086136 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097669151 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078854087 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277449992 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.19007963 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100501775 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079895822 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097638903 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080304462 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398826232 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081109807 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.735309382 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085208145 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10905561 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084335129 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09786507 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10375946 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087869851 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115941494 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079897273 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099974395 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079569501 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098460761 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080851395 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109402793 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215252992 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099379175 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079291415 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096834413 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11655461 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111832085 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100617132 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096614767 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114834963 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10031767 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100710797 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115823047 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101116919 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10731349 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083587279 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144805555 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098658274 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136853042 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096187716 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076948121 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126205284 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102035829 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13102167 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11384236 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08195946 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169474035 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097187431 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077992897 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098688281 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077636292 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100187479 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082028983 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112150521 seconds)
  done (took 22.9937371 seconds)
done (took 41.192675619 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326655814 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106296502 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10616512 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106077724 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103936999 seconds)
  done (took 1.603989128 seconds)
done (took 2.431803259 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289997619 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175448561 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09837777 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167487274 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095048223 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166105443 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161398125 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09408927 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.223006827 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096432585 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162448035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076235357 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097004386 seconds)
  done (took 2.75544851 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095062828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116702333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083584659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112657202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076477079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112703022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092981745 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11761903 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111404537 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085534839 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09585072 seconds)
  done (took 1.927162997 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095415736 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114948024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083808694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112262093 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077130406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11226318 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092941784 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118052643 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113839017 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086615849 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095359569 seconds)
  done (took 1.927360198 seconds)
done (took 7.425403637 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09259545 seconds)
  done (took 0.914536853 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.955364452 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.094663055 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11479977 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150584235 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32015763 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.177112776 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.485700344 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129898783 seconds)
  done (took 11.461756737 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114529496 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.116569782 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105780842 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086299464 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107375155 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084721711 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104243666 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101140896 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084560612 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101671365 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083183616 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102769966 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100681571 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087223237 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105091121 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083913288 seconds)
  done (took 2.457199921 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119068028 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118444063 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109412803 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110837808 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087623793 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108408273 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108719622 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088584925 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104487136 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105830211 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090987169 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108179223 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105762443 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080381782 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108263854 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110458418 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086209425 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108870065 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110527415 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091199056 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109741992 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097300493 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087474224 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108746961 seconds)
  done (took 3.40526993 seconds)
done (took 19.065719845 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162871493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110180445 seconds)
  done (took 1.10328899 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096482579 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115637411 seconds)
  done (took 1.045743963 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098347852 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098608544 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124997343 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111980378 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081068362 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099200427 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122039626 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080804013 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099016235 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080479468 seconds)
  done (took 1.833445432 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084389006 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111975226 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102816002 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096886442 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108482522 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097183518 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090288983 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101803171 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112515033 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077716337 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105340321 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116482087 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086240351 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119390325 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107371215 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083361671 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104799377 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101575678 seconds)
  done (took 2.646703683 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081403091 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098728486 seconds)
  done (took 1.017089841 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083318462 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095777038 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082012065 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099691532 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09630186 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078235044 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096522219 seconds)
  done (took 1.468003437 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491057139 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137699459 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263301841 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103361516 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104499319 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302049082 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.10109042 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084873931 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105378847 seconds)
  done (took 2.589453107 seconds)
done (took 12.538669947 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09527178 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1181161 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113359056 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472344734 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108314684 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101186012 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148003498 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258627319 seconds)
done (took 2.258438066 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145461746 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609217973 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.431508247 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.234817367 seconds)
  done (took 2.118187179 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.408535655 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099699171 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085619617 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082369818 seconds)
  done (took 1.522050061 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081381609 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10178402 seconds)
  done (took 1.029681682 seconds)
done (took 5.663530428 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113357967 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101721109 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080278636 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098904766 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079728975 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099238337 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077335748 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100074279 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076641242 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100098034 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097859877 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08175313 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098101567 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078942003 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096178393 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081409699 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096517818 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078871311 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098407714 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078740081 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098598632 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078050696 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097162659 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080367587 seconds)
  done (took 3.050627441 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101185046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101188939 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105053947 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087789684 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104788672 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085930944 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105228506 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098980614 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086196273 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102974053 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102787724 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086743558 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101131465 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085332421 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102241203 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103404394 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087339725 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101237521 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082941408 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10459037 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104845563 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081907378 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10379526 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103202093 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086353721 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103272816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082388168 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101164861 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10387728 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08576678 seconds)
  done (took 3.744036253 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086871995 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095574007 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079417913 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103234426 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079311854 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099673039 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078321743 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09788949 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079046344 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09756083 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080014015 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098323395 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078270721 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100056596 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079384052 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10235064 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113066558 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079233263 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096679653 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079932452 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100339102 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079158241 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09742022 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078289724 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096656152 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078353831 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097994194 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07818158 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098218343 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078747027 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101476291 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082252467 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098479472 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084052693 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101691328 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077298974 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102259934 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076746668 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099022553 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095581047 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078866172 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096920907 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079401096 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10350949 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079845074 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099619018 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078785619 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098536275 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079331492 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101353246 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078071968 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097915155 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0799625 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098835144 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081932851 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097711899 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097254927 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079140152 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097614984 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078854742 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095625919 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078416284 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098547312 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080242138 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113528703 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085104883 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097093167 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080299094 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099039826 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080918807 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09950797 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11046713 seconds)
  done (took 7.362785912 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08420155 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108444968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080139002 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100414573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076821307 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098939792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100351397 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079887637 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099182663 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085090632 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098484092 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080059949 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100358747 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108619564 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080784825 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098924918 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085408332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096365817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07805497 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102601325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078637887 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101790878 seconds)
  done (took 2.876403307 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211320347 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108046127 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144930149 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109206769 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083677768 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110013698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103400608 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087299636 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104320608 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083458727 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102665419 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.213133824 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084793671 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103235895 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101182787 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086557243 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104306645 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084831811 seconds)
  done (took 2.882700662 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094800614 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100964981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102053533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101328121 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100836888 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084402714 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106630609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110115519 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084835257 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100924936 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090829185 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104415856 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101880759 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08264458 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104095143 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082296433 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103823896 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081541814 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110510847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105957141 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106138557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092031075 seconds)
  done (took 3.011796933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098689072 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103362167 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119754401 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085926074 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097830394 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080103608 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108918057 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080804841 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109020661 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101187977 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082167265 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09944086 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088487141 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10082068 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105438215 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082660879 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102707434 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081321761 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102563204 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077476115 seconds)
  done (took 2.76772569 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104081098 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102725424 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100231935 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093635887 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102583874 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081944371 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111979642 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102240787 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081471003 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127176445 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102522088 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083032691 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111952247 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108570487 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100833078 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092968909 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112125568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111357122 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083748289 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102594214 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126905555 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082353464 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113106676 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101432316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082628793 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102510515 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100970869 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089813893 seconds)
  done (took 3.679098048 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082510661 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10021878 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08308006 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097313351 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080209886 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097906332 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079978886 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098206255 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082364136 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098576249 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082463073 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100163261 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081654979 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100482106 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081862818 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101001031 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081101625 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098443875 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078719784 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09811734 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081314577 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101038915 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082046457 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09913346 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078648391 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101524886 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07857891 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099540218 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080740496 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099559046 seconds)
  done (took 3.56967795 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092331589 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108506166 seconds)
  done (took 1.062721145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080352938 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117026248 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079216064 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105152467 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085738837 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103152769 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110126762 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085895949 seconds)
  done (took 1.62905775 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098054134 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112746991 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083759906 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114990252 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112278063 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098636032 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173193674 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104097347 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106996869 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081663732 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115849 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081618483 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108237331 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08182624 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108096639 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088002634 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101666798 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107260361 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086548624 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101289736 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087027794 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111303831 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084887612 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098773081 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102970665 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091631143 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115409993 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082218745 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106929714 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108993888 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08797968 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095761971 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082079289 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102400467 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080454966 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111357384 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118064274 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085509227 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112102654 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102098041 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094439724 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097271028 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086570591 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108119659 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110858494 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08380583 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102986547 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078236736 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099413321 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084256004 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097162744 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081653435 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097551312 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089115061 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106597159 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113018816 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081579857 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104231282 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085342608 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106061083 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088406562 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105421389 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103886157 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082700278 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109188933 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087031583 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113039518 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096294248 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077644942 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099026441 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094239571 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125797425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107580249 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083946423 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10230547 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080942683 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106075539 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084319167 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10881848 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10712889 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083598023 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109633145 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089814657 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103376892 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103632724 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092360004 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101068014 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085102628 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100009274 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119042094 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083083379 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100179267 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08047887 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113377236 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08498284 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103415987 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079433115 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109438568 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094675597 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084475679 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103173985 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083038748 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114206395 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106627727 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089135689 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111777788 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.108454683 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083372183 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104721409 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08020792 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103454482 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084828956 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109913738 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076195443 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106001912 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082397091 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103472916 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111343697 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081439199 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102584386 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090022622 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109407517 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099942199 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080942017 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104082077 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084853402 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107782693 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091604966 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101965411 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077407375 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098957137 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105648257 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083381485 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106519641 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088152976 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106091227 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077427899 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101470743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106722278 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093290595 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103212336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083032391 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109476805 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103010256 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083590584 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108719394 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085408068 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101778382 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087894905 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103735411 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.0763089 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106351623 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105628861 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082009626 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106507051 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086559826 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105682784 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102970618 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082462558 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108577978 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084121665 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101528298 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082224042 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101289127 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112705934 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086546857 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097427864 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080082665 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110532221 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080425947 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102525918 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081199427 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105472382 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102552264 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081845415 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101001578 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085354157 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115959037 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105819839 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085451747 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108502602 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094397678 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103201433 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08412786 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103031 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103422869 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084796128 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112108786 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088032327 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109147821 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104330467 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.08033024 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108705815 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089916077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102218857 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080769367 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101444924 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106174519 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089218825 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106614183 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084208769 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101679614 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082898063 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107505946 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10515374 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083881461 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101429729 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088049301 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102512227 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109122902 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085400423 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113019945 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085910727 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097901458 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085636419 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102249008 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108085849 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078748643 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099982529 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08259343 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103396866 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081533397 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106369812 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07595711 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111563466 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109141221 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084143839 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101532542 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083851935 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110262618 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083966852 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107958126 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08563532 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10960369 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113211169 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082306203 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107309269 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093967502 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105386033 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096880055 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089722446 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100713872 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083188448 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10280706 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081107768 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107327101 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110908644 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091084064 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097618705 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085805816 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102252192 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083818911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099824894 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087505039 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106648442 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103138758 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090672555 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104232772 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086457233 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10753115 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081848886 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105423644 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103708111 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086680177 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104264393 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.0857171 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103215972 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086177428 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103086784 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080795027 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105133947 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102178824 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083841896 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109233469 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082777251 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103984858 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085105741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105432457 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102804617 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084450049 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101724269 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086979371 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103949559 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082926044 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10616039 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07923101 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111280636 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082397348 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111141249 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102640408 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081310425 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10879787 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085727427 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109283916 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103762797 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085429981 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104423056 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082958671 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106657753 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089827336 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10213455 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114204626 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09308767 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104451707 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086968796 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104547619 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084211679 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103915021 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103410049 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085640955 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103657508 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084608999 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108694462 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086335436 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10478254 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085031663 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10520051 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102821236 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085443872 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097277887 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082955136 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103086852 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083752146 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114627037 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103130687 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087194317 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101804781 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084970079 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102913645 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080187081 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113059194 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113028695 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084962144 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111561134 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082106177 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106162331 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114420295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078124824 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101064207 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082744807 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101362885 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091258408 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104933908 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099861242 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10421484 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101344223 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081908224 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10481152 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082379444 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098172549 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081124318 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108260413 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084760368 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103129018 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083136659 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106862897 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103757282 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094391971 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10370008 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084252296 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105457921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079877234 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103759669 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101623472 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087837987 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104464294 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081718019 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100372027 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083028206 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105048715 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083629889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10469982 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084209205 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111410439 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102346458 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087424126 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107524883 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078284077 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.1074318 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082470698 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104388976 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101843341 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088005753 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107359205 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085367513 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113524076 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082601461 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105470128 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10326193 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082022973 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102236825 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083482497 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103618825 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081803085 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105426031 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090926478 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102236853 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105653368 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083478485 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104271407 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091180759 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105777063 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085497133 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112357514 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106681498 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085571183 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11261708 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086365646 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108268252 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104914529 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085748004 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110557088 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082925257 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111047852 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083274118 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106440833 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104916338 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082239173 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10399862 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083751209 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103465884 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089685548 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105737519 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082003967 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103984697 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101133087 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085805619 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106883134 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091942081 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107379509 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086849383 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100946955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080344983 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107373581 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101693993 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086851275 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108003505 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090007354 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107599679 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083921133 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105118727 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113887458 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09070152 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108641073 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081619807 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109161264 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084448851 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107676811 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104177168 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086104337 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106444462 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088242989 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106962162 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083239052 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112802355 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086694565 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106342159 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105481261 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085536185 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105455756 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080167254 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105979233 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086128338 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110742143 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106426409 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085389523 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116292745 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08428878 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104915864 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087481484 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105241919 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107958797 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080975931 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10491673 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086595336 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105542099 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078900415 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105303511 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081629172 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108260354 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083498572 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101501895 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114988949 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093729296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109001507 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082508463 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103786819 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079156509 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10063165 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102508535 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086406715 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10556237 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095187206 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103994491 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08318044 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101174014 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083376245 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108940524 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10751053 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082421898 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099060297 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08331281 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108053817 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089362337 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104563325 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083330155 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108529061 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106453871 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08361131 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108918567 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080964512 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10952305 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117719566 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086936989 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105635154 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091331063 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113537607 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084151409 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100138291 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104275555 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088846962 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105313615 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085869954 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106691565 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120546771 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088822058 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103396856 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083346373 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10825035 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084145115 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114200318 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105874266 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086885273 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109712052 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086617347 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115384933 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086050177 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115482086 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108906649 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08755757 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105104276 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084197788 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104346196 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082566115 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107490426 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106110201 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091178989 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114217369 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082981548 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11786453 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114351322 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089496073 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103319851 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083848231 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105406773 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079517362 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109777468 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081967702 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104246944 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102102013 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084196826 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105500996 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091354014 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106355451 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084884324 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106569613 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078963913 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108286817 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085731219 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107537653 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101314674 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086076989 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106392027 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089675892 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110290123 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084729921 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108302029 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085915704 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10706323 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100292232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093089261 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105381724 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088061145 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104697133 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084580739 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106792064 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087393855 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111589728 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106694827 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087875192 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118108907 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085928628 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104016468 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102328199 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09141748 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103425035 seconds)
  done (took 58.809998834 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150086927 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08149787 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100407617 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079888144 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115364733 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100813315 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080053878 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101516477 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081746238 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10398385 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080020438 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101502225 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110814471 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127249383 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094608594 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106594062 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07980968 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103293321 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099586442 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082383963 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111965038 seconds)
  done (took 3.00912859 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10643804 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121363461 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118744807 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121161506 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091057188 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118065099 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117418359 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116368866 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100446614 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113766693 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121298484 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116300255 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093360224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114123844 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113173475 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09340872 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121640363 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112324445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117390543 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096809498 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115750178 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117743054 seconds)
  done (took 3.374242428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086284189 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10427102 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086713584 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100677599 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084795595 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100750155 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088586244 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10350696 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087802739 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105254885 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082340388 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105644108 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105255841 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081272544 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104397483 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083281137 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153850729 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109915454 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083752735 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107641268 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078584405 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108605184 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100831913 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080820303 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104223994 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089043116 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106304527 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083452916 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105599415 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083201243 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105641417 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081430104 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108708383 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105590622 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084678831 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104364914 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084548373 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105031126 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080218184 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103222247 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084836712 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101447743 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085113505 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107203773 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082184559 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105133241 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085324422 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107448931 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099127545 seconds)
  done (took 5.646782239 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105801414 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164131064 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087846439 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146825772 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123615306 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115395472 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088557278 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145177037 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105731608 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083511288 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125662055 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122983449 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106506412 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089060128 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113735753 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104866792 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08619962 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10537603 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110005215 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085428087 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110249347 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091499693 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122851385 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121093591 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110855843 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083863916 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106369827 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110026782 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098143352 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112419659 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111607093 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091036427 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123693299 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112763155 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104219286 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088342723 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124573733 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105800842 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088350208 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103871429 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087556449 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112122551 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111962306 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103579998 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107769717 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111032101 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084538426 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103630368 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120246083 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087486799 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115645248 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122948437 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109548468 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086312274 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111889483 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121973049 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086654688 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104456795 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08824542 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120499605 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103742597 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088844442 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121529117 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108971206 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113777107 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100639941 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112681792 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110702819 seconds)
  done (took 8.361475 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095591934 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113679483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124070197 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123297556 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092414933 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113225484 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112171606 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091199745 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114063989 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118263972 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112657788 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134648666 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086620843 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116796482 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112938865 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093236401 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113653578 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112608351 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091029118 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113250095 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114276246 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122660831 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091743478 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123106852 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144214243 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10791357 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091809879 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11417644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122249892 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112994343 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125108246 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092664102 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113912915 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121959533 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125750544 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091281792 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106562645 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11182956 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092496225 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114275648 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106716996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102288463 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113865538 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108049482 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090986197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112950989 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122467886 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126159148 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116253746 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098273339 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113935419 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122941923 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112572624 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092621453 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123764961 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149797464 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123106255 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122537814 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113046237 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101884363 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123467351 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131287744 seconds)
  done (took 7.884539312 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108581776 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117488698 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120262296 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102010546 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08496642 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111279543 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082974071 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105108182 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115769693 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095451996 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120258938 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111597273 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093048708 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120046597 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111512086 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114875265 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090100385 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112090748 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116820888 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110119363 seconds)
  done (took 3.075725284 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094841814 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125385087 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085309204 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115161395 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110747834 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092036595 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109791741 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109496201 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087787248 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110893651 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096002798 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119670345 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107349598 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092004549 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12065705 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11436655 seconds)
  done (took 2.624203308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100853728 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119768199 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123943042 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084477192 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106526937 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103103157 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086003105 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103378545 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081859115 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1239088 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107343768 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089483999 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107315226 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083756607 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103744343 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087362289 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104585296 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104037207 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087410598 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121696753 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096338995 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106556393 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1078366 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088161608 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108403433 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090942511 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109209773 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104961838 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084064228 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108136812 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085914418 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116574158 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103546149 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085546367 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105941545 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08280666 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107955324 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085084165 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111354704 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106489097 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08399084 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107642302 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08559067 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108997638 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081170507 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109184777 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102622951 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09220264 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10616724 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085542755 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108344691 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108436786 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086628016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118279458 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088780141 seconds)
  done (took 6.436360721 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10012442 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11173557 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080598782 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106764124 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088347367 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110857971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110507494 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089298927 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109445475 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083511152 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108780959 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089581854 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110351897 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110933409 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088890365 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110753907 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081434816 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109748209 seconds)
  done (took 2.743384974 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091892378 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107468967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093607663 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108705542 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085290744 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110874974 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081040224 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107652155 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105133538 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087111629 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107055074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087814038 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106643696 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087972196 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107902826 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085430276 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111416298 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104559094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086792611 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102945306 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08948898 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107394174 seconds)
  done (took 3.10259551 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120253431 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128133943 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092733016 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.235235285 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104090037 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135573704 seconds)
  done (took 1.756455918 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110282318 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123267711 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107642541 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109108216 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117869891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087230172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110313498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109837461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120501333 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102309288 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111163378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120236329 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119587559 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09771243 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117157482 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117159255 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108707347 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088540637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10894767 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129975546 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088829659 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120791347 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110334492 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08753699 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111352188 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11928277 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120093876 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123872739 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088981939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120989879 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115322055 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088757836 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120936262 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124397732 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109979591 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099956187 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110696421 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130669971 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115208318 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098325535 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111774488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116641353 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097587103 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115536509 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120595708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109958466 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093910373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110233189 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109448881 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138193048 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094712998 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120693547 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117925346 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120918114 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099038236 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157797945 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103616901 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120763403 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118473568 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124693371 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118466138 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095112416 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120547624 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126182482 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117012821 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097310825 seconds)
  done (took 8.344015857 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103833024 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129437615 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110500649 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125200044 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098304146 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111531276 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109687831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088485115 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110770664 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108255915 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154441754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090573466 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120719935 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119468578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088164727 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111169749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111646658 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119370987 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088217188 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137681841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111085633 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119611987 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119620393 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09822015 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125621295 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116842524 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109001122 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088677101 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110928565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109145401 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094631344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110822669 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1196566 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086657633 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119773854 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11091829 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087567965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116081943 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110464188 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116644083 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097827041 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131405585 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111778309 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109141204 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104258269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110663183 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110976066 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08648037 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111056777 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109710859 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102974001 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124499713 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12464577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120784867 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110139931 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088542961 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111729639 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110022764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089552888 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116844336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119638271 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08778171 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137120599 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112352585 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111188749 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1196076 seconds)
  done (took 8.24117431 seconds)
done (took 159.891310896 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218022291 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.203211389 seconds)
  done (took 1.365360001 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088907751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139026304 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096319723 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17171995 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086150429 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143127746 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140594586 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098560727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109328995 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085845119 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109062864 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088773705 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175309454 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086149811 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110148916 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109582207 seconds)
  done (took 2.789457836 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119439358 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257488337 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128183488 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107258861 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090642448 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.1120761 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084220167 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115324592 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090116036 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108201846 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08815316 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110315575 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083949346 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109719571 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111986209 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090131251 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106851415 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089898385 seconds)
  done (took 2.958184046 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114455523 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152580161 seconds)
  done (took 1.227618796 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24660809 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.165571298 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.235363065 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.479172536 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.281092902 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.371767083 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.208374521 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.218605747 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167398427 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.215823611 seconds)
  done (took 3.54284963 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119649017 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182394681 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320229769 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157569979 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107731289 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131661963 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159380305 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132660876 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.12390385 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102072074 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125295246 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120763709 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140197834 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095866402 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118348711 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.1193838 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120976784 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11708014 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116807599 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09632983 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141288146 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084979904 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11866007 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116620885 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098024505 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121476738 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108731171 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085595759 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118786214 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092667963 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116547857 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127342454 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120435581 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15705816 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124016087 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15879382 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119810363 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093380553 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118368479 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090749043 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120875488 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121566153 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126701823 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098497156 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108449941 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098155759 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108725305 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085752043 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117752885 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121021203 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094666807 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117107754 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157253641 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121351159 seconds)
  done (took 7.579410072 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.786528778 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156508837 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090027555 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880453886 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136835963 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103848362 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.772792373 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111634691 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258182924 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.749110532 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134786753 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119935654 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205327938 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260946241 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928100167 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288257195 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.638781158 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127362981 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153665971 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154037901 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118589416 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114497693 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131819958 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430514703 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118450097 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090159599 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119355537 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121010292 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161476874 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126488833 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093194773 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200331913 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247501956 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205819748 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09529438 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114476661 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089026268 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.194080073 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264092913 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194778567 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181665154 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110353921 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090260108 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124690107 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133576937 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08612746 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186520982 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175788677 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170668873 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116999976 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119902132 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098916295 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122395993 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164708219 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123475454 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319327233 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322889303 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090650059 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123251865 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127597581 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236676288 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126254166 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225976306 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140470123 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189121643 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113102108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780193804 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171150938 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112200775 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095750329 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122200492 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11687802 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098807001 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169666719 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408926391 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12609787 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115309086 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090817567 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228486987 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102927057 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114833709 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162107607 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119497708 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120977734 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103200585 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124613059 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170823936 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253041667 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101592378 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122310432 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116139435 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103632081 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119879459 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21240836 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219522469 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163648231 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23565566 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101464724 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187137693 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170688547 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12092545 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173556507 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120547334 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103619613 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124899885 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219215719 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146955129 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124155944 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095014739 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121319659 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150650531 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128352065 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097724975 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193486216 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460120458 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168622927 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111896059 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128618656 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098700915 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184298856 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096512095 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264001354 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122890997 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171413705 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119841311 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088540021 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121819768 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165219299 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123670529 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121902176 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10261564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121094353 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237052639 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218108179 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122762029 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22136735 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186731065 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119585799 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173092422 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124019866 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169336243 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122116431 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098742067 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11959792 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7747801 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124298011 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099760331 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118685445 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188810897 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089532499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126209912 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126623481 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086069823 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796711841 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129415379 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122328221 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102943129 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120252832 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122007958 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096558041 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118610315 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163047405 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232233597 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122229366 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097446519 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126940052 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161836156 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119508521 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127129222 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125773949 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10455328 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124350777 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116364755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103253967 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192795352 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165862714 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221933148 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572918315 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114504582 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125594126 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206597017 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1140766 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290948519 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119392121 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204698029 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186907347 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099580871 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320923908 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165833771 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188963281 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128493345 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173030455 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11173484 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120069171 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16749785 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112192741 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09691828 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163638521 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127793762 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123925463 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.973890194 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089867228 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250557517 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089042213 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171529806 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118962349 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121486912 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292962186 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091393694 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129838499 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165603018 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116681957 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.130534285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.855923131 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127351984 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122244962 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096594473 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222774369 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165404985 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121812342 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121417961 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097922652 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18618289 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213250483 seconds)
  done (took 44.407117808 seconds)
done (took 64.820131153 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282004236 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219717928 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.273093788 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173692004 seconds)
  done (took 2.012321841 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174398782 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152720321 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123680768 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110902943 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153003792 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08455776 seconds)
  done (took 1.781003685 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.369202962 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282809788 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.248154117 seconds)
  done (took 1.888009822 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321377758 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254074216 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475044013 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328984083 seconds)
  done (took 2.463402975 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212973177 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135151461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113954822 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10439992 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202113916 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250317704 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144468319 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205664752 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099554264 seconds)
  done (took 2.497837427 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.201837927 seconds)
done (took 11.834387494 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.127179348 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.125265513 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.254062665 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.284248854 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.201951455 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12813722 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.126130602 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124735519 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.208034497 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.181940631 seconds)
    (11/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136911872 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111018709 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096956864 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.148212871 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.225880488 seconds)
    (16/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.123056965 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097305027 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.152352804 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11249761 seconds)
    (20/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093379534 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.171649522 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.244400299 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.12309037 seconds)
    (24/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.232512957 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.204396739 seconds)
    (26/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.198588189 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.228596783 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201657505 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097411213 seconds)
    (30/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125107245 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.210786141 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.162245324 seconds)
    (33/309) benchmarking ("sort", BigInt, false)...
    done (took 0.251554664 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094840769 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117558296 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.138255457 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.177594491 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.136445 seconds)
    (39/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.198009401 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096033668 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187984188 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13789197 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184911592 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.1161672 seconds)
    (45/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.150991935 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119288849 seconds)
    (47/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.120492856 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112691089 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093300999 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12006566 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13706212 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097317036 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188356646 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.21687755 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.222588416 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112674311 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125573551 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200039376 seconds)
    (59/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110252987 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.256514461 seconds)
    (61/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.153727264 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128325319 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120538906 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096543393 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118843505 seconds)
    (66/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067331522 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125992736 seconds)
    (68/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122041241 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11742743 seconds)
    (70/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.191297989 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.116864364 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120288048 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.192062094 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172262419 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.178390661 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121372755 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066463416 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.112946035 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.150273514 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176811859 seconds)
    (81/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118802772 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190328856 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067891838 seconds)
    (84/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.189633352 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067720715 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067006732 seconds)
    (87/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117790435 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093337044 seconds)
    (89/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.128177332 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086595699 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.193207995 seconds)
    (92/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116367239 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.194322059 seconds)
    (94/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078783749 seconds)
    (95/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.19026751 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087365757 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.141061416 seconds)
    (98/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126141728 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06927828 seconds)
    (100/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100304215 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129606628 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121965142 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.098737964 seconds)
    (104/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192890427 seconds)
    (105/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076312633 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.144560362 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120102308 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087577036 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217123992 seconds)
    (110/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113593621 seconds)
    (111/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073758047 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.06612041 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117996673 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.138067871 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095065495 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.17646845 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195057798 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094690554 seconds)
    (119/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.398017795 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.141125938 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156133134 seconds)
    (122/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139237324 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122446764 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095743133 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067199615 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118590769 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066686704 seconds)
    (128/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.19929759 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112196373 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.182574327 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095053371 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138992413 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109572062 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115745763 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.136912742 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177482043 seconds)
    (137/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199138293 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094024891 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118651773 seconds)
    (140/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093567396 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121042227 seconds)
    (142/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068793002 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066672955 seconds)
    (144/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149491647 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.139042897 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096816051 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.143678375 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086683204 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125250681 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093841962 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.139195614 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092708827 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092194762 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085695007 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119270367 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067115754 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140549547 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067628933 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.134609539 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097122799 seconds)
    (161/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.17989668 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120244304 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067710329 seconds)
    (164/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173176828 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208285104 seconds)
    (166/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.069309703 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131079205 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088771929 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066737507 seconds)
    (170/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.140711756 seconds)
    (171/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135129645 seconds)
    (172/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078158394 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067607393 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092959577 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14996141 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101700969 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066347516 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091899932 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068367034 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086658538 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092375245 seconds)
    (182/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.115716188 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.174957414 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067075828 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091300814 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.167429149 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12324378 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117012752 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087807896 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121937857 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088157802 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.157413329 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085878232 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121592264 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068338938 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134187007 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086541112 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.143567787 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118329474 seconds)
    (200/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083869703 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08858252 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.114029768 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118583681 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113099889 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112950641 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091062963 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.103984938 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085997953 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.149299269 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068581613 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180454858 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067144057 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164261065 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1829793 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097855444 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118604575 seconds)
    (217/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068559263 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188519744 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086971609 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.099827291 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06813215 seconds)
    (222/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067009467 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.093434868 seconds)
    (224/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090242838 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117949564 seconds)
    (226/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.127239058 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.092831342 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076818139 seconds)
    (229/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118367058 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089408372 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091458239 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087492097 seconds)
    (233/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076942468 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092776016 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093090412 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091067953 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166985295 seconds)
    (238/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112323222 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.132744515 seconds)
    (240/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087000883 seconds)
    (241/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119210187 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101708015 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113552685 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06794712 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067731363 seconds)
    (246/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.093374031 seconds)
    (247/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09018571 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.157291397 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086942184 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140300056 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068225536 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.142730599 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111462373 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 0.148453706 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.220874526 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.094985269 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101652619 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120910021 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068815777 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.114103934 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088204572 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120449817 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154902186 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070166771 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.136471895 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069662679 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068013812 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.160256022 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.198761085 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079046013 seconds)
    (271/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077614316 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120636337 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110375016 seconds)
    (274/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069775985 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.140956455 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111739759 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215553391 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113062958 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094243863 seconds)
    (280/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.104607239 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087441738 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120377617 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06984436 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109835225 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087212257 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.175989945 seconds)
    (287/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087336103 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.113856674 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141300782 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095826706 seconds)
    (291/309) benchmarking ("sort", Int8, false)...
    done (took 0.189928888 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.133537649 seconds)
    (293/309) benchmarking ("sort", Float32, false)...
    done (took 0.175706328 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224798178 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094041491 seconds)
    (296/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119648105 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089224845 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.094161042 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090251068 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076942821 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112274611 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086394584 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.093336403 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.22575536 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093168098 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11411773 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094893627 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.118173456 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068702558 seconds)
  done (took 40.217071816 seconds)
done (took 41.206598753 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103157307 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15134859 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095974915 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138576349 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126045734 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092062684 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121027985 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098341473 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126577346 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.1268611 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099873128 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095926548 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097928712 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122517203 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096700987 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142094717 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126290023 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093913648 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121398498 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086581167 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121921034 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086553218 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114988291 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070563961 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124331598 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094124265 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120005752 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121075186 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088476492 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112387487 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091725311 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119652873 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087493854 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126059583 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094093102 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.122144589 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097140823 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123196647 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088644772 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113662072 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119256695 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088904304 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11928543 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095962009 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118319269 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09410353 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121722165 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099144162 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142307019 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117231423 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096337477 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122927638 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096532107 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120999384 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091299137 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122845349 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092964926 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144193424 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123299865 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093302443 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.123264512 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094986417 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11875786 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09440167 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122575228 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121989109 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099816388 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118431573 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097598157 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119562807 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087968126 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122495414 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090705102 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113873463 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096572297 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124095059 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086102202 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.119483231 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118601407 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093870905 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111531256 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090256221 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114046439 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094267039 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114638488 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071080297 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115081301 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094765607 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111745754 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097685116 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118903492 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094820987 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114821428 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099089753 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113547048 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092365038 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114283643 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088075544 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116452344 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091007449 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113498316 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089384166 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123020466 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089180138 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.12011916 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124935895 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088416105 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119568432 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087741744 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111731233 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102561215 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124070918 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087411207 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118966932 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086011475 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122006855 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085681258 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113989399 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087737451 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114799062 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092571752 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.1148352 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089616259 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121003927 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12660503 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088182807 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116678314 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091497731 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113565889 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09401468 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113242297 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087953115 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115386544 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079008687 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115013735 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088546332 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119636711 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090922062 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121896735 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089997993 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122528239 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09160613 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120362319 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09290584 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112748285 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074588828 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119291339 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089658956 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115803741 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087547599 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115873432 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086767509 seconds)
done (took 17.293225214 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08930986 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187019818 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155048293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144593379 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108214138 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115249773 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123471634 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120409166 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116529248 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145332499 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112593834 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135836811 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149627428 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087446479 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114293371 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091515401 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115452865 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10349963 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147959689 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135906965 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166699965 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086508007 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149613134 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137860741 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122150857 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115602155 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11381882 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091971487 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117560697 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10359889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135844303 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090168263 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115431707 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135766 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10474292 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122737521 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087862474 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12178928 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087359739 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114970705 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143284262 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134819318 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094943306 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119727748 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091998903 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116428889 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090288727 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123662898 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098365005 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119299951 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127528464 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15831353 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092340647 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124282989 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087318652 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12560261 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122750998 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091457365 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113809338 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091847329 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113460709 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0923884 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129673729 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144328476 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092898998 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12455935 seconds)
  done (took 8.829116862 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106129393 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14201588 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105368525 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.150402568 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113401453 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089020754 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114999666 seconds)
  done (took 1.874664699 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091524416 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135867237 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112982461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138103184 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133467183 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110065297 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125798947 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088942276 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133941648 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088779756 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137124345 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155852143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089697912 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123611828 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139607725 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089481342 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140078824 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088439535 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119105925 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112379902 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120429019 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136307765 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092700969 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115712081 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102725483 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116019777 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163245956 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095246313 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117348721 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092455495 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114703931 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167835244 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10539121 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127284187 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089425275 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131772949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130050622 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08785539 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.1319305 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093827001 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130686619 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089470477 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117955405 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086669419 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12079518 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.126972548 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091448082 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115425219 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092239717 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135982699 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089994073 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129718737 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089389067 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121439189 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092350256 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122061821 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124446812 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091958378 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135761239 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091105855 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133777722 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105161827 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130994098 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132631899 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092231272 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129432535 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10324314 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120317164 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090350108 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120351939 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131615033 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088052771 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116785453 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102081045 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117770739 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113144616 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140712919 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116496523 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101563223 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115520307 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091128254 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115593476 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112942106 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120147633 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089464307 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121545153 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092056485 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114522276 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087925071 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12021923 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086609877 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118437045 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117532494 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091576225 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117367238 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108207616 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117799962 seconds)
  done (took 12.065721567 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093206586 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11576704 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092926052 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116522785 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091192641 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11710677 seconds)
  done (took 1.691236944 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116667499 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12002612 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103620952 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123703388 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158856682 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103749654 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.133304358 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125968642 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107998109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13051419 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131426634 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105735863 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139455019 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122679471 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105204208 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122771324 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13147225 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102613231 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129237663 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097236811 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140347001 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122928259 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097130892 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135059565 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11903019 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097475746 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126990649 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103840017 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130199578 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12552778 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097307332 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120234388 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096358952 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126224368 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13258752 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096686622 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123751089 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119848165 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102211833 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120877739 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105181499 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124471125 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129110616 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09508009 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127474553 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12227825 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095606608 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12793665 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104788592 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12197349 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12112062 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096925417 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120702441 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095656945 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123470506 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124973008 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095359109 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132357498 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096215598 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12493037 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119620043 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094498262 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126734993 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119427616 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106173374 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121707867 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095931605 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124129669 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122894616 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097151834 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121458857 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093614852 seconds)
  done (took 9.442260613 seconds)
done (took 34.955258412 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.704542292 seconds)
  done (took 1.768928408 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.718425986 seconds)
  done (took 1.781616307 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.722443549 seconds)
  done (took 18.785905043 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.515686099 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.603870755 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.892985172 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182796993 seconds)
  done (took 3.258533667 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.98744314 seconds)
  done (took 2.069959921 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299459652 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262103735 seconds)
  done (took 1.630418823 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.818422676 seconds)
  done (took 1.893939962 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.374528459 seconds)
  done (took 2.445354072 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.339769006 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18721802 seconds)
  done (took 1.608079131 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.554388509 seconds)
  done (took 1.635180639 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.060128314 seconds)
  done (took 8.146281968 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271101229 seconds)
  done (took 1.363710185 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304074476 seconds)
  done (took 1.38744161 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.709323035 seconds)
  done (took 4.795090874 seconds)
done (took 53.648676409 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100383455 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128533789 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103236147 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125939174 seconds)
  done (took 1.538174871 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10207619 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123215561 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100750939 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123763738 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127410977 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097930383 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125274088 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10150579 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123527566 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096555488 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123578952 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121261849 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099780491 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124595293 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093720401 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126779144 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100125993 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124151205 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125566482 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09783371 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121621217 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097694965 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128169387 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094606109 seconds)
  done (took 3.789688915 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101590002 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120325025 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097832466 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120122787 seconds)
  done (took 1.532915154 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10211034 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144252008 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139858692 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101698457 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.146309518 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137494148 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092770014 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119130739 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095660618 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127129378 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09073875 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152189032 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139318514 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099665256 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129955684 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089056068 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119868524 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139097817 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101137712 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128842609 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095723911 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129083058 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090236869 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142412236 seconds)
  done (took 3.94309926 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171010703 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150510374 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141451874 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09622103 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162659433 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144333747 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088821053 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143072849 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087847244 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133833785 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119998381 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134133403 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132467225 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08790135 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115925085 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08728646 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13211565 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131254568 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090928847 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143680487 seconds)
  done (took 3.591557428 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09928395 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119451058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089219901 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117921052 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100326259 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122820799 seconds)
  done (took 1.743742151 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092221831 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116175307 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092317791 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116416373 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095674894 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116199105 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089633108 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116509026 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090731579 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11693914 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090386052 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115147917 seconds)
  done (took 2.343436829 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.468960975 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094169256 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122639668 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116147951 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.098337201 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117840405 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104292064 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120858606 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142553758 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090976139 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11706022 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093964757 seconds)
  done (took 2.782166356 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236840899 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12807068 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291164432 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279159198 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162184144 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173994635 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285023954 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16668691 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.229416095 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162237763 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206173986 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226473579 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152741418 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191911085 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140450924 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120493493 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229369118 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241819041 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154291987 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206016748 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228636876 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169172045 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1833133 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151914063 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113983101 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172838159 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124189204 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131791647 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207614101 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205850187 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190095607 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164371319 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149796695 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240789426 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255914253 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194637886 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28886919 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139086973 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173056751 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171188041 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267634054 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112998235 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234690816 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157863711 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132648348 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195403377 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168796724 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178722094 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15364363 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142078854 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222732805 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21493706 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.221344553 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112635308 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238819962 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162241497 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1720594 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196846293 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254275907 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226899838 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181347762 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094170537 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217677508 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196468576 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187013023 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.198222798 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182902103 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149928765 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194224409 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190215326 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194312953 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188186942 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188934386 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144017047 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170693847 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175102612 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201817584 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232083023 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205186868 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097108694 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171598131 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15266871 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135175186 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196109831 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100586006 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243076307 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149923361 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164660254 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22011258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162584944 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162893407 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20053818 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225196954 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14897628 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085666107 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157554743 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157549776 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193324967 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143277318 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160563326 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164849934 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132798015 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18062892 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096779329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205389421 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092526826 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174606713 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210903794 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101506848 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162758631 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153867056 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151627526 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1757336 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226938564 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116749706 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136324871 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210618427 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207289856 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152574899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180537906 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2044178 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14676996 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150978362 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201252189 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248016213 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141553786 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204940103 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158281148 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1368247 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105427597 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211671296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156393695 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161895539 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110103644 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.212150737 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209960958 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127072289 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111572115 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213889561 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107694923 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13393346 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163210945 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150588547 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140832152 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149054664 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.126231816 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212541609 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179680384 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156143091 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167200327 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154357662 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257309245 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143664304 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151403656 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123951893 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123451961 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193903545 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228887444 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105228803 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23601448 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174004695 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234885501 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171451273 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109085525 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179891672 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133143446 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09362921 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224021029 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170912997 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162964125 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197780752 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233093516 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184082596 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.21242162 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175658056 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176993761 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167030966 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158897277 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111930623 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162497529 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196711536 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097954146 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145201543 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136476968 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150122272 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117022417 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135737764 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224729874 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172442081 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192610204 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163639574 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152719792 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183692978 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131434983 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176450049 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181146973 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150770856 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200162732 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225902143 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1904259 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146778846 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202204384 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124039396 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126484236 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115646566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200972415 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108244647 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138757726 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168916036 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184117992 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181496778 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205949844 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216120791 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202115562 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194367826 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095586829 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170815139 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18717497 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204921627 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16363472 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144844346 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152301007 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180137188 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16104389 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258676531 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170684713 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17822268 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238432637 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123193879 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135061286 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154238005 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188430213 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155462229 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179671569 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149509249 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144224538 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164770803 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134560276 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164040211 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185633496 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164651866 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220326382 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123707238 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218018626 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100696639 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195888655 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161627733 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166985221 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08359514 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17732103 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235570854 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149785565 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17045761 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192387159 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134273588 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313326258 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212422294 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223471485 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138099051 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159746571 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160759223 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138269593 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201185856 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180566105 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162310537 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190794681 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161194761 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109550863 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143760204 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151217906 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153395902 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132784299 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151030365 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179550002 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11160973 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216885675 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164017951 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161094014 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175593024 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151529794 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116447793 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153204784 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247222684 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178163257 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240691381 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123652426 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.211472325 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208933925 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127785499 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105285823 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136016583 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180413785 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139204004 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193268078 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.220732778 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209889047 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18525449 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218869657 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112311306 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122896641 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159467969 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175964413 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239315496 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156167235 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161381572 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207087758 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145372501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105404055 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173962956 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231570433 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151418996 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201297398 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080478425 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308930209 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10246055 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136396841 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167194216 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208659092 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138806191 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189784468 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175747433 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171378344 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168074297 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152716478 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19514646 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250527007 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202321764 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213160904 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105548167 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158036959 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17849191 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225570853 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161280052 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141252865 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208584177 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197568371 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.228822702 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115314504 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202203715 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170942247 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159691262 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191611934 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136556403 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209817089 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137137689 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195037785 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155556619 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14636832 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179443934 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.221380147 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116599456 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222082708 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179419111 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137895963 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106889202 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200549609 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180540857 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159617546 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100263611 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212603578 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099249575 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223870691 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232986038 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137913935 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158037182 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150455091 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137636199 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158487799 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160879822 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114349751 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170068419 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208211724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138153979 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192820533 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235825792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171508738 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17617451 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148273464 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696083244 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134578632 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197203415 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159932458 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238827936 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150985107 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176488373 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161139256 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170594032 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199050434 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164397489 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232410911 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223534606 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182590937 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105447904 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160591697 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1935902 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117423898 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154732519 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171435417 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162993195 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155006452 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179772964 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200195702 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108553633 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143439771 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202062751 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158169996 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183534481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209827101 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113443079 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17518943 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2208692 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13466266 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181899938 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210204788 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145146527 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155591218 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13631239 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158160576 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265098294 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098671076 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232593577 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180285932 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161829674 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170757891 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150620106 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193051348 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160704606 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18045446 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148983398 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161850595 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159433749 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141434895 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131934149 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156132297 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170132438 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123323205 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160701323 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170755615 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198506573 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126676245 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14584693 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203014952 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193402024 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248137262 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140007962 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107867186 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165492772 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154185461 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18134876 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210332828 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108975609 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141128108 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13998403 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133087499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143928963 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159022089 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202182412 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168852439 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237770391 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110963155 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282290051 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143253806 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157218321 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090958493 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135402413 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151739948 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148025102 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162319168 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197001044 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270307818 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148256858 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10805289 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153136479 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128375642 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10974855 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169049295 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166370898 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179076824 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149183463 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112133919 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161342594 seconds)
  done (took 83.955160603 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165635662 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135706122 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151004954 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205582518 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180642202 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293795619 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214354568 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256702831 seconds)
  done (took 2.78477125 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094136233 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.150158577 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160528019 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135476924 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09271872 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120711156 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.351296504 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136265902 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.120552096 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122662925 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176358551 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095253742 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.560940838 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091370475 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120345625 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.111464891 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093564849 seconds)
  done (took 3.911614347 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.483263377 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.750088222 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.521114826 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098496535 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.318990868 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113480814 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.975702215 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.204159368 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118677916 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.500608304 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.781883164 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.171295594 seconds)
  done (took 19.2276985 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100351326 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122890742 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109186497 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.138731122 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097157959 seconds)
  done (took 1.763363951 seconds)
done (took 133.988574278 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105330069 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409473032 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072101562 seconds)
  done (took 1.707653635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109238256 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.139463844 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109532844 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138405055 seconds)
  done (took 1.697191289 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099400617 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129067135 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110650809 seconds)
  done (took 1.533705149 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.328037865 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193912301 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165979621 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107536587 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13083498 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104054697 seconds)
  done (took 1.539599371 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099487787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130193436 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09886737 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132040635 seconds)
  done (took 1.659773367 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095496088 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071741772 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104658146 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075406004 seconds)
  done (took 1.542244158 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11547192 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134761005 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10438871 seconds)
  done (took 1.554450798 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.131221319 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.141164079 seconds)
  done (took 1.473206566 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107206475 seconds)
  done (took 1.30153927 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119395661 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171856553 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192137907 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.167856348 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233251462 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167574277 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143356734 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.1154013 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133439972 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.146622682 seconds)
  done (took 2.790290227 seconds)
done (took 18.789611102 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10615129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.520002484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413953087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118113807 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725330016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380461692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041289322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148682478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16824844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094442048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141500509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6740126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.032274038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.46998001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990646642 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.4740593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704886513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09444455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122048124 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094890988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027136861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092891939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123983832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093904093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706440762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428032232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096422447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.472180309 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092907373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129181827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383120886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125713074 seconds)
  done (took 17.475076033 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097190675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175927402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098891643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140669187 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125301918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095475899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126506431 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09527083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182485187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125030864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11171962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124507533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127478697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097308587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144715248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093788654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127445643 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093672082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123734585 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123013249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113287735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122781978 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094673477 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124144561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094626411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138570337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123416611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095022814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121625261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100348958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130143197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09530697 seconds)
  done (took 4.986373163 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141728789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185421599 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129879158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126766346 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170285221 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125765832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.2016907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118423105 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186789081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126132692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141432168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093931745 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159214358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124076884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116675316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123605937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097438092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124350122 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093431258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125825573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141645512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094587141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123597379 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094356232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1252639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108307422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127043953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122374782 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094843558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129125193 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101203397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125858292 seconds)
  done (took 5.308251039 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09881194 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127812521 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109901504 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139834771 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095467692 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128050722 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096951015 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127090365 seconds)
  done (took 2.127097318 seconds)
done (took 31.093436085 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1138091 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129094868 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107580745 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135717296 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102808241 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134272583 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092280998 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136209 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134250104 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104194441 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138746753 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093361287 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124183706 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092270581 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137542438 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098172019 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13521449 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102103408 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136267061 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13403668 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09562397 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135385838 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104915656 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134733726 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105723455 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136336194 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13910247 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101350755 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124562856 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09551096 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126296749 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105278768 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126141913 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106284284 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129615164 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097923236 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126041134 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095046483 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135502423 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133976731 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100803728 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.136016276 seconds)
  done (took 6.170837455 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109701238 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140912288 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106613 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081903267 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119876095 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082132445 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140501068 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080027192 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112047332 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109024273 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07460621 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108848113 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079352149 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103146193 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078810186 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076522021 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110498145 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077364374 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076398631 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107579242 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080686983 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072979631 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110383243 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079357601 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075406703 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112333217 seconds)
  done (took 3.716107754 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102081877 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137246067 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112873328 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185901348 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162519259 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099518831 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135239774 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140661105 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110457052 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121265853 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098202098 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151504004 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111029727 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131448794 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091874543 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138956618 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.147154858 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094685594 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129587529 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113481903 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141514288 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102398738 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145313413 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134951532 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093913594 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125311082 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097101928 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137906692 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098375196 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132809535 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127463733 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097250549 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125126805 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106046076 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12863335 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095592998 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144586481 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132803101 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103256053 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123592404 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097996759 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124118043 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114406289 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170857565 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091758926 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133944884 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129770177 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104700781 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122872013 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111143713 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134575251 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092261143 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127594606 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091945971 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124667916 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135652767 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09568797 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124806915 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103830537 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125740887 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105636582 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127866087 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108984489 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124178991 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100688953 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123979832 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092727755 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123602673 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14596451 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095495213 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166447454 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093919164 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125442555 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131724431 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102330728 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130051515 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094900424 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139473649 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102736344 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128058331 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102067284 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127652694 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124795022 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112424404 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126234029 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095401934 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123946219 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100016569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126766039 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094579004 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139144287 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093615671 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127773846 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140563871 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094534886 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124272584 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101658001 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12960347 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092946855 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13779677 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098473675 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125469749 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.134176601 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095085933 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126077649 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10403296 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129062079 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092713719 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129749917 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098713372 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125364187 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094737934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127696169 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094382173 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134303271 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129818277 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098693999 seconds)
  done (took 15.104796047 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230542997 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217634279 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.240898129 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263818645 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137358286 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115290187 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213541357 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157577905 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125645913 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162555564 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163655651 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183067483 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.141103513 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183620375 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.144344404 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12319814 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11386013 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167753467 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217030229 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294136802 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113164885 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.13550379 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165235248 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163248354 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106587702 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136126097 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141003445 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106589781 seconds)
  done (took 5.892604595 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109626498 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159950674 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098676072 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147523296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150859016 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09348244 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129929581 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094304566 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13794736 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137271157 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094636164 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131622559 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099397574 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13519987 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124235677 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104048829 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134565725 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095604902 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127567254 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098319966 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131994936 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101522904 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130066568 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122042794 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103631794 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122911086 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08686198 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144131699 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122695204 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117114987 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122392639 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100701093 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136072646 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095266692 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125040862 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096000877 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128216074 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095627255 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127332488 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091738151 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124265485 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078292423 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123897064 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1377062 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102069028 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080007543 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132331767 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129608482 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09650852 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121928623 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097853788 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126639627 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09915381 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131369197 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099965178 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125985955 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096998604 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118184991 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101421185 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127509967 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086208185 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123185728 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.101168063 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119417372 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102135727 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130445699 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093914006 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127543653 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098918066 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131886284 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096239387 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128919833 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091690242 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128430854 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095768622 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130921833 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096754464 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124055404 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123258746 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096432819 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076277438 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125787959 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075097086 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12808959 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092978646 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123738756 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09664228 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132570736 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138901242 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095944869 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133603022 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095098064 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12421839 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09742269 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115066818 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097946097 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140905683 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141562733 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095720514 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123772602 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108780097 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127627838 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093515628 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107619334 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102292577 seconds)
  done (took 13.21408299 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129007259 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156397924 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096112154 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.146093041 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157861145 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159289137 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103348044 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132495716 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096936856 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143833343 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095013899 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133855115 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098782879 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138779941 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158478375 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104985689 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127198224 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108118743 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135079904 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172456522 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113435999 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14471657 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108119046 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12771365 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129450912 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112491163 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16265471 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108945692 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13986438 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143043152 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110073336 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16331339 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144662157 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099892987 seconds)
  done (took 5.646429289 seconds)
done (took 50.949934764 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.325882125 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.552065181 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.311400204 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.34616694 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.330778437 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.356119667 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.323955973 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.309495165 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.539273897 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.312121325 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.549236757 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.079593149 seconds)
done (took 60.571241999 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.370615641 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.443357293 seconds)
    (2/2) benchmarking "String"...
    done (took 1.57332343 seconds)
  done (took 4.251177468 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.665877807 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.293559601 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.576316694 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.308248061 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.309151425 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.606147199 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.14317504 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.713643129 seconds)
  done (took 29.184175379 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.308639401 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.731383664 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.24518685 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.236735719 seconds)
  done (took 19.758050617 seconds)
done (took 63.46373797 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.292032611 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.367930813 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.317956759 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.289499161 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.453523509 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.336440731 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.714275527 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.330628791 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.332394314 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.311337574 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.332250004 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.340233074 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.313321013 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.7527096 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.322865866 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.314195172 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.322131274 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.84324215 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.724315414 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.31180612 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.322756619 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.347256343 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.313862924 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.319683977 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.326962687 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.301031385 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.309074695 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.318862205 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.926523152 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.304019688 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.321229284 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.888329292 seconds)
  done (took 194.558061775 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.301028295 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.173589645 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.271674626 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.360905486 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.629610434 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.500875973 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.437072519 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.735821911 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.326617327 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.30549706 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.514939291 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.302209868 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.577235616 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.301702188 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.309750045 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.386088101 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.524574018 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.582202398 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.320912469 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.524675873 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.303331199 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.573109781 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.42644701 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.479449419 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.334613768 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.371105918 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.315936732 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.328345047 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.495662939 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.450171453 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.309842211 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.325409035 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.94932459 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.164845289 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.328687283 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.338601905 seconds)
  done (took 153.112358478 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.604428973 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.302611034 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.30312214 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.302667537 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.337222115 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.304009863 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898620546 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.903094119 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.810804392 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.701528183 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.307011386 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.364070318 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634539947 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.30788991 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400405636 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.317123815 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.305296356 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318854159 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.348465859 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.308860952 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.304806873 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898550934 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.320870119 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.378713 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.311666528 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.302909614 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334882369 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.693657996 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.302624271 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335592049 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.635464118 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.35360325 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.301772181 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.715018223 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.270920991 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.415624987 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.302357351 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.303703335 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33498989 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.301870348 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.58319427 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.303962639 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.302690732 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.30291916 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.306445895 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.998764048 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.307664113 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.887790986 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307415436 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.301450072 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.306387784 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.303399532 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.769247354 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.033148306 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.324191374 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.301566734 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.304920825 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.302393577 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303548821 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.335206471 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.77878411 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.3993539 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.321600648 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.306138102 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335519814 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.302532979 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.459564113 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.304880385 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.851203546 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.378640521 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.405285942 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.874177227 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304627411 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397623635 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.421109871 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.300124581 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.29960565 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.300563858 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.300299047 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.41084188 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.300410109 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.716159992 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.306620525 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.301258494 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.359956637 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.397293895 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.299699819 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.683175905 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.303780416 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.299776555 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.049437681 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.397272152 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.300042891 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.29924603 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.300445703 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.715970989 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865736922 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.560945347 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.305089054 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.706910639 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.305101321 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.300150955 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.734451565 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.842089108 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.946024567 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.300684969 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.411884285 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304649408 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.301873833 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.300116601 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.329101592 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.32031959 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.360599134 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.30086075 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.699450665 seconds)
  done (took 359.395274041 seconds)
done (took 709.903502591 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.969582243 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.955323123 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.075535507 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.95285751 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.935622442 seconds)
  done (took 11.114737965 seconds)
done (took 12.340171646 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49503063 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494686969 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.363200658 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.495670431 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.329624741 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512615852 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.474388303 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.324775643 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40648021 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.3843285 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404330823 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.353641378 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.329007263 seconds)
  done (took 19.594275138 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.633311496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.63975062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.365878337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.639844728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344001793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.628422155 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510019495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.52310083 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.516971657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337750175 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.31360255 seconds)
  done (took 17.680391809 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.626501447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.637533901 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.370954868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.66383314 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344569787 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.634328167 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510251445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.523746146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.521982392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.335139471 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.315783944 seconds)
  done (took 17.710400005 seconds)
done (took 56.210828896 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.30956591 seconds)
  done (took 2.534978974 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.340845539 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.504942142 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.326685706 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.312800043 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.309024 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.306916627 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.310815757 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.30828425 seconds)
  done (took 11.946405542 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.305746168 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.309302806 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.307578461 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.307620516 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.30789136 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.307592786 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.30671301 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.304842124 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.305091572 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.306496918 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.305296391 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.305470594 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.305438915 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.306459665 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.308558603 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.305690332 seconds)
  done (took 22.131958 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.308489091 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.30485351 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.304802484 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.306185556 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.30566066 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.305744395 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.307361035 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.305953034 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.305112123 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.305511072 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.304684733 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.305498582 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.306628402 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.305431333 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.305678533 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.306628493 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.305645643 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.305684795 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.310089884 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.306781905 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.306540369 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.306522393 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.307161051 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.306622849 seconds)
  done (took 32.57673311 seconds)
done (took 70.41457837 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.378904389 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.932808743 seconds)
  done (took 9.537923954 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.309077346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.308218666 seconds)
  done (took 3.844466509 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.309610238 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.30949035 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.309622517 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.308470583 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.309860569 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.309195048 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.309718466 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.310868337 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.309601132 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.309823659 seconds)
  done (took 14.322799215 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.310246703 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.311099489 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.307719658 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.310916802 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.309946603 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.307975986 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.310551411 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.310114696 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.309106817 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.308652571 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.31135819 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.308183854 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.310907155 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.309041297 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.310770541 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.308344237 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.308156063 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.308852916 seconds)
  done (took 24.799137191 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.312017202 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.309985471 seconds)
  done (took 3.850623624 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.309491996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.308021941 seconds)
    (3/7) benchmarking "month"...
    done (took 1.309505008 seconds)
    (4/7) benchmarking "year"...
    done (took 1.308638619 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.308064406 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.308118671 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.310140039 seconds)
  done (took 10.390579563 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.313702024 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.491279938 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.571010121 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.914187365 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.313959578 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.316878805 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.166851908 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.315044111 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.31633668 seconds)
  done (took 14.948538154 seconds)
done (took 82.919633676 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.330784886 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.326087461 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.466981864 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.322889424 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.324399066 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.649690023 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.362938925 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.43125827 seconds)
done (took 38.443251712 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.305776362 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.034229252 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.045272658 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.310426067 seconds)
  done (took 11.621242763 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.291350128 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.230141527 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.307451781 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.31859511 seconds)
  done (took 18.378423306 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.318088064 seconds)
    (2/2) benchmarking "read"...
    done (took 1.647131824 seconds)
  done (took 5.195746861 seconds)
done (took 42.730283482 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.313072241 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314142042 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.315002452 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.311857259 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.313374491 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.310344443 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.31101211 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.313570325 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.311314965 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.313988088 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.313756128 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.314673236 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313548615 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312173611 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311837388 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314143604 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.312733506 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311336347 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.314483751 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311717526 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314089288 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.311832024 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.312205251 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.313985706 seconds)
  done (took 32.741259348 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.315161755 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.311869225 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.314766911 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.315312942 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.311844871 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.314546943 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.314954155 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.311098037 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.314508307 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.316137382 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311929275 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.312267563 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.314285361 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.312999061 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314735542 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.311554555 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.315850415 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312615402 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315722721 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.312837915 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.315073695 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311883855 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.31332598 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315705087 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.313216089 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312918656 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.315725919 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.314229043 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314468073 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.312014438 seconds)
  done (took 40.64565064 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.321969008 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.323801369 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.316338236 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.316302969 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.316057489 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.316612519 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.317426007 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.316791496 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.315507955 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.316095184 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.314929305 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.317420462 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.316881109 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.316408399 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.31640167 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.317327917 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.316879168 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.317205656 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.317572827 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.317014419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.317342439 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.316566577 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.316505875 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.31764508 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.316973092 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.316681155 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.317890621 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.317893321 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.317459787 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.318609956 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.318190648 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.317540722 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.317407838 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.318095446 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.316593994 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.318819095 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.322721232 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.324877542 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.317442374 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.319605326 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.318177245 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.319391451 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.31853683 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.319363518 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.318530396 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.318298313 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.318297284 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.318749048 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.31907996 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.319222205 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.319622528 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.319110658 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.319067404 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.319439429 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.318852763 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.319419426 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.318813709 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.318853088 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.319359881 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.318877902 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.319702082 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.319795967 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.320550712 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.319010347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.320900568 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.319973874 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.31997932 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.320994223 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.319493665 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.32039568 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.320133285 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.31999501 seconds)
  done (took 96.165912074 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.321832943 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31975744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.318977872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319131883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318175568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.320672725 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.31839895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320671028 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318113679 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.32170714 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320923199 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.320344342 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31809011 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.322510212 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320605394 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.319210864 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.32067144 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318122079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.320981106 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.321794926 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320668633 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.319534034 seconds)
  done (took 30.27987326 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322834543 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.322983153 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.318561394 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.321786754 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.318830791 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.322762857 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.322257899 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.323726793 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322617646 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319765141 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319949716 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323316954 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321412114 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319606226 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318819007 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321473441 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321896171 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.320970071 seconds)
  done (took 25.022135883 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.321113674 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.319320549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.321848878 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319208365 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.320726019 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.322729608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319851126 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.32315434 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.323681374 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.321113136 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.323849135 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324066022 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.323830011 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32092258 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324153066 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.320864616 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.323487277 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321228274 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324112345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321850495 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.321609169 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323994978 seconds)
  done (took 30.326581788 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324875951 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.324947923 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.321811169 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.321753835 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.32116384 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.325365952 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.32390193 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.321828082 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.326219797 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.323970528 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321631547 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.323773015 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.323300574 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321656656 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.32237771 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322299442 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.324546033 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323849455 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324711744 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.321803241 seconds)
  done (took 27.708067328 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3260966 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325999513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.327308369 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327206045 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326534453 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.326752615 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326720674 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.326699906 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326802261 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.328341928 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.326256454 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.327184539 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32776441 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327708267 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32729806 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32762693 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327784752 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328627646 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328553154 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327545361 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.328644228 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.327658746 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.328450045 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.328230822 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327849977 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.327818117 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327637676 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.327440266 seconds)
  done (took 38.411530425 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328146992 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.327226537 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.325081215 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.325623815 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.325045499 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.324579866 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.324507772 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.324583405 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.328298924 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.324509685 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.327842367 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.327805135 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328009798 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.32796653 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.32776029 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.32877205 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328347761 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.326065014 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326258194 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326817381 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.328534348 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329304623 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.328295023 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.325711672 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326453201 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.328813843 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325635835 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327174634 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329190138 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326405509 seconds)
  done (took 41.05360187 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.348910415 seconds)
    (2/2) benchmarking "in"...
    done (took 1.348702433 seconds)
  done (took 3.943626265 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.327263206 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.3295841 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.329386085 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.327337992 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.327947448 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330402637 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.329535357 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326927583 seconds)
  done (took 11.874532191 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.330370819 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.330711169 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.330572966 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.329845901 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.331299967 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.330535875 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.337309742 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.350794035 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.331728985 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.331583658 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.337486106 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.338816803 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.333341512 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330647341 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.332207147 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33305783 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.331920861 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.332547344 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.332386184 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.331459128 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331592779 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332799611 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.332694024 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.328764216 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332384986 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.342063564 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.355279018 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.33166736 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.331210415 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.334257937 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.331788949 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.328096241 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.332035163 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.33225331 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.33294845 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.333580087 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340737459 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351383402 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.338925105 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.351933359 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333534457 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.330016763 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.332917748 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.334608881 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.334236652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.333388073 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.333647779 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.331005165 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.332350621 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.336606762 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.338537326 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33307537 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.329951906 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.335142251 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.334466448 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339897169 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.354088319 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.337464705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.343087704 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.343379859 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.365809215 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.358439678 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336149497 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.33517404 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.344630815 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.357118829 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341686864 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.351647157 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.333233979 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334873556 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.340317829 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366816218 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.359894691 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.338885322 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340910507 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.34156323 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339215572 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.33755166 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346554989 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.3595572 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.336366554 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336606122 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346396115 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357287529 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.336814941 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.336011578 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.336961406 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.336161809 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.338410422 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.345811142 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.356778273 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.337520868 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.336402226 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.33545276 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.336936828 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.337438325 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.336783422 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336144322 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.334110598 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.33697993 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337128646 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.340361678 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.3449712 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336869819 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33647989 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.343528865 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.355991858 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336878902 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.342473431 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.337901285 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.338311131 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.339552611 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.342797506 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.335745255 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340273281 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.345346351 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.338434972 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.338786583 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.337475749 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.338735847 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.347279037 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.36253048 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.337784283 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.338874124 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.342370396 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.349465857 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339174515 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.341389883 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.340214139 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.336164739 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.336020866 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.338929577 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.339115945 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.338523616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340218543 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33972586 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.335581946 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.338732143 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.33887586 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.340557619 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.340194279 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.338862814 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.339288755 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.340417003 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.339646349 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.340418176 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.345889482 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.357929945 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.340971961 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.34034351 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.337190768 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.340611926 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.340029271 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.340906429 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.340649333 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340275923 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.34043652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.340327013 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340454695 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.341439716 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340624171 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.341672119 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343561948 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.340947436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.344388271 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.340486014 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.337680461 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.340490038 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.340417867 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.340117687 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.34100242 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.339875024 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.344154026 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.350043534 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.34171541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.341918925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.343760934 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342171146 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.342484447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.34184373 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.345166393 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.350045306 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.343416647 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.349091385 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.361917689 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.343149704 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.342547376 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.342772401 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.342322847 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342997445 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.345370418 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.350361579 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354514227 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.367499844 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.344052797 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.346961714 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.345473835 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.347525402 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.346471516 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.344669828 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.343100917 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344423744 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342704238 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.343889824 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.344769336 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.344001693 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.344137778 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.344075094 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.343585121 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.344911303 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344606801 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.344682119 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343787179 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.342277482 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.344659234 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344828992 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.344131676 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.341670709 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.342900772 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.343296154 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.34419287 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.345918865 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.350244316 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.342195978 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346678523 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.345665551 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.345278019 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.344634547 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.34616134 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.346862388 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.344946658 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35168995 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.365176898 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.345767735 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.35167704 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.364908201 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.345065724 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.348832885 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.34513831 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.342944646 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.348619136 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.353859956 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.346355729 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.346011317 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.346305215 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346049008 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346183041 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.351691616 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.362703993 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.345443121 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.346024434 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.347619778 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.343300629 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.346258325 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.347316587 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.346340176 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348002493 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34650849 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.34655105 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346453188 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.346702253 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.348168947 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.347223361 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.350345045 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.355697176 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.351954972 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347471185 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.348740066 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.348791766 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.351642477 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.347650457 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.347052465 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.348947203 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359233845 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.371839559 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354434874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.367208307 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.347458178 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353653435 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.368010053 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.351072566 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348858475 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349332351 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.348395934 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.34881607 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.345458599 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347820346 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.348977174 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349188145 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.350261798 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.353839715 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.349044158 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.348165964 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.350303367 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.349806941 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.349258135 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.349045209 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.349131658 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.350571136 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350836228 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.348621629 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.348652354 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356482943 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.369330976 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.349210203 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.349266834 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.349997826 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.349046528 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.35053027 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.350501917 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.353207747 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.358293907 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.352995962 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.357662141 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.352446761 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359523869 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.351005066 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.353544191 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.359234973 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.348755879 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.349573652 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.349581359 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.351397534 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357887458 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.371298657 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.354920798 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.355711083 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.352350939 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.352988281 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.351964445 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.352722411 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35230949 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.353241675 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.360238151 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.373162662 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.356171534 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35392023 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.349732317 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.353434777 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.352681579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.351258408 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354922456 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.353127072 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.353298817 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.353532072 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.35177143 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.353024114 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.353589772 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.353492519 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.351220139 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.354116953 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359604043 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.37533806 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356631266 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.354147162 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.360540544 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.373175657 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.360589324 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.374578501 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.354658236 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.354436332 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.355686911 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.355565667 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.354084359 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.355435253 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.355366692 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.355688247 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.359146903 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.354309871 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.356598149 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.355003168 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.355705096 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.355000579 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364448188 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.377759645 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.356298136 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.358758266 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.352337771 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.357455096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.359290256 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.355073042 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.354530517 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.35783027 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365380883 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.363073585 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.355891597 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.355508355 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354998666 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.356488903 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.355922772 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.356037298 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.355874931 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.356127369 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.356611017 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.35670518 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.358944118 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.355964609 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.356325009 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357947293 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.357876432 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.365547649 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.375563691 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.35801174 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355849123 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.358040702 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.356481359 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.356227742 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.356440927 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.357146837 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356688366 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.358573295 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36349575 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.363950263 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.35766931 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.355807289 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.358344743 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.358323384 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.35739115 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358971806 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.359656618 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.358943444 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.357566497 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.357830588 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.357826598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.356638669 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.357515137 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.35827303 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35909797 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361637205 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.365268357 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.35788683 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.355703628 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.359719454 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36004944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.358051319 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.359821332 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.365572897 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.381835446 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.370145527 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.368607329 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.36322127 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.359553055 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.362717982 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.367012013 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.359280391 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.35932198 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.360062572 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.359501868 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.360811272 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.363510647 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360300759 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.365462089 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.379623672 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.359528296 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368103949 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.379697311 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359988245 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.362915991 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.363481263 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.36005972 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.357694339 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.361052909 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.360039272 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366614766 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.382333029 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361761134 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362636425 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.360702328 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.362891803 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365804838 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.362370428 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.362206031 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.358225436 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.361889555 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36211039 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.362523736 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.358847187 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.361498482 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.362010987 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.365069575 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.368449407 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.360279759 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362841242 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.363240771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.363027304 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363218211 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363051131 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.360721281 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.359935603 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.360907611 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362684869 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.362566768 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.364443534 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.361791307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.364277717 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.363887709 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.363496378 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.366402488 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.372285103 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.370345711 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.361762687 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.363461897 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.362447143 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.364724355 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.362719949 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.364531582 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.364177003 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.364926059 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.3633211 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363780491 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.363920497 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.366479243 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380787541 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.383319098 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364363651 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.363521843 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365638 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.364392001 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.361556343 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.364414884 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.366694607 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.366908582 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.372443191 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.365047558 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36978351 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.383858397 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.365711476 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.368292842 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.368438079 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.372758963 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.366039914 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.364807944 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.365740388 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.368789583 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.380577005 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.364295245 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.374849593 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.393078694 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.385370465 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.365904097 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.36571814 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365828534 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.36478097 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.366829765 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.365305159 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.365675121 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.365963769 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.365732357 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.36710208 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.371114464 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.36605932 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.368001818 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.365110009 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.366277474 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.367870827 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.363159192 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.367105962 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.366957856 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.366021877 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.367659734 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.367783963 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.366828239 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377873251 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.393089959 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.367358237 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.36655294 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.365824329 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.369699384 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.370786395 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378660507 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.375811785 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.36728908 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.368525057 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.368175592 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367841801 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.367736125 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.368410237 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.367657568 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367858076 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.36527651 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.379812312 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.393240539 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.372535848 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.368337058 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37017915 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.369934297 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368230354 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370090212 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369493826 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.371359072 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.372500612 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.373924152 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.369056116 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.368767108 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.372407053 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.37794987 seconds)
  done (took 807.499810461 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.368564903 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367152247 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367104346 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.367540908 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366308433 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367300786 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36606147 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367175603 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.366806807 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.366833475 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.366752665 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367950449 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.367482178 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368485092 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367477703 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.368203632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367485375 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.368531332 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368198958 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368520012 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.368007579 seconds)
  done (took 30.001856988 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.370721761 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.36860547 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.367583728 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.370815299 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368722503 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.371241841 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.369008181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370173854 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.371428886 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36780604 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.371442078 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371847961 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.368835097 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.368316154 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368200666 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37148658 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.371578768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.369050697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.372191044 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.369126351 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371508653 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.369563672 seconds)
  done (took 31.424624941 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.372935352 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.371222433 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.372067662 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.369125859 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.371814894 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.369417301 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.372270412 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.371866427 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.372635975 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.372113336 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.371287909 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.374108281 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.380204312 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.378126193 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.374261598 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.372993084 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.516895262 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.373229371 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.374156944 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.373296882 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.371409437 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.37813242 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.389126044 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.371436215 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.372026894 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.372786188 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.373351426 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.373703487 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.372956624 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.374680734 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.377367915 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.374090687 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.371714527 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.374102863 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.373221277 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.374413709 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.377581105 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.37390227 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.371055663 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.373400045 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.383799335 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.394073792 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.373647622 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.379781839 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.392804157 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.374948113 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.377690848 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.3832557 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.372104407 seconds)
  done (took 68.812322915 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.37565339 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.376090542 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.372190739 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.375271339 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.374665617 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.375122459 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.374577739 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.375712597 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.372583629 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.371490629 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.376144973 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.373541291 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.372817284 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.376336455 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.375794636 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.372692607 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.373546321 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.371915776 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.373756271 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.373866187 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.373549017 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.376786287 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.376341282 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.375018553 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.376779834 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.374469811 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.374562791 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.376765258 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.374812637 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.374688713 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.377024443 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.376926106 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.377481485 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.375336557 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.375044937 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.37782386 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.378096916 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.375508857 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.378890539 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.375581022 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.378695526 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.378580298 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.377446255 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.376963786 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.375438194 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.375424757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.375038442 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.375215051 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.37582944 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.378903399 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.378364334 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.37585483 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.378333673 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.376939469 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.378307128 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.379117548 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.375114005 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.375539169 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.378999356 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.37539566 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.375010558 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.378047374 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.376232043 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.37799577 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.378250392 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.3762656 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.376340976 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.378278939 seconds)
  done (took 94.850337992 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379987492 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.379935531 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37958198 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379336358 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379323872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.379029679 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380241486 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.379064992 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.379463018 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.379437713 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380475979 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.379085355 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.379236603 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.379150003 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.379154719 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380039812 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.379149658 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379945503 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379588544 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380283821 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.380434252 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.380771884 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.380536797 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.379686019 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.37953796 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.380401909 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.38060755 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381148103 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380158719 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.380473735 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380891875 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.37995327 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.380331017 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380250251 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.381614208 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.381350134 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380794122 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381442905 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.382027994 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.381085504 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.381628337 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.381928973 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.380791047 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.382071629 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.381730746 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.382028238 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381720595 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.382859076 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.382063126 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.381871091 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.381980667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382565091 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382712533 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.382639127 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.382212371 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.382323147 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381459757 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.382375238 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38447352 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.382301992 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.382175955 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.38341951 seconds)
  done (took 86.908847254 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.382550803 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.383290575 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.380351222 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.380135121 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.383269668 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.379744757 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.382478249 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.383570654 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.382069672 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.383745222 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382628723 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.381086171 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380383712 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382239546 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.380963641 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38094848 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.380826929 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.380969787 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.383845845 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.381541096 seconds)
  done (took 28.931687336 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.381763446 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.384044292 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.381279733 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.382432816 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.384108015 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.381860147 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.383897038 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385718704 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380909182 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38435175 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.383718454 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.385997887 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382128521 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.38254378 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.384080812 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.382677904 seconds)
  done (took 23.428326389 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.382871191 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.385023076 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.383992008 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.385673146 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.382067522 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.381876611 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.384428269 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.381703175 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.38289564 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.385797777 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.385813385 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.38653063 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.385902065 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.386354575 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.382839578 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.385531181 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.383077981 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.382882984 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.385510793 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.385394094 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.383989045 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.383361656 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.386719011 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.385952517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.383566115 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.384357266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.384027197 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.383695602 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.383611813 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.386615153 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.384503226 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.38463931 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.384176118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.383741776 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.386848462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.384196786 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.387163944 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.386887683 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.386628045 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.38689865 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.387680683 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.38445006 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.387291316 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.38677437 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.384768445 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.386917255 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.38451328 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.385058125 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.384407958 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.384808248 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.387071493 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.388303326 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.389196408 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.388483967 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.386467986 seconds)
  done (took 77.483816982 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.38904862 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.387892 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.385351943 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.389142939 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.388060491 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.386481042 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.388506746 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.387485926 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.38600391 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.389757308 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.387127683 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.391481457 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.385268472 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389277292 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.386954782 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.388867089 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.385138202 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.386523944 seconds)
  done (took 26.27859769 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.387900987 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.386402432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.38982607 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.387244903 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.387239751 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.390754678 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.387671493 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.390411342 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389180633 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.387787967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38804671 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.390527389 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389740994 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.390479894 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.388836281 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.387521098 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.389972092 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391015352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.387885663 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.388673429 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.390996604 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39090856 seconds)
  done (took 31.860619572 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.39054424 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.390757664 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.39000266 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.407551352 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.410516938 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.414235572 seconds)
  done (took 9.707049311 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398731274 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390799233 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.38919099 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391702067 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391417165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388347496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389715842 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389699953 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391603043 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38949086 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389588323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391987664 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391136638 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389760753 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391980524 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392098641 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389210094 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389599466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390282306 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393403191 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389297555 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391806169 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390683733 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389138446 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389653157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389703647 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392847229 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389450713 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390032176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391418542 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392647629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390258994 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392613152 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391762926 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394151969 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392596523 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390697624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393196097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393029235 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391088656 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.39385002 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393307037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39411867 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390963238 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393929846 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39075477 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391169278 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391774273 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390600287 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393988493 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394093479 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39171851 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393607232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394343536 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394330738 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395295776 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392739015 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392157833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394564057 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39231806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391789009 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394468273 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393061128 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392498689 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394662501 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393272227 seconds)
  done (took 93.193475003 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392409031 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391415315 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391611602 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393114293 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391935612 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39243835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393156148 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39268342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391924862 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393281941 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396185968 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392573506 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391969544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393053864 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392508161 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392157066 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392697478 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392857892 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392900653 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396792863 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393510422 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393462723 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393408326 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393153448 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39438765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396287388 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393138054 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394053579 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393693011 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394987548 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394181522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393682353 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393639646 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.394177062 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393792698 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393759511 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394023337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394025984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394800761 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396808956 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395000658 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397006561 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395179725 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395289873 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395068806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396159458 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394624918 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394026121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39575091 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396313424 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395079306 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395633331 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396039791 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396006554 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395695455 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39556503 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396579618 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395525792 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397277289 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399012731 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396897285 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395554882 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4004558 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397294197 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396083317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396314576 seconds)
  done (took 93.348573522 seconds)
done (took 1883.132767118 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.46104116 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.41476821 seconds)
  done (took 14.185684118 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.562094812 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.514625245 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.3977792 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.409143518 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.398415659 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.415600293 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.404376054 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.397653854 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.396484821 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.397050207 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.396557772 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.583532263 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.451512263 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.397013768 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.397887697 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.493106005 seconds)
  done (took 44.328101756 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.424273387 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.403868119 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.517565505 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.422134174 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.424118898 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.591264363 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.460004415 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.407007309 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.574305336 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.444259108 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.959299356 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.423899308 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.400568034 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.512466358 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.420006721 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.591879791 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.658223105 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.962193349 seconds)
  done (took 31.907080478 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.857124269 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.423860477 seconds)
  done (took 9.592649781 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.414647611 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.431294959 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.417320235 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.426067855 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.426817197 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.405114519 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.475694841 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.477542826 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.457345214 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.410581653 seconds)
  done (took 65.660767221 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.423043074 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.401646682 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.401874072 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.398272001 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.393650904 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.410812689 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.401534985 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.398803661 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.024611126 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.530068758 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.405043263 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.407519962 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.419530612 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.403480401 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.399439544 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.437995096 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.555509157 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.399957708 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.399049554 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.406198596 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.401094343 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.499825493 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.445595284 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.400871325 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.528913151 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.05697741 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.404289176 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.40786617 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.535258252 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.40231743 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.401602721 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.402316989 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.402892514 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.010120644 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.911516797 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.411536853 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.425904423 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.410535297 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.398911398 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.54094481 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.403708663 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.408105595 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.395589532 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.908972058 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.535582415 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.522755913 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.592314317 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.421432782 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.404201131 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.463804812 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.405935989 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.405129325 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.432675862 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.161871269 seconds)
  done (took 115.192692178 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.401800522 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.790050434 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56669046 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.416947845 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.026270779 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.059530113 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.41505384 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.686619228 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.424689315 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.397298749 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.695125492 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904388323 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.419471334 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.473405383 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.45024265 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.401053265 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.411048929 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.137918214 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.416394631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.402168993 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899910069 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.402549794 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.413448922 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.551692813 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.437694658 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853590526 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.825317847 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.868667794 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.41424539 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.398695733 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.864557909 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.417875224 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.461168434 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.400655434 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.661206378 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.756165496 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751422532 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.420097512 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.423180879 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.402048209 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.410566435 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849030337 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.757058718 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.416076815 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.414715 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.873214796 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.415985618 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.401438255 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.404421979 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.604272108 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.272063683 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.399804111 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.819201015 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.400630992 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.76605339 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.47446546 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.47788446 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884308801 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.416710293 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.485302476 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.44122601 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.399794581 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.407919071 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.399849814 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.404245495 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.746940094 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548680359 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.405350881 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.745872826 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877910363 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.417558387 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947939405 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.229524268 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.416201943 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.515881444 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.402240231 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.971771534 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.895101271 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.418824245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.400339368 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.733347033 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.421049271 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.682820147 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.418221368 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.401561797 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.92936665 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.404316312 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.411797346 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.401937838 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.409339016 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.047849488 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.401990624 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.687767775 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.427376362 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.402658144 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.40189935 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.440377814 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.402581602 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.403689759 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.401647293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.93353324 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.421841457 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.367303565 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.420620477 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.405420122 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.403540249 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.402321633 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.404703329 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.623636006 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.909618682 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.426405027 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.404239454 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.402956719 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.406947537 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.570900751 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.409089662 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.711653383 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.420691799 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.404032876 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.427277616 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.113286943 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.452363712 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.410475847 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.409084598 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.291641839 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.613739492 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.423880315 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.42068274 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.403875304 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.434684568 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.637920378 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.424563103 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.439047766 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.40811805 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108887738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.435690768 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.412405603 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.940807304 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.415179638 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.269694915 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.426333085 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.405714599 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.693750798 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.671662628 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.475297414 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.404657184 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.423297972 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.099926366 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.450102955 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553481231 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.426748347 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.455338519 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.604491216 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.783522704 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.40582864 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.037059774 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.407285745 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.62198197 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.406831583 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707462658 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.895836395 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.424382642 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.413004838 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.107974573 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.101963451 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.104859752 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.409483284 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.684903186 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.352289307 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.898886361 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.406067507 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.417258734 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.849986887 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.410232327 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.413758503 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.405034821 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.407879987 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.547234433 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.579651208 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.597552465 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.407434992 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.857374127 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.440051969 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.408357276 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.410309753 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.409359197 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.753523109 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.496838723 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.412791883 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.448582321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.408703996 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.416545389 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880678912 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.326989137 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.407897227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.559976892 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043445433 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.426840046 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.408503581 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.073372374 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.705805361 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918458887 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.438509481 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.718700641 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.427613573 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.448808035 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.061015852 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.488342514 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881631001 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.428168639 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.408660314 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.000831623 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.431773342 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764549795 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.409222952 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.408267982 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964712105 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.429107786 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.411807043 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.645532755 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.428785606 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.66117807 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.410903117 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.450988024 seconds)
  done (took 1126.583035425 seconds)
done (took 1408.759511404 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.411933548 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.412461214 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.396105257 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.41270021 seconds)
  done (took 26.959932768 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.418496902 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.416390737 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.417340345 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.416346072 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.417345154 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.4156218 seconds)
  done (took 9.827279794 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.465057599 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.409985045 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.412255625 seconds)
  done (took 19.614093341 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.622384021 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.743357601 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.772159211 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.676488853 seconds)
  done (took 11.142179585 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.418418392 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.418361331 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.418548943 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.418508927 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.417895592 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.420440138 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.417394731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.418574227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.420273261 seconds)
  done (took 14.09355459 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.364261814 seconds)
done (took 88.326792837 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.49315573 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.496357799 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.410177742 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.392773035 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.432422232 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.660538861 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.291763262 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.45232756 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.398500421 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.823859553 seconds)
    (11/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.440050651 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.332701619 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.438373208 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.925189414 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.640080944 seconds)
    (16/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.452218943 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.540402849 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.525544394 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.467230797 seconds)
    (20/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.477608297 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.441686273 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.489158149 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.457980538 seconds)
    (24/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.408226981 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.80416634 seconds)
    (26/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.596889037 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.394182348 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.987891952 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.439235384 seconds)
    (30/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.413613681 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.876125724 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.522087566 seconds)
    (33/309) benchmarking ("sort", BigInt, false)...
    done (took 6.413244381 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.533841775 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.174260855 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.823788196 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.405889117 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.424261382 seconds)
    (39/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.210545998 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.419990312 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.412892767 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.821655386 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.418399701 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.05734744 seconds)
    (45/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.421331126 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.439994322 seconds)
    (47/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.766646269 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.183312413 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.526262536 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.66841393 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.497034435 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.440004916 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.395902117 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.509857103 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.445369851 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.490929306 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.045677643 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.022240722 seconds)
    (59/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.430480985 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.408874936 seconds)
    (61/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.429014627 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.414031664 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.50117343 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.414858456 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.443147481 seconds)
    (66/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.600415031 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.69167579 seconds)
    (68/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.402775383 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.872810951 seconds)
    (70/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.768421887 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.091809097 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.440958145 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.415088153 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.195558457 seconds)
    (75/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.198992217 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.441580117 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.39929682 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.601759029 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.805645525 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.397366654 seconds)
    (81/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.560925292 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.416305297 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.397927949 seconds)
    (84/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.398534503 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.616535368 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.724901178 seconds)
    (87/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.499673635 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.83181925 seconds)
    (89/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.130949591 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.106092977 seconds)
    (91/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.970721199 seconds)
    (92/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.501706271 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.398044443 seconds)
    (94/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.401006497 seconds)
    (95/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.080918528 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.832360094 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.845551749 seconds)
    (98/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.792971106 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.018939873 seconds)
    (100/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.590388016 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.132698387 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.445607904 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.432295581 seconds)
    (104/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.473762467 seconds)
    (105/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.729349654 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.42046234 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.446070118 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.417883126 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.421798537 seconds)
    (110/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.542535933 seconds)
    (111/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.399388139 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.251815116 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.695674673 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.970268897 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.62631964 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.399366272 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.437305394 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.516565776 seconds)
    (119/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.408609929 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.467781437 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.420188744 seconds)
    (122/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.463585335 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.504197439 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.428204876 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.398997983 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.294734716 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.710085749 seconds)
    (128/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.485340568 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.032163294 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.934565817 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.460713392 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.172772553 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.776084971 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.292984839 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.694974703 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.400827895 seconds)
    (137/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.02789249 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.185641807 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.67641101 seconds)
    (140/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.537917534 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.468921411 seconds)
    (142/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.002922781 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.40207013 seconds)
    (144/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.883034783 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.293065046 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.572085172 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.488353189 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.776543635 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.525392372 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.522852166 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.465441602 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.26681794 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.843075295 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.194049582 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.447746392 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.401736541 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.262140006 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.402858886 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.462012642 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.358264729 seconds)
    (161/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.438641866 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.446070682 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.799054908 seconds)
    (164/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.627752548 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.288115435 seconds)
    (166/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.258202434 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.929112812 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.534871328 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.403122981 seconds)
    (170/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.653051386 seconds)
    (171/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.456357503 seconds)
    (172/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.74734469 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.262590347 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.366234528 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.442865548 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.866056053 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.9219899 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.404331176 seconds)
    (179/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.405091388 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.2999322 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.640154 seconds)
    (182/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.051891193 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.372791525 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.40488348 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.655317466 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.526235761 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.508147539 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.449814468 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.905490672 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.437042425 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.430831429 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.496492693 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.071284948 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.465756277 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.442238939 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.887744194 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.425866679 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.857401792 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.470841529 seconds)
    (200/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.440680707 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.491147531 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.523332278 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.424330174 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.426790217 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.445624355 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.459140593 seconds)
    (207/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.236896365 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.481204017 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.727578638 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.484898096 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.425794212 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.637256745 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.428708044 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.446241327 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.082857393 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.624985731 seconds)
    (217/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.032533363 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.40649018 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.366948633 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.406440274 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.425526328 seconds)
    (222/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.613016168 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.321930752 seconds)
    (224/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.492270811 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.446690374 seconds)
    (226/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.237463283 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.407553243 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.815627375 seconds)
    (229/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.551100356 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.48568975 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.906028242 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.485854645 seconds)
    (233/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.769998708 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.409980628 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.463202071 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.685107295 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.428905159 seconds)
    (238/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.510245561 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.837098223 seconds)
    (240/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.526363039 seconds)
    (241/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.45268375 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.725213187 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.51508529 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.201742506 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.411207023 seconds)
    (246/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.0571047 seconds)
    (247/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.554121969 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.496242012 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.841649448 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.956757552 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.425689196 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.410023552 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.642815358 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 5.787846193 seconds)
    (255/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.428727676 seconds)
    (256/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.411639386 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.930238352 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.456906991 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.243105147 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.450398614 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.198630793 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.815796395 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.450982209 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.409347873 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.514938412 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.969940236 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.409912691 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.526825775 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.427716082 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.416702036 seconds)
    (271/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.783569778 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.456136031 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.227396797 seconds)
    (274/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.412423539 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.869899804 seconds)
    (276/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.447867044 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.427940861 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.034935398 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.454947735 seconds)
    (280/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.421384452 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.859166897 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.512206381 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.408993068 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.531033239 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.545544655 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.531319928 seconds)
    (287/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.445739264 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.43572963 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.67212707 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.224430615 seconds)
    (291/309) benchmarking ("sort", Int8, false)...
    done (took 4.489925719 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.94520307 seconds)
    (293/309) benchmarking ("sort", Float32, false)...
    done (took 5.442966695 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.446641911 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.470971338 seconds)
    (296/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.535635132 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.456657869 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.411388493 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.535772663 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.199233106 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.643416576 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.392029622 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.415114141 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.447293253 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.453680088 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.459594804 seconds)
    (307/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.441796315 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.53385522 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.049641136 seconds)
  done (took 1065.185161144 seconds)
done (took 1066.51378731 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.464121473 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.458791439 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.441147276 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.463082556 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.552719168 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.469341308 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.451537896 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.442897532 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.490297245 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.491265225 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.44090726 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.468864398 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.442834587 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.441690766 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.441007035 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456802444 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.495294536 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.442520717 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.458649592 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.452260461 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.459062351 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.440923358 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.492350343 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.470151656 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.446034325 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.446154034 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.445136841 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.460813986 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.55557037 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.445798623 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.446207278 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.454673599 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.497285904 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.441906763 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.43774255 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.462549282 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.455830699 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.452071737 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.447497912 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.475039534 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.907662187 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.461203163 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.445256993 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.444280567 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.445615869 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.44877194 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.445327637 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.450206468 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.458428714 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459454287 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.893426315 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.475671583 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.447557963 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.444280775 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.455201591 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.444724273 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.449633242 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.462450067 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.464357686 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.462744456 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.483210119 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.449719153 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.446826119 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.461796151 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.452322259 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.931950019 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.45936677 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.448950951 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.908457121 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.468884146 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.933753566 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.472204199 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.4473502 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.459727252 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.477900949 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.500513967 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.44145027 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.445522403 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.45413554 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.444690322 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.4561192 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460538922 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.451852099 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.447695013 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.462775578 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.474397729 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.457002124 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.448057482 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.456903288 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.467142257 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.455123535 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.458665568 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.450722231 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.442428604 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.457132461 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.451034701 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.45005795 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.450300404 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.453120983 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.458492226 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.910120794 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.483627262 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.445140554 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.444030575 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.446183638 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.462036334 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.911984171 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.466867087 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.469528757 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.495279073 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.449151738 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.489908675 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.453073152 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.466834106 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.458127351 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.451776977 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.444403982 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.493505385 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.9043213 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.481345521 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.451438202 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.448785 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.466544789 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.451267597 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.446192355 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.507638209 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.45110423 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.464546019 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.571872532 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.460809348 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.480630632 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.448564646 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.453149778 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.476768151 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.468004873 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.480284195 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.452951757 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46792753 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.465178186 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.447014006 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.460443859 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.46136795 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.45155667 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.456757565 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.444963278 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.476761981 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.465327148 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464756182 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.47252625 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.573151196 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.448231271 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.494802803 seconds)
done (took 243.173543269 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.508884731 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.447901825 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.529884267 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.44822865 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.548503769 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.567555116 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.444583164 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.445795982 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.445410948 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.828591923 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.44563103 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.445827102 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.443067259 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.445969836 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.530555401 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.447259953 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.444158103 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.842371471 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.449039625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.518493739 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.446415467 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.445264532 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.447591517 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.892735767 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.44494494 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.444486933 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.532529066 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.448870971 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.795400209 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.444021462 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.442488476 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.850267449 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.553776738 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.466929878 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.458780251 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.455377926 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.565640555 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.468874144 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.546807089 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.52969078 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.544917821 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.4877727 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.443848571 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.443609444 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.451162963 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.45128414 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.447792648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.476668827 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.443908173 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.448222653 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.794093067 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.459736666 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.458305739 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.448407359 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.447677334 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.471012037 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.448657248 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.451414087 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.542374857 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.450680233 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.526302246 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.831679234 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.890946367 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.450422515 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.448760185 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.449067142 seconds)
  done (took 156.473883638 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.517372257 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.524474386 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.564586271 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.46887387 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.502062501 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.567671696 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.468682522 seconds)
  done (took 11.971014838 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.457634893 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.451040542 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.500473555 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.514098625 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.451940764 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.599670067 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453022648 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.46327714 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.448662499 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.50587285 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.451960331 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.452096251 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.457796463 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.444811239 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.50029491 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.46350362 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.567882188 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.453942696 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.45353746 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.609963941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.460256357 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.451319076 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.517418982 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.464051822 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.453353167 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.458464064 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.019781406 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453760688 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.450267893 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.454018625 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.449963284 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.491298596 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.453927872 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.45398086 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.451855663 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.570084284 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.45433923 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.451799363 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.453760851 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.450543749 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.453848036 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.454043746 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.454153007 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.451038765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.454102197 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.476242802 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.453713778 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.455537259 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.45440717 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.455204443 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.505101013 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.455683281 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.454189118 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.452696628 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.510664323 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.462412581 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.454558776 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.453011975 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.454837621 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.45270233 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.612452183 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.503808887 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.455286942 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.502910524 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455626571 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.455998774 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.454974572 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.455001569 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.519507009 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.455611019 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.503335222 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.453295915 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.611205943 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.479348098 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.457256026 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.459024179 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.458232884 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455418317 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.451028637 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.46169094 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.454605657 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.457479525 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.462963908 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454112066 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.453852758 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.561082413 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.565051757 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.454622751 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.469324754 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.463659571 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.454816396 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.510605812 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.458278885 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.454790127 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.509353346 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.573205589 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.524916068 seconds)
  done (took 165.088966357 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.462164285 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.465193307 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.45901002 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.472514594 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.457801131 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.45751163 seconds)
  done (took 10.138050297 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.461282848 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.458858715 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.457789991 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.45867161 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.457457451 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.45795998 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.459327835 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460167316 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.462226042 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.45895855 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.459010519 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.458664125 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.459079236 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.458262828 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.459602858 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.460798623 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.458668615 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.456007903 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.459451595 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.45956171 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.555566102 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.459309789 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460494304 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.459598982 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.462536322 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.460104583 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.469846467 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.460483514 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.458771313 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.466548124 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.480859824 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.460383854 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.460957269 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.464445096 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.464649961 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.461777691 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.464025615 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.460284676 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.458104611 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.460978188 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.460698443 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.462336067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.460044039 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.45981062 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.463401255 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.466003871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.464319903 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.46893937 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.461430385 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.460801814 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.461420137 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.462750575 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.462517512 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.4617154 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.463719985 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.484909468 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.464764068 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.462282078 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.463786724 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.463478774 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.463184882 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.461573323 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.463602316 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.465638402 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.469880549 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.461681065 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.463282527 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.465691647 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.462398508 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.462053781 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.461875306 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.460715881 seconds)
  done (took 107.73822244 seconds)
done (took 452.762653493 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.901980246 seconds)
  done (took 8.270376338 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.65187013 seconds)
  done (took 8.020879366 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.585937496 seconds)
  done (took 22.96177668 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.547288892 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.47016335 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.493135264 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.467953721 seconds)
  done (took 27.350380164 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.94344 seconds)
  done (took 8.314853313 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.458874216 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.47473771 seconds)
  done (took 14.305532949 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.785268168 seconds)
  done (took 8.15750206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.121379738 seconds)
  done (took 8.498637026 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.916917198 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.466512793 seconds)
  done (took 15.032630817 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.439590048 seconds)
  done (took 7.811569138 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.421884021 seconds)
  done (took 8.79322897 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.47182761 seconds)
  done (took 7.845611391 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.514407055 seconds)
  done (took 7.885729568 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.731472795 seconds)
  done (took 10.103521259 seconds)
done (took 164.719876866 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.459082135 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.460148117 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.461437341 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.460393199 seconds)
  done (took 27.21297838 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.500431577 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.499832739 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.501550532 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.509112675 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.50215363 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.500686995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.491769648 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.490722026 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.511082752 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.502297558 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.502319494 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.501782174 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.499171119 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.49185564 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.502193814 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.502299848 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.511289088 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.501634844 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.492373944 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.502108142 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.46825308 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.511384536 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.504422076 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.466942244 seconds)
  done (took 37.340564997 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.990612227 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.538331296 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.619958228 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.519601509 seconds)
  done (took 8.041778358 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.520522585 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.520526359 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.531470095 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.571123172 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.598559541 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.529243534 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.493745314 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.488740554 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.47513038 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.521717535 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.597009365 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.536415484 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.606337882 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.467834905 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.672391924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.468254258 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.46930306 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.522051355 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.57276425 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.585967568 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.469605476 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.521241834 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.524191933 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.538360229 seconds)
  done (took 38.176906404 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.468971211 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.475945725 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.469539309 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.467578039 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.475971493 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.468611417 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.468475161 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.469908914 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.468456303 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.474067824 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.468005087 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.480867646 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.468413554 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.470517344 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.475718177 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.469660957 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.474039109 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.468319015 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.469982549 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.474447152 seconds)
  done (took 30.803946497 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.462785995 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.390539396 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.814590981 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.718976416 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.462017423 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.464046881 seconds)
  done (took 28.689816287 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.543452825 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.700057802 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.469861649 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.840531983 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.933894999 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.487926758 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.470076632 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.722377571 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.056472637 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.044962727 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.533815342 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.542195576 seconds)
  done (took 21.721752412 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.468364818 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.468048609 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.468621065 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.482887628 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.52787335 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.494270674 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.4786328 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.464751279 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.529857306 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.550620254 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.493261419 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.528743905 seconds)
  done (took 39.334428218 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553529536 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509478627 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.421596993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47364863 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187563175 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677554745 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.551920713 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940080737 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.471272264 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740491812 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479619297 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558202386 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.72254482 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480180872 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.470427401 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.492504193 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714253068 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995862208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469927147 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.602009489 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494512478 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.481132021 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.714531037 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.502205563 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677907573 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.608861495 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.730169707 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.245013847 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793689305 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481110649 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478363457 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467776247 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741820569 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146080578 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586888258 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479212345 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480424831 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.099018836 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.468211817 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.611709838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477297307 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.471742459 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480041806 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469275736 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.403926254 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.470951405 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952455062 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.475388979 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.18004701 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.469084118 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481256607 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563559496 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.473090609 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.038566713 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49076517 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.479155104 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.465653618 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493761733 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059161305 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.122710101 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473529151 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.425496155 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.47591153 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.685708149 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133176788 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.593564235 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.473561793 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474185619 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405127105 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.658829814 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487322147 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619008267 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.492970098 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.121491591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200147943 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.50764298 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.403250766 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061573938 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473667855 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.409042073 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699548586 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246781096 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40777567 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.415264435 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.405419618 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214415095 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480035133 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.895868006 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492338644 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964290623 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.484382007 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487476413 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495493659 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.695298398 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.351749182 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472542227 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.475020289 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600774492 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493753754 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940404176 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409233226 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.474448877 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729565906 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.683965282 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486885657 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.501347807 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719565264 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474889701 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.513355082 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.483078717 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.48503729 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.078876321 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503806677 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100971883 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491919696 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.248438727 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243786004 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475016772 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.5769855 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.486338623 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725728417 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.264865861 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356737218 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541750349 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47759763 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.47495408 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.709301331 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.065592727 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.356096959 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.471037851 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485524853 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487125569 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.474996456 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424722163 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.484160891 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475746115 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.27247111 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.698703092 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483026202 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753504213 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409471368 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622405189 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484835095 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.696699904 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.73036808 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.494463891 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735033618 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475370423 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.498957946 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48790352 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494721069 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576635165 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497605141 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.479986614 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.733627174 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.479666629 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.480082251 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.725216619 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.254495144 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476949529 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.482820022 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479619463 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115568343 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475859083 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.480877094 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365485747 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.490164478 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544611524 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482129277 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485843446 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.364043391 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495116036 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.484972876 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.475346938 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719597399 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488913157 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.713139387 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558312288 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.697730561 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093654917 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50978859 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.412462857 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.188841872 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.170190283 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478174669 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.665030917 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.478949938 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488842556 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487864094 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.477002148 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.09353072 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501512849 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.638104826 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.48543068 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489921057 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.483993126 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47854268 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.344358159 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123792576 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.49648766 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.494526903 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622662701 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.493828827 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.413481329 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.995460724 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484891995 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.481064101 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.256118665 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514511441 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.633468898 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973930115 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73824339 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484175686 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510998921 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.82658433 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.515930714 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.48179044 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.492547257 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487453092 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.499347999 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489262469 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.491836475 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.747514789 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.844091931 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046608592 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223901906 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073816258 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451152727 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.489287222 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.380518776 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.954692513 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416345762 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.137988109 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676309879 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979030985 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429684402 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708004626 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.730631556 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295958431 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49390461 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709031259 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43143411 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.4845623 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495622871 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.694166425 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516040643 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496449985 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.413855495 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.001961189 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761758608 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487634926 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560667894 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959167679 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488238542 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.262918344 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.529347577 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.842823441 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686358578 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.028977339 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.869335167 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.488567193 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.486514555 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976077139 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.486870249 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.01001242 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143511761 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.504361353 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.710606752 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422001588 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.495177151 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.494323186 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.480730134 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.848388846 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.488052206 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.738857214 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496672575 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419369759 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.495706294 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054821586 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.369157605 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.490410994 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485934373 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261772273 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496565473 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794068201 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.492313663 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.335522077 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.50700165 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.420083984 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41886742 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.17842967 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.493697355 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460009821 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021571141 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.490008196 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51352781 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.516133443 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334038405 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.741664015 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.500668787 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106413734 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729543507 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.488915129 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532039391 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.585810562 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487365125 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.486029975 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.383953996 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.721184235 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489940449 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.713262495 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.442066072 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.387907562 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.520528964 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.699044076 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.39374763 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.499507242 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750600287 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.215804934 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.490647021 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233745627 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532598234 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.49646959 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499384026 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.505846139 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507838111 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576638203 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497762174 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.49868464 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.497779158 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671966363 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498417248 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492699186 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.501357582 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581513291 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.131117395 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.342724053 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.261854731 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114936241 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262212568 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13049957 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520004866 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.488732453 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488796783 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423800639 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640734164 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.015163075 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762065996 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618799222 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.487620456 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515581251 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488746011 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516351262 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703716304 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76464563 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.46067227 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489681783 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296266976 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.371220175 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50109529 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.701592044 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030552207 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09398787 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610678888 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.504842757 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962984405 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765609321 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.58105171 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.491209127 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.08715449 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.495508331 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.879373811 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.517463641 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498675833 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638358197 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500991505 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181688173 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.522135578 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.651179119 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.265940973 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760567542 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.746510258 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.985747198 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.500738578 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118295272 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264571058 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756853608 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561877137 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502012005 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.595410023 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640024234 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.49359448 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.389254383 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.493045875 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336144266 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.203497312 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.501958048 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120984153 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777013627 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.490037782 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.493127279 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51584156 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.502415792 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.71566813 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239927121 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.715538244 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504169811 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.502712318 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.063850062 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120849586 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52741772 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427678563 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.497795681 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754717486 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.748376992 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515986381 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.946002097 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.204722528 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08924797 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.468557829 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517329739 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.502760956 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.253309597 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123719198 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.382168243 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036663646 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.152725611 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.498919099 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770792013 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.500146074 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.493223701 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791465942 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.498358481 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.496808965 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510156524 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.124772427 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315525017 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.50189465 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.717084715 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.431229165 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.72035207 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.508958878 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434012897 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495135999 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.687447203 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.49784885 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62453936 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50750682 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.501749623 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511997126 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.245820494 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.770296763 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.501349149 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.479355459 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.481586451 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.510773418 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522293203 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798008875 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500897357 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.170743121 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.847636782 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.753519853 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.501017822 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.479752596 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.500041917 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.497561082 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214914736 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.506828433 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.497661009 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10192907 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.50966039 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.511226146 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500821154 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.713880253 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709394909 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.509446647 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510621201 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510910846 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515388067 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.397009352 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.264970838 seconds)
  done (took 1718.158594513 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.49747066 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.540676225 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.523216251 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.523020731 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.523869512 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.549168818 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.538822915 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.52438334 seconds)
  done (took 53.627452601 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.501913333 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.653954942 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.531207119 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.501822235 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.50868926 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.501417103 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.984909264 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.519704781 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.50821827 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.508886569 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.49898064 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.502867642 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.201405566 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.509012456 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.498428878 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.480350538 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.507415981 seconds)
  done (took 68.332951383 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.501193037 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.661384993 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.609805839 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.501079362 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.711302078 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.518610055 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.578987816 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.564227292 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.500680412 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.641308802 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.170387437 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.531334809 seconds)
  done (took 81.900478964 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.508335818 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.509263613 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.509464655 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.508930282 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.509067411 seconds)
  done (took 8.955145825 seconds)
done (took 2163.669422855 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.745285642 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.248228217 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.151139757 seconds)
  done (took 5.809427434 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.649627131 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.697581278 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.818231321 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.825112061 seconds)
  done (took 8.404197809 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.780556635 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.876374682 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.689122457 seconds)
  done (took 6.756858216 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.971742664 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.514086045 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.503643965 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.500091519 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.504957715 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.50594675 seconds)
  done (took 20.92206958 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.506514186 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.508704789 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.506639865 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.509903975 seconds)
  done (took 7.443176911 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.485580549 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.217798246 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.484503927 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.500553761 seconds)
  done (took 19.100517482 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.252503609 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.266157408 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.249748606 seconds)
  done (took 8.179650042 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.502056054 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.347277205 seconds)
  done (took 10.261187531 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.800895497 seconds)
  done (took 3.213482394 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.639574273 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.833696912 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.634420235 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.543804668 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.666294248 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.504762552 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.212853883 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.78059054 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.514901478 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.767218613 seconds)
  done (took 30.510461385 seconds)
done (took 139.744229155 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.447735045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.878084945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.707580044 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.460049261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.788065473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.706816897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.722338589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.42755106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.927963153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.917122678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.461546971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.737186467 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.673594225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877020021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.673322995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.876913809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.738544086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.491124928 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.109130525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.306397442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.7236674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.055824254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.290646257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.073080092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.738548405 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.657957171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.638016508 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.877707328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.279469667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.654908451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.659811466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.478777905 seconds)
  done (took 198.470516193 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.512288306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.514893117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.505922254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.506292188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.506367842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.524619515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.506367001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.523679482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.525369589 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.525553207 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.524870344 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.514083947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.508175409 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.507534211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.50652766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.50711396 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.513119137 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.508247869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.5066809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.507722966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.526208405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.513175122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.510187579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.506392532 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.510302064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.512049163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.508006237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.507712772 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.508720814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.518667716 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.514871508 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.508665283 seconds)
  done (took 209.817130656 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.507696116 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.508157548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.528818313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.512912854 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.508471452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.509885054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.51239265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.508281621 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.508059172 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.508680459 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.512216431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.507937904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.531686661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.508758845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.510448749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.526484388 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.508731997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.522959728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.510631306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.509266728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.528523724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.535864485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.514438756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.509390209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.529147601 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.509839396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.510210853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.527874707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.528597923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.508840143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.511225691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.510908192 seconds)
  done (took 209.906503541 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.713722154 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.516601575 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.518807029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.471261148 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.518507789 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.517471867 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.51131292 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.706994827 seconds)
  done (took 15.894062454 seconds)
done (took 635.501778075 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.911343004 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.609277814 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.724943048 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.536875929 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.372863461 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.556283937 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.537147445 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.712060141 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.474549748 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.723899858 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.829927539 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.553722537 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.978575428 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.536619447 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.79736262 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.63946757 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.457596937 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.584940785 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.860959309 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.110619244 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.805138791 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.018507977 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.737054476 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.458144914 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.996404738 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.016450245 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.278809847 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.446405405 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.557058108 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.869180167 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.297416604 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.544822611 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.602748665 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.603268062 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.660660485 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.640558505 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.509658501 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.600572375 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.740216485 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.782035859 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.1213323 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.287001185 seconds)
  done (took 100.503237336 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.503670696 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.503611791 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.503126525 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.50423464 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.505387143 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.50431384 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.504082305 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.503779644 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.503750276 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.504001312 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.503018396 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.504664273 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.504636048 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.505155887 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.504651309 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.503836252 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.505129523 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.507037577 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.503958588 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.504384254 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.505520791 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.504709603 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.505996391 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.503795523 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.505769293 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.506053831 seconds)
  done (took 40.541628071 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.522243341 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.775820241 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.946024085 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.529780349 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.522780554 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.527742791 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.603395591 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.524627684 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.525769061 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.525882244 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.693950964 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.525879378 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.556936931 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.972703357 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.524643233 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.523533391 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.532624543 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.523370255 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.782869491 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.533413813 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.628504244 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.52570963 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.604901131 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.533289824 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.548526458 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.524835539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.528432049 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.042282806 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.546014581 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.693121525 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.383757729 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.606112864 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.994630472 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.974793334 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.378244325 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.528626949 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.525328175 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.699073976 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.527182016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.524817442 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.604336367 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.525984052 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.952704413 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.152951603 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.545212465 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.525675792 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.064417248 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.716749707 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.78180585 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.533315348 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.979633777 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.529690152 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.526965381 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.526704861 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.782879881 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.533210801 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.526020193 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.068038351 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.551636825 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.606876348 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.527283273 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.526620276 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.791005272 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.527494809 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.781978242 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.528063822 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.53413788 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.546535166 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.957566342 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.53019796 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.17564935 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.547072676 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.528169612 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.69802086 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.782019131 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.100007521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.549656848 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.796397727 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.011690927 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.625366481 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.531165039 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.032284467 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.629180435 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.532866288 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.530676402 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.531124911 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.529193532 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.578462302 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.608082793 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.100228089 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.181307 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.08930751 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.632740427 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.543448436 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.529251812 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.069337663 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.550250577 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.529669475 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.953829777 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.175026529 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.548146572 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.536994342 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.180560621 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.551031263 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.610683514 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.534933541 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.962427257 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.530612071 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.578714529 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.529682435 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.536675948 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.552859554 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.612109182 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.534961708 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.531290388 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.150827377 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.727402686 seconds)
  done (took 199.088466193 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.524890976 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.524513107 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.525353057 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.523973722 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.523795757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.533461704 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.523745364 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.525072556 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.530152583 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.523998932 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.524733092 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.527054684 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.525890256 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.531415435 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.534882157 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.531682036 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.136174335 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.524506868 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.52512993 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.544093386 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.333616227 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.527837333 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.52690539 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.525819609 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.524952095 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.528279339 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.536197585 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.527774639 seconds)
  done (took 157.629143174 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.533288389 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.115329107 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.551119022 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.670506293 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.55410759 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.530283511 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.666774981 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.59241765 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.551908482 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.529908493 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.531528716 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.844391077 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.535017912 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.065947764 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.733602579 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.689312295 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.063647533 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.552029285 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.53131607 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.530847589 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.672036005 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.539052752 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.845274679 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.127588599 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.556293701 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.120772644 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.519232946 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.534918792 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.532570424 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.12617474 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.551656689 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.853873648 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.6166373 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.595986309 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.138100176 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.08568914 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.0872814 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.690417755 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.535081358 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.532679364 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.532481408 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.518595227 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.12119026 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.55649921 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.535203602 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.112479636 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.556408729 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.536262258 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.541679985 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.532507706 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.598159814 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.616676718 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.870190782 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.129034838 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.634574193 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.54895787 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.673342513 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.926199543 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.53669151 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.070007837 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.519186948 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.143333991 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.559524131 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.520246997 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.53558863 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.540067628 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.692546995 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.673536378 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074094353 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.555902473 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.069818491 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.710219887 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.53419323 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.535258142 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.537643405 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.142147065 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.092529475 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.710644356 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.675515687 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.740692923 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.522177165 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.536307687 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.521940515 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.61628709 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.53498293 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.143179762 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.093377088 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.55770647 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.538027936 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.538036744 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.538691238 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.722904939 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.160690247 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.640533813 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.06287633 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.880265985 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.865246737 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.542861759 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.600108726 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.555327906 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.865169033 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.544219811 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.597609621 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.991127786 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.862973168 seconds)
  done (took 181.814328099 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.789650467 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.777832755 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.633725864 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.675413672 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.148101754 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.117009965 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.866789769 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.690341273 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.653812398 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.808100066 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.736282275 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.631697793 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.718839936 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.6159727 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.29324606 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.62689379 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.653777964 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.683552309 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.656288501 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.579714696 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.195684352 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.834904422 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.717107477 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.453604942 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.63471442 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.323964333 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.11919559 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.121694197 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.712474263 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.899980524 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.092677863 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.70307963 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.538001055 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.263601762 seconds)
  done (took 72.409161978 seconds)
done (took 753.404707163 seconds)
SAVING RESULT...
DONE!
