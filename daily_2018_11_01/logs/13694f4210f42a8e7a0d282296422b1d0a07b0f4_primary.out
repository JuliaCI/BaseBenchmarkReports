cset: moving following pidspec: 27084
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.245569148 seconds)
loading group "string"... done (took 0.464629727 seconds)
loading group "linalg"... done (took 7.58228991 seconds)
loading group "parallel"... done (took 0.173371949 seconds)
loading group "find"... done (took 1.187612858 seconds)
loading group "tuple"... done (took 2.108980858 seconds)
loading group "dates"... done (took 1.338208817 seconds)
loading group "micro"... done (took 0.247684556 seconds)
loading group "io"... done (took 0.741323823 seconds)
loading group "scalar"... done (took 41.258214275 seconds)
loading group "sparse"... done (took 12.657691769 seconds)
loading group "broadcast"... done (took 1.102506374 seconds)
loading group "union"... done (took 13.848644418 seconds)
loading group "simd"... done (took 4.770310461 seconds)
loading group "random"... done (took 9.772897918 seconds)
loading group "problem"... done (took 1.994263592 seconds)
loading group "array"... done (took 22.401308678 seconds)
loading group "misc"... done (took 1.415286839 seconds)
loading group "sort"... done (took 3.571421064 seconds)
loading group "collection"... done (took 19.370821498 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536373234 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140724888 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132258811 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147950207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203465343 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143975651 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155636815 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113276378 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.947886296 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184736773 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153008283 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512447955 seconds)
done (took 5.095559218 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223965179 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094944462 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103951462 seconds)
  done (took 0.861817173 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077636725 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145059435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094257209 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07751383 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094851074 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078748049 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095473518 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078568205 seconds)
  done (took 1.334103223 seconds)
done (took 3.173821609 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.73539195 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277199819 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202318098 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45962222 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193643251 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214606221 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673623934 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345258919 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250653016 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099667861 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141876744 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386079263 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135747324 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681536075 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090204606 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122350717 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177180656 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44704972 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082690972 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109558821 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11675012 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141892918 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127910062 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090645027 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183627522 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081336693 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19222999 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108500617 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080684896 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285212276 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20161468 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682976725 seconds)
  done (took 10.826373579 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110307958 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132514255 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097389991 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137277515 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134622203 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099628698 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086905898 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097880927 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.1222518 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176049822 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113643966 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135239005 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095001339 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081911123 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114452905 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244209519 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120952413 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103999345 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101010065 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102315795 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121954277 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113029793 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107763347 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0923257 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166179022 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220486799 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112581813 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126399831 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095933874 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111124659 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142795296 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143945375 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095642335 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081327557 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173433015 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.1267037 seconds)
  done (took 5.12508246 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187188887 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120637702 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167670776 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163654066 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138907406 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158479898 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111910116 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253919914 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.106377144 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164222615 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141694439 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115717019 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079121391 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09738986 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094260182 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.674384974 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162831159 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114599544 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116049353 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10278473 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083565973 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364859932 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104145684 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096802896 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083087358 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082608744 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159739414 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081348805 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.136296016 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121825682 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099772374 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132348146 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191577139 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130345418 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116981338 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096898212 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077940612 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191800942 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087894938 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097023412 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103954559 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135293583 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133617489 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09734956 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080706279 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218707578 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079667325 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114288148 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.941885393 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18133066 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121747152 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099534147 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326826922 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11434171 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08081607 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094311472 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258864544 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197480976 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080431126 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097603024 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096389615 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082468828 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383601353 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096351564 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.85273496 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084422517 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107819095 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087535768 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096883776 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121661307 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088213311 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10458563 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096547807 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098357382 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081084717 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099022366 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096625303 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084213694 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11096941 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085456428 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098470345 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16290577 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080669847 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094843101 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099853568 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129545338 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099703848 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080121715 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132947104 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097534055 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080386773 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132681803 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082625338 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111954866 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099244666 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142776721 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079757811 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094411135 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.175580425 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080284634 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095772683 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113556157 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103229441 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133241646 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113879422 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097574385 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086191616 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097058542 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079557613 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165620486 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081717222 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099508593 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08242246 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113185461 seconds)
  done (took 22.756707846 seconds)
done (took 39.37820776 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326712698 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10345163 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102562775 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101850081 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099742492 seconds)
  done (took 1.480184591 seconds)
done (took 2.200659014 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286454664 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.211148278 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077114715 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16663546 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093471986 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171408504 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158713359 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111471863 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217593885 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076482721 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179843798 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076999708 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093167053 seconds)
  done (took 2.661409884 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094621861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114427916 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08308824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111436239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077449618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111847233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093602735 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117984399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109787658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085988633 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093990937 seconds)
  done (took 1.805866761 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094010656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113607871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082852461 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111357846 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077965561 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112228888 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09336855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117178129 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110363873 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085906478 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093053825 seconds)
  done (took 1.802726469 seconds)
done (took 6.975501867 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091255356 seconds)
  done (took 0.798638975 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.923542886 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.880688926 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113230002 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149771274 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315534705 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.173511803 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472139806 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124761789 seconds)
  done (took 11.066991971 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.144933869 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085496145 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099454089 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082291329 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103340557 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08639414 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098409945 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099359147 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083025124 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101763944 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085286392 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099184665 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101741944 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085897936 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098194292 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08442433 seconds)
  done (took 2.318609969 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118752263 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11751482 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105032826 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107349592 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086642753 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103753315 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106271562 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088208663 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101592976 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102974861 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089864316 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104468363 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103878543 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079282195 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105313013 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107120883 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085292224 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105697095 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105370224 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089831967 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106473475 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094567415 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08693786 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10516958 seconds)
  done (took 3.232057136 seconds)
done (took 18.128334262 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15845296 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108455191 seconds)
  done (took 0.988112938 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093965186 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112678598 seconds)
  done (took 0.931573205 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096685869 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09536694 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120451777 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108973996 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079098733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095826417 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120166561 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079176392 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095733089 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079460059 seconds)
  done (took 1.69987227 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081636686 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108786067 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100560793 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094627855 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104762671 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094406651 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086916923 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097960117 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108959506 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075823805 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101166765 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113955202 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085713262 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115746764 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103635717 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082468757 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10115826 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0974944 seconds)
  done (took 2.485943196 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078855382 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096328772 seconds)
  done (took 0.904607269 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08047049 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093177186 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081225219 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096102557 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093996843 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076561914 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093715467 seconds)
  done (took 1.343699369 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.509204866 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134944277 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252590593 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084013532 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119636002 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299469216 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097660753 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084235376 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102444077 seconds)
  done (took 2.469218873 seconds)
done (took 11.549401102 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091986615 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117229788 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111996473 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462872571 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105879557 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096599491 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159283512 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250720142 seconds)
done (took 2.127559487 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.1472322 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322887733 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113425889 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066931168 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094524682 seconds)
  done (took 1.330753412 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079602361 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099072803 seconds)
  done (took 0.911145492 seconds)
done (took 3.125447802 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080486293 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.130540746 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079325476 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097643813 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076916371 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098521241 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076716835 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095232347 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077652556 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09569181 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095892782 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079755052 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095705416 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080379331 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093732113 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076815818 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096039308 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077105048 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093649464 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077435695 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095959655 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076643349 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093380712 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077743192 seconds)
  done (took 2.886532755 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098707986 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097562079 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102145439 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084402127 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100821489 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085337142 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101310955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095900739 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085988103 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098175519 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100690157 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083983994 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098968806 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084765893 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098835984 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100664468 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085851067 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098340205 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082229814 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100864247 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102119878 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080326055 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100700314 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085345836 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099929592 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100162004 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082325542 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097459106 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102245124 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083196265 seconds)
  done (took 3.556575725 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084133168 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094266552 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078418718 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100964077 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077621285 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096030359 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076978085 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095016441 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07867016 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093987815 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079589391 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094326642 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078433277 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095806794 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078452591 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097895469 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107015612 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077236524 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094819657 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077833637 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09842106 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077349478 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094385235 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07722425 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094218946 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078206092 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094373645 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077074316 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095297156 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0777373 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097211504 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081179117 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094826047 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084558987 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098074179 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077235588 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097753216 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077139257 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094712634 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093359704 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077417943 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094662385 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077328366 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101039181 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078155473 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096572412 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077596328 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096399434 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07804905 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097475967 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077292545 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094820283 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079058645 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095322328 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098672912 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076934995 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09547603 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077166719 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096179055 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077649822 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093996965 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07736319 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096873757 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07842747 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110987076 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084454219 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094684616 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078997463 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095450013 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079817604 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095775945 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108026624 seconds)
  done (took 7.101597698 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082860931 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106094918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079188671 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096796009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075865551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094927682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098443797 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077794695 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097105548 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085246993 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095427775 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079877552 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096114119 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107378861 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078639275 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097294607 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085448125 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093014537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078111399 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099192581 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079241741 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098513379 seconds)
  done (took 2.725395416 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207336396 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105441681 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142396939 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106890215 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082420998 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106523394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101532495 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086130159 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10157463 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083547136 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099132941 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101897716 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082730542 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100078981 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100189887 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084876171 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102026353 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08484634 seconds)
  done (took 2.627068535 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092988788 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098561264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102639716 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097037228 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09878136 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083265224 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103442904 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107794954 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083254419 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097724086 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089765501 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099952905 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10036664 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080456061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100183503 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080605147 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101076189 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081071804 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107325237 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103925292 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103985209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089806373 seconds)
  done (took 2.853925438 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097648778 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100554182 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117181598 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083937505 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094704679 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078442154 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105567937 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081470378 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106895934 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09961754 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080818068 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09729707 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087529147 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09716941 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103579613 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081159286 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100461796 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081736312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099588122 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076761668 seconds)
  done (took 2.622967754 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101862271 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100051812 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099114084 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092310329 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100253816 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082199031 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108645796 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098984925 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081985215 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124973886 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098847591 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08172709 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108414466 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106192703 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099517919 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091393857 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109133709 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107958278 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082221224 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099219962 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124731084 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081966146 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108493069 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099444608 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.192445071 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099458936 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099409303 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087567769 seconds)
  done (took 3.620566278 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080766928 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098152209 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078531555 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095905918 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078489488 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095753547 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077709554 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095397339 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08075381 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095906343 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080518543 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097438115 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081148975 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100883112 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080847526 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097899215 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080639148 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095884146 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078798378 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095958985 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081071352 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098360823 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081109854 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095714522 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078470467 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09853565 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079081979 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096082555 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080934751 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095922378 seconds)
  done (took 3.407159464 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090384051 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105658209 seconds)
  done (took 0.951894114 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078776735 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113818307 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078219045 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102712911 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102812914 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081615361 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107812627 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085884949 seconds)
  done (took 1.505600417 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095232491 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109871194 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081898626 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111328242 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108525798 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095065209 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164007621 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099920278 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087223657 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096851979 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111969376 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080285709 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104440231 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080937046 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104507106 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087848146 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096839656 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086670493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101937656 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097624178 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081781383 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109446447 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083355793 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09529707 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082879451 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109072637 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108031223 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082728729 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102252916 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107207116 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087166209 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093719901 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081512746 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099558001 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079527001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108232745 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111191125 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084558231 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108390736 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083029146 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111021939 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094734993 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086777568 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105507688 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092656934 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099961151 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082949521 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093680897 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097369986 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083649704 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094856959 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081982597 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09549996 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089029765 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103515823 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111397108 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080372473 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101362327 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08445041 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101748238 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08898662 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101886661 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083281214 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099305638 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106008815 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085334917 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106535289 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077484512 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093065164 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07955827 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10719098 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121825931 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089341956 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10067462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082484102 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097386088 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103053448 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082937746 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107767162 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089344209 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100238123 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106101249 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089252401 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099174022 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084993888 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10734003 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097146069 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084149675 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097463668 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09657291 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098381054 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079640324 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097297951 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107644356 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084911635 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098964666 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080040672 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106064146 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076374953 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101085885 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083281576 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100052735 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108504754 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091445354 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10602908 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107163927 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089684961 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09970471 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085961218 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096551902 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08346464 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102838295 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106389873 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076111336 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103039289 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084149953 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100508036 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08845517 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098603336 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083076429 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107858333 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105534214 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081327071 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095901942 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084399773 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099407012 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086069411 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105981091 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09823436 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077096291 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095487169 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085451521 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099815096 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086822067 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104777773 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103370413 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076498547 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097277738 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086504527 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106708294 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099295092 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082050712 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103909135 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083441009 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0997367 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087380978 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10229202 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080434408 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103369734 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101083414 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077432432 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103158964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084881355 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097759762 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085643278 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103682488 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101898812 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083041406 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098610235 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087817312 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100835337 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081430001 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099783524 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080839074 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10928504 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102890715 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077663288 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097221706 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089644155 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098353614 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082174929 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098767795 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102304985 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082416 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098433389 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080936452 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101520986 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093766787 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104643864 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101739242 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087226076 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11103173 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081792612 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101420013 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099600853 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083544775 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101680916 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088905677 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10540147 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105378345 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084753793 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096557813 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088554596 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107613932 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081237355 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098183241 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08077408 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103888349 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10666737 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085896223 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101333708 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080636782 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101110433 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104030616 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085076971 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099371258 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081528187 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104988388 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081362385 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107510038 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101735897 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091138455 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103900239 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077601546 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103755885 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09823287 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087941276 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095295404 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079906447 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098460444 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08352385 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099027854 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085013742 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094645866 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090075966 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10819449 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100286685 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081828037 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099526849 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090989758 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102145534 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085735362 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103211223 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105547853 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095350877 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099611057 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085675602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110226234 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100671746 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076722164 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10601195 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080637332 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100073679 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080939492 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09810234 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085934711 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10948894 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104640369 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076586869 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103770195 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081040849 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099009771 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07848584 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107158237 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104006608 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085070517 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109943676 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084356837 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.1017427 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085918452 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100539295 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101136833 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084124294 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103867564 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084133777 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.1031253 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081882564 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102413457 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080944263 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098508872 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105001875 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082920972 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100207009 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088407242 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099749595 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081711581 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103963873 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101765268 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082910258 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101534195 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081915752 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10414211 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083114935 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100897801 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085674465 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096050043 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090755451 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100618046 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108777066 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083000897 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09805585 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089201307 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103058745 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106596493 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083430178 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102507423 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083664816 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101514269 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085704008 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110388369 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099288489 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091642789 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107358224 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084216801 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104679581 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082133676 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102349107 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081828712 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103174931 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101164934 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082779897 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100442677 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086664104 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103875521 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083183295 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102864238 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101782567 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082727044 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102558898 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077089627 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099415167 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081535155 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101164888 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090075515 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101999315 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103784997 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082537883 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102236082 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081298343 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097331859 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090589211 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110299133 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101752325 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09054223 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100449049 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084100525 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110537123 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094691986 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081089177 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098734704 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080991674 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109787674 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083123278 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110134209 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082776448 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100826261 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079638237 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101971318 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09926327 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077508645 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098931755 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086224125 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104204858 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081624611 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10244121 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084912838 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103424699 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109751803 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082253944 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103347663 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084370259 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097943592 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081289546 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100777305 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085661001 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102363247 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098181972 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080948533 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10035765 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084281836 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109671647 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082737762 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102099502 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089740247 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101496821 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104037864 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087415253 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095408078 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085693187 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101151358 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082553925 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100274523 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086506989 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105489332 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102469985 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089830209 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101175365 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083789854 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102422317 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080277121 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100991858 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101177064 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082791842 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100591817 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083629992 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110486471 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080889758 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102772665 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082174895 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101757055 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105497981 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084039167 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104591212 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090592483 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104338673 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083610589 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107086406 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105036924 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08688288 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103387245 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084226458 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107548707 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100533385 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091437199 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101360241 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084015219 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103124512 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080941506 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101809737 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082623702 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10071461 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106346609 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083263091 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100360781 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081961674 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099968301 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084538645 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106156022 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108856892 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086172493 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104211103 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078505318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098497571 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083897205 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09945599 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084531734 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104237995 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107906157 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085391376 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101927598 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082172702 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109636371 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089427563 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106191804 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08043793 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107019016 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102300594 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085112532 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103015953 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083355738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104041127 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088139833 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104018458 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10121286 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092304662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105717531 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085000419 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104576372 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083370779 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102262478 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09736234 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084013848 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103510922 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090054874 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104989569 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083925076 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111939899 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101193011 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083611255 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106592559 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083371956 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109996224 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079456852 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103994611 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10352996 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085582966 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097624174 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083090714 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101027435 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085736197 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101375179 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079808587 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112126087 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110143049 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086338021 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101504101 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082726988 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097689834 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079394375 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101709167 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085610409 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104514782 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112073846 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083205077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10144762 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079031928 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102799327 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08702832 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105573122 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080909669 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098393855 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082633005 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105045729 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109104972 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082140576 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101738986 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088492169 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104759142 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082667447 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106601579 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07973732 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106210644 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113052132 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085087538 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103086646 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088458005 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111061388 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102636661 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079110077 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103821485 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086007157 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102719933 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084864967 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105317559 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11708259 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086820208 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10184138 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082946075 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107350287 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083524608 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110731368 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103999658 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084520156 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107723086 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086078199 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113828366 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10487461 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089463442 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105015442 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087393243 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103377465 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084909204 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101929608 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082205946 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104168676 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103682927 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088210682 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110953143 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084234668 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112662219 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111418375 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08926478 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099862061 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083548288 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.1027606 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079003104 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103878557 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08156452 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102681053 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100240203 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083709982 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102958259 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090089313 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105345265 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085148436 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102454902 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077598832 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105331125 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088363327 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104395173 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10015319 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083982329 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103586801 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089839303 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107431564 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084119404 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105081549 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103861 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084759865 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098641457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090364349 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102160368 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086863991 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102031768 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08433204 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104510963 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086937111 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109504646 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104102694 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086313306 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115278363 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105725441 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082159766 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10341484 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093060333 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103828931 seconds)
  done (took 57.498939826 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145798822 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080814569 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097883544 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079039728 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112594252 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098907787 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079877422 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099197257 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079954198 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101732475 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079027601 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098557212 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108839934 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124097942 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093519177 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103946246 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098218271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081342976 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097703328 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080458011 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109019718 seconds)
  done (took 2.853694653 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104008191 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117123522 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115018506 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118957421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090337989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115204498 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11418287 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115125322 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099617135 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11128782 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11770108 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115425701 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091025262 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110708184 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111540437 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09321938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118324128 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110166633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115964713 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095074334 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113643535 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114845136 seconds)
  done (took 3.212066142 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084665166 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101979401 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085272273 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097701626 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08292321 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097397656 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087851611 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100304557 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08738394 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101630782 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081738698 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101930886 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104070162 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079848716 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102364854 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081815455 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152112443 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107565113 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083150715 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104952525 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098275803 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085744098 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098800728 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079995497 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10160328 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087684951 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104332751 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082123493 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10225604 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082238454 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104010245 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081574414 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105172471 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102954125 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083161087 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101887883 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083630918 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102706596 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079301068 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100820982 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084616293 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0990348 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083685346 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10475038 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081367488 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102163271 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085646561 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103345514 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097984857 seconds)
  done (took 5.44385621 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104598498 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160633506 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085734639 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143015772 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120765765 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113009508 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087444977 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142268898 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102815854 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082906335 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122469293 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118821724 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103773207 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089359268 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110832596 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103834516 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086493228 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103710081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108411827 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083858385 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107798775 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090462532 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11882004 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11682875 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109442707 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082914761 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104480216 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108608911 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09835773 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109627034 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109506649 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090792285 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12120704 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.1091267 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102742385 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086975165 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121981004 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103790853 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087518257 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101507474 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086422336 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108746292 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110248062 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122363427 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085158795 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108833586 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085231249 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101173065 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117029052 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086825905 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112753083 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118968181 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109262595 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085704582 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108410967 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120589739 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084366043 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102295989 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086662374 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117755753 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100849924 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088384682 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119608248 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107853839 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112473506 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098207847 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110562814 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108575863 seconds)
  done (took 8.110862966 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094207156 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110849287 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120764415 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12097085 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09137264 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110792364 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110507689 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091486547 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110161899 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117212479 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110333362 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133019049 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086371788 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115496212 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111646446 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091910463 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11205171 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11052889 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091574003 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111189147 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110880076 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12027363 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090871384 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120984917 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142479282 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106389335 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090565567 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110799457 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121211072 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110719532 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123578477 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091536558 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111839217 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121103231 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123910427 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091001215 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103482722 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110871061 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091302418 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111705484 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105778265 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101616696 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111000863 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106584814 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09135052 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110818006 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120492278 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12536122 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114163043 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097008296 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110822656 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121225949 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110364038 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091337446 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1210146 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148065076 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121230769 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121489435 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110957669 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100393816 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120863641 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128416169 seconds)
  done (took 7.664511907 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106844273 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115716312 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117496279 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099514572 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082611774 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108718227 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082366515 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102010862 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11381998 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094462937 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11698632 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109105543 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091022507 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117233118 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10950861 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112187084 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08988046 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109159157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114083115 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108555504 seconds)
  done (took 2.921033762 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094157325 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123976633 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085298217 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112114063 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107854238 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091020739 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107153548 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10708826 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085823303 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107973899 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096348871 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115742416 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105985556 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091048847 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115515376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112016904 seconds)
  done (took 2.477680956 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09562823 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117233415 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120119465 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084760659 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103937432 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081026978 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105123939 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10033546 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080666572 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120533362 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084507841 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108760689 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106813623 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083154576 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101496137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087309826 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100965939 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082806031 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104879868 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119512293 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09633412 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104083054 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105173368 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087615661 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105337846 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089930818 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106236845 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10254869 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082789408 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104905072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084742766 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113093876 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101334261 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084369916 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102801999 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082644111 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104944758 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085652179 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108532099 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104181382 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083321946 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104650596 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085227117 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106369815 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080437713 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105791354 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100950545 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091391822 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102531894 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085757111 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104899418 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106815694 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085840438 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115529463 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088203819 seconds)
  done (took 6.217736502 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099305087 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10930201 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079992308 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102700522 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087694546 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107563149 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108395945 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087571898 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106793301 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082894564 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106772924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090068058 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107470447 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107874714 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087228425 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108867917 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080717353 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10595974 seconds)
  done (took 2.596892584 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091196291 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104824459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092378037 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10572302 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084706459 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108608589 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079799635 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104866685 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102677042 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085832196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104598059 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087398171 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103484162 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087441054 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104886522 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085240692 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108163609 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104065162 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084519412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101283972 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087669018 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104529931 seconds)
  done (took 2.95148546 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118469682 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125171196 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092658401 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228329604 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103223357 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132472054 seconds)
  done (took 1.629818776 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109028301 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120696288 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105836886 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107082323 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115117687 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107192176 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08799573 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107541517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118679233 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101800388 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107907592 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11811473 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117477003 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09685489 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114712181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114274178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107239097 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087817115 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106426022 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128563793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087515261 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118671207 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107630767 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086503164 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108175521 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117729076 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117544645 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122767169 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087087059 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118252219 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113982065 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088611672 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118489837 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122959645 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108792375 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097306794 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107727976 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128734957 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114004256 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096456623 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109236669 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114537965 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097874806 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113777118 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117930466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107245822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093107028 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108729574 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107777358 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134685102 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094309209 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117710142 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114900424 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119005276 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117167496 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135100453 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101257628 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11814889 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115226721 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12207911 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117150783 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094373454 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116834707 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122042444 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114900162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117424363 seconds)
  done (took 8.123237977 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102742208 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126475405 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108432386 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121988446 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097955482 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107548682 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107831399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087099394 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108016163 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106587151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151725851 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088714122 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118269243 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117619518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108188381 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087935119 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108656536 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117017402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086474005 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13502818 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108718982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11815361 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117266685 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097555109 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122698296 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115012979 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108424401 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088408296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108013364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107897954 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094808849 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108289908 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117235553 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086623124 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117587812 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108611423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087013033 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114721152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1086809 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114882573 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09666415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128977451 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108830241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108057296 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101759698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108296886 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109092811 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086836088 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108763084 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106620162 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102399673 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123526183 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122320006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117712804 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107922543 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087637846 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108341701 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108411488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087545285 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115468483 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118513537 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107715084 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135324011 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088188628 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108317138 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117199491 seconds)
  done (took 8.000295495 seconds)
done (took 154.293565776 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.09827696 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136318525 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095389257 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168023278 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105851655 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119123651 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137607385 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09722184 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106391691 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085749431 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107147386 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087272502 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171329687 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085074653 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10683217 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107487728 seconds)
  done (took 2.649241701 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200117377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254498219 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102448598 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105200447 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088852868 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110713205 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104774902 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091165655 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109444639 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086146683 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108928569 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08605997 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105910069 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085839304 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109914154 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087691248 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106091015 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088069369 seconds)
  done (took 2.872109879 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112453209 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146637322 seconds)
  done (took 1.105828221 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119289765 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180495464 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318426604 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155225357 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105695443 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127422796 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156115587 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130562092 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196521685 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122638167 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1231399 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097099837 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140698679 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11542913 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094111256 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11781022 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141121353 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092939575 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11489625 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116737524 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11707176 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106302356 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114900563 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093401108 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179925927 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119955895 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08482513 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106956777 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115853077 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095113206 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113554619 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124405901 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097707184 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176326868 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102049155 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177810122 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099884151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11301738 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114962662 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091595383 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119164276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118179311 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103807001 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118489104 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084496202 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117983144 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105896299 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085066613 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114761664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097080487 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114959129 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113308068 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155238191 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118272436 seconds)
  done (took 7.520067164 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794471328 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156417253 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090713095 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888368084 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13888556 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103016829 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784916616 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13615067 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234823578 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762468085 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134317993 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121215236 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229985363 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236622414 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956397917 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315123205 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672318923 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10169196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15218158 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15426052 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119539952 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137729044 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129916324 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453574128 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.0953358 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112349104 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116707846 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099363123 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159689035 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126296216 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114072891 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178182359 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249898633 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207522345 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115784661 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089594599 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111898028 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169297686 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268593189 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216134299 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180754878 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087758385 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1111001 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121518752 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111912376 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108704593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165611855 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173096895 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193558928 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092253662 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121333484 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120196839 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119404292 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165178763 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120036819 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297474114 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311810048 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112114563 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120541986 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106639329 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266208302 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12298651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225083848 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117657748 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213370509 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111462669 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783221294 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190944166 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090542544 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118764142 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119190929 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094679665 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122047464 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171000324 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393687693 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124900115 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092869164 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111782911 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205641952 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125422654 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110473242 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163044682 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116132548 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098953659 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125884715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122379726 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170535186 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228750207 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124606335 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120293984 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094325955 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125443429 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115707961 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215022701 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221130107 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162694253 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21057495 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123466986 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165349504 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190111934 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097995929 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194671921 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097332487 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126007856 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123103798 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216712074 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146480354 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102120021 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11634145 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118492013 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148869867 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127777691 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098494892 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170780635 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.503620051 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169026244 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108465966 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128181831 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098880759 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160214188 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118074121 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261399854 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121763935 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170896333 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119455491 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088194764 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120812852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16653029 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1226611 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12085668 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101769989 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118803752 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236679516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21791525 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123469659 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222719847 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18427531 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119053194 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172441466 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122504679 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16759256 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120611183 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121726229 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095366917 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795945032 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124738453 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098919349 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117425805 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195334531 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111219531 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102876453 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125659531 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108733322 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756569743 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128299818 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121066707 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101982133 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11929716 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120683692 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096514573 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115800269 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162442774 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230969809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121754082 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119882199 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103357931 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183714247 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094623086 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125674006 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12477729 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125111998 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100443569 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115714637 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12366881 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170265106 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164054415 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221771861 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.592431493 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091317901 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124956622 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228174444 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089837772 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287845004 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119224933 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225712978 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165710812 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120681832 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309051441 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167798759 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198597681 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127208272 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175179014 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087378122 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118773082 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164780993 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112995936 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118259125 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162370611 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125538619 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103009957 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959809691 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111959526 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228416583 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087277221 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193714528 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093860306 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121287424 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296701316 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1122213 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107171622 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186898812 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093724481 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126295949 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698503772 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12619572 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122027663 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118972409 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200807481 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186201192 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098430137 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120469424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121507869 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163519034 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207590134 seconds)
  done (took 44.157214455 seconds)
done (took 59.143402499 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276180732 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21360529 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257658442 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168295535 seconds)
  done (took 1.859468615 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170933397 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147841385 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120832765 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10773184 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149420283 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084979391 seconds)
  done (took 1.650110393 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351465465 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271602615 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23843438 seconds)
  done (took 1.736464478 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28676546 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.24823036 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.35449179 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.399560075 seconds)
  done (took 2.28024535 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208513194 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13177098 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110618179 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104652085 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196896761 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250355957 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141127125 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202242525 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121658384 seconds)
  done (took 2.386664364 seconds)
done (took 10.786471138 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.128514171 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122451496 seconds)
    (3/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.264788194 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.250788329 seconds)
    (5/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.258224252 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.151527235 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091697539 seconds)
    (8/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.1136007 seconds)
    (9/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092871463 seconds)
    (10/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.189128736 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125861957 seconds)
    (12/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.251971665 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093604781 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.145364276 seconds)
    (15/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229323977 seconds)
    (16/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.10154035 seconds)
    (17/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099176257 seconds)
    (18/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18782236 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.229340218 seconds)
    (20/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112718368 seconds)
    (21/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095621384 seconds)
    (22/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141696189 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.217925048 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096550943 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139277 seconds)
    (26/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112753611 seconds)
    (27/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.169606812 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.221831033 seconds)
    (29/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148422413 seconds)
    (30/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185130295 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10899282 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093687165 seconds)
    (33/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.132877917 seconds)
    (34/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095747851 seconds)
    (35/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116881909 seconds)
    (36/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.244464204 seconds)
    (37/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192738438 seconds)
    (38/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.189243364 seconds)
    (39/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113785797 seconds)
    (40/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.212070494 seconds)
    (41/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101571379 seconds)
    (42/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.184848044 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.154387851 seconds)
    (44/286) benchmarking ("sort", Int8, true)...
    done (took 0.218969926 seconds)
    (45/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095092968 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.135886413 seconds)
    (47/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09764014 seconds)
    (48/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119298525 seconds)
    (49/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120469972 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093734929 seconds)
    (51/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152698795 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184912823 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088086956 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116805625 seconds)
    (55/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.172262008 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199521801 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.136880081 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111536717 seconds)
    (59/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067875892 seconds)
    (60/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.142622245 seconds)
    (61/286) benchmarking ("sort", Float64, true)...
    done (took 0.227891662 seconds)
    (62/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.120223056 seconds)
    (63/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112013175 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112061771 seconds)
    (65/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122642293 seconds)
    (66/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.188024965 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213834767 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114679071 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166893836 seconds)
    (70/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109249135 seconds)
    (71/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095715947 seconds)
    (72/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115797601 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.136944477 seconds)
    (74/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087163936 seconds)
    (75/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190616656 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.087499764 seconds)
    (77/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.155427795 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137686876 seconds)
    (79/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091022448 seconds)
    (80/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.14048334 seconds)
    (81/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097448225 seconds)
    (82/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184505954 seconds)
    (83/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117272694 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097332052 seconds)
    (85/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118639024 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.15303772 seconds)
    (87/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.171711851 seconds)
    (88/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173265834 seconds)
    (89/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06650368 seconds)
    (90/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117209936 seconds)
    (91/286) benchmarking ("sort", Float64, false)...
    done (took 0.14863901 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116916464 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093284232 seconds)
    (94/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115260871 seconds)
    (95/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109517451 seconds)
    (96/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.12683175 seconds)
    (97/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113182573 seconds)
    (98/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.160788061 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108947771 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131879069 seconds)
    (101/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.175162603 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166904567 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106214324 seconds)
    (104/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.097786571 seconds)
    (105/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229587723 seconds)
    (106/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126200341 seconds)
    (107/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091532573 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117930642 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085904212 seconds)
    (110/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112054298 seconds)
    (111/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.184442378 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.181708634 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094943867 seconds)
    (114/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089262798 seconds)
    (115/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.121463736 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117407039 seconds)
    (117/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099356556 seconds)
    (118/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.152836932 seconds)
    (119/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183778537 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092087021 seconds)
    (121/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123438334 seconds)
    (122/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132327678 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086405084 seconds)
    (124/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.226387117 seconds)
    (125/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186984212 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086089782 seconds)
    (127/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115574055 seconds)
    (128/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.109295121 seconds)
    (129/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118483214 seconds)
    (130/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173836967 seconds)
    (131/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122699562 seconds)
    (132/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091333529 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094213963 seconds)
    (134/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173283813 seconds)
    (135/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065964721 seconds)
    (136/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115468752 seconds)
    (137/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.08770875 seconds)
    (138/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118103373 seconds)
    (139/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.156981422 seconds)
    (140/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.129377225 seconds)
    (141/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065363575 seconds)
    (142/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181257276 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108715386 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095750572 seconds)
    (145/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136913549 seconds)
    (146/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067482329 seconds)
    (147/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162388569 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118545838 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086658577 seconds)
    (150/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.098348135 seconds)
    (151/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066630443 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096663507 seconds)
    (153/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190400878 seconds)
    (154/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.11045048 seconds)
    (155/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067102497 seconds)
    (156/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116301994 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114624196 seconds)
    (158/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117810824 seconds)
    (159/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087779922 seconds)
    (160/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112513601 seconds)
    (161/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.1871285 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067066708 seconds)
    (163/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067140587 seconds)
    (164/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092329365 seconds)
    (165/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077591244 seconds)
    (166/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110388405 seconds)
    (167/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067630046 seconds)
    (168/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109090641 seconds)
    (169/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067409471 seconds)
    (170/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087803608 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185710544 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110198292 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135596888 seconds)
    (174/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068609971 seconds)
    (175/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06694623 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124356958 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09332567 seconds)
    (178/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116461951 seconds)
    (179/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134847372 seconds)
    (180/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088183182 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119425514 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086822965 seconds)
    (183/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111206681 seconds)
    (184/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066569478 seconds)
    (185/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067305065 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.219989151 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109029028 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.192480775 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085997855 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110684568 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066902776 seconds)
    (192/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065840383 seconds)
    (193/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143633566 seconds)
    (194/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076519841 seconds)
    (195/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091583425 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096009055 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120289503 seconds)
    (198/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089300205 seconds)
    (199/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121554033 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068435792 seconds)
    (201/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.090236494 seconds)
    (202/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.114947868 seconds)
    (203/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164882053 seconds)
    (204/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092384871 seconds)
    (205/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158317608 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114874819 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092382703 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101466601 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068570277 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.10849469 seconds)
    (211/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078376813 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.09717896 seconds)
    (213/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109346027 seconds)
    (214/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067035009 seconds)
    (215/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091520793 seconds)
    (216/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075691458 seconds)
    (217/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.319592383 seconds)
    (218/286) benchmarking ("sort", Float32, true)...
    done (took 0.228729024 seconds)
    (219/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111283145 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135505473 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096367421 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123482669 seconds)
    (223/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077254278 seconds)
    (224/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.089963334 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067420208 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066828482 seconds)
    (227/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168478278 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06731598 seconds)
    (229/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089063972 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06807275 seconds)
    (231/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093233071 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111393071 seconds)
    (233/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067384373 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109588624 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086038742 seconds)
    (236/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109136092 seconds)
    (237/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08817786 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.117533658 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09271924 seconds)
    (240/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162465729 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118499728 seconds)
    (242/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067097689 seconds)
    (243/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066955058 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109372263 seconds)
    (245/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089863338 seconds)
    (246/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090073665 seconds)
    (247/286) benchmarking ("sort", Int8, false)...
    done (took 0.188293855 seconds)
    (248/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102019166 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110092781 seconds)
    (250/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09359264 seconds)
    (251/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117626168 seconds)
    (252/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067580845 seconds)
    (253/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109015533 seconds)
    (254/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.114098323 seconds)
    (255/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090379488 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094130694 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10977848 seconds)
    (258/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12723116 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112040235 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.10867002 seconds)
    (261/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088014316 seconds)
    (262/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090608689 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095611823 seconds)
    (264/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218610975 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110207165 seconds)
    (266/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066896275 seconds)
    (267/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067159907 seconds)
    (268/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091419051 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086597851 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115436556 seconds)
    (271/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075784942 seconds)
    (272/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090627492 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067028976 seconds)
    (274/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068357746 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109564028 seconds)
    (276/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068218386 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181856065 seconds)
    (278/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067190031 seconds)
    (279/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090789296 seconds)
    (280/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067073148 seconds)
    (281/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066765844 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115224984 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087689557 seconds)
    (284/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089516738 seconds)
    (285/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066709474 seconds)
    (286/286) benchmarking ("sort", Float32, false)...
    done (took 0.173140491 seconds)
  done (took 35.964589952 seconds)
done (took 36.842453958 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099906591 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147720858 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096365547 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135221418 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123320187 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091258479 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117248088 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097585346 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123314636 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124420674 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098474839 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092231956 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095943848 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119257893 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096154935 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137515451 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12197448 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093734694 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118869489 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085340119 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120106115 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086237048 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111346834 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069417831 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120724065 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094004508 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115938322 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119527435 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086480151 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109857795 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089801614 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117298767 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085471298 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122874959 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093039863 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117332017 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096425994 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119155428 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111076577 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085856895 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117494221 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08670542 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116795946 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094075927 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115430715 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091945992 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11785145 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098929276 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138530785 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114413498 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094265444 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119981423 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095722574 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117142529 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091013337 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120390008 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092257525 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138738119 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118436227 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091721556 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117930348 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095109784 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115127294 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095307668 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119207508 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120927414 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097613196 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115399528 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096517808 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115157032 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086089316 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118953556 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09006497 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110000744 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095226449 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120840958 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084954194 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115930106 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116778257 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091293245 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109969748 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088912639 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112086555 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092450255 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111952749 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069078548 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112867526 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092465293 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109338891 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0959385 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115939406 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093520747 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112149881 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099265733 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110219773 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092581256 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111851887 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086837305 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11313873 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090971188 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110557705 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08953868 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119735661 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087878288 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116281181 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12412018 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086532564 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116333266 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086235473 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109942397 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101558451 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122032474 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086985445 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115959645 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08582798 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118506608 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086649174 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110545709 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086918714 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109963562 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092813211 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110602012 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089307676 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118109953 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125098802 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086545417 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114491957 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089789568 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109421716 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091973993 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110871203 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087658929 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113069001 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077484788 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113308893 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08710137 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118071352 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090268609 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120145651 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088421583 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120023615 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09176084 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116395668 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092580798 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110192822 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07450173 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116696613 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089859482 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112688293 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087194261 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113298964 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087320129 seconds)
done (took 16.845890004 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086645083 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184592604 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15202056 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142493722 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107450935 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111325448 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121554468 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118129971 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113753223 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142979815 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109918243 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130977473 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147538991 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086372214 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112183802 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091166906 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112875876 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102529363 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145485051 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132882287 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163351587 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087188836 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146944242 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135134606 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120964701 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113767101 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111822262 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091408461 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115388223 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103055902 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131988944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114569653 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087118151 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133265048 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104711752 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119435855 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087405926 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118456206 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08717399 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111642806 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140615661 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133410251 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093571556 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118037482 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091769419 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114863888 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089226901 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120941904 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098471881 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11551779 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12609563 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156085391 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091107363 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121073215 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086306049 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122651749 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122282122 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090291199 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11176207 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090201444 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11094593 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091511115 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126748261 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142358198 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091820165 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121158769 seconds)
  done (took 8.581529264 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10427656 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139263562 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105604677 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130139164 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111771199 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087972126 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112295585 seconds)
  done (took 1.728345934 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088032024 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134364962 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111054358 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135140654 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132391557 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112075371 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122850778 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088804331 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131763494 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089156555 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134262823 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150406699 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090491298 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120166289 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137543706 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088960287 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137576352 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088270056 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117342562 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11203926 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115834305 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13464881 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090403679 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112960209 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10307734 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113148726 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162976862 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093695195 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114547159 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092083372 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112452199 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151392854 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102209675 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124605213 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089655361 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129588836 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128506631 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086972007 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126382181 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093996252 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127450382 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090075132 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115092343 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087365074 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118555371 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099058171 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117716146 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08942868 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116243496 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133422656 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.105984513 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127695862 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088320232 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118064917 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090008409 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119865011 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09824152 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114261336 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132844971 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090432651 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130574945 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105772412 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127056069 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130229444 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091780573 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127559909 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102708685 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116782931 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090834033 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117166202 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105265698 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112070149 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090546829 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124249148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115764429 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112186727 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137793243 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090161614 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12434412 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088421108 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113809265 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114480912 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111621781 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118233048 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089028035 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117467628 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092784214 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111978144 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088301248 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117684704 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087826875 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118099346 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091972917 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114444121 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09153345 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13187471 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114725122 seconds)
  done (took 11.789493811 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090228538 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114436464 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091172128 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11442193 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089800921 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115384136 seconds)
  done (took 1.56312601 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114836873 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117308384 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10416214 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11988918 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155528833 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103794117 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131030852 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123636578 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107754357 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127334917 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129739143 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104828343 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135589451 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121235026 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104356534 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119833842 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104096131 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124689697 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12714384 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097805734 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137123152 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121393399 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09689801 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132918226 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117914456 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096340507 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126260078 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103048159 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127088117 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124075463 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098498011 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117306708 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095542292 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123010464 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129244896 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095330663 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121020035 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118300981 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09978974 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117439807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10477819 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121243124 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126965384 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094786214 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123705852 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120682854 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093593799 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125704103 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104347699 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11993587 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119517484 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095336978 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118697173 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094601984 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121478917 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124274426 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094081085 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128586936 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124665177 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095858408 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120233829 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092997565 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125600191 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118591781 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10430812 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118010122 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120468748 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095903434 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12238789 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095250598 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119157598 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092301461 seconds)
  done (took 9.203000571 seconds)
done (took 33.79974179 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688815555 seconds)
  done (took 1.636274186 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.842992321 seconds)
  done (took 1.791555067 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.021110511 seconds)
  done (took 18.001825959 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.489346066 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.426807293 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993726187 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179303248 seconds)
  done (took 6.03942074 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.939474569 seconds)
  done (took 1.908523204 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282712679 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234799714 seconds)
  done (took 1.472027335 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.783184896 seconds)
  done (took 1.748952552 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.369102816 seconds)
  done (took 2.325917509 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328133393 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18398885 seconds)
  done (took 1.476188151 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549939635 seconds)
  done (took 1.514655132 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.37612114 seconds)
  done (took 11.346164322 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267790337 seconds)
  done (took 1.246257049 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30165099 seconds)
  done (took 1.270501794 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.55939623 seconds)
  done (took 4.529260163 seconds)
done (took 57.267962693 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098993359 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126424207 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101537658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12440422 seconds)
  done (took 1.413988752 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101543237 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120663869 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099947865 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12071196 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126125238 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09654557 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123611495 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10098471 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120660942 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096500072 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121077783 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120685144 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098550058 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122676012 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09330591 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123888727 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098896669 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12090362 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124464865 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096763188 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118666623 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097520296 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12505073 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09380078 seconds)
  done (took 3.634056411 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100219643 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119090922 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096186069 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117447411 seconds)
  done (took 1.409819415 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100082467 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130889144 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10469572 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125166342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132077836 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105371857 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11742143 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091487568 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119809082 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099947515 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115648239 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13915497 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106361325 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124505379 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10197407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114347179 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090793993 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130812045 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125222937 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100201375 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118942309 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099515891 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11533369 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108614787 seconds)
  done (took 3.691370019 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169994204 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126922275 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138273582 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09568376 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.1599285 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141675709 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088260602 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141600162 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087531915 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13109912 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117583237 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134123909 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12895393 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087607811 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113861723 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087974425 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129179114 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128793245 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09130059 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127900859 seconds)
  done (took 3.408118152 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097195596 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117545496 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088659791 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116685848 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098956791 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121141279 seconds)
  done (took 1.618324243 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09093292 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114411333 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090593242 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.1140967 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093864014 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114602751 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088204983 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115217646 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088929169 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114366438 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089388903 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114250719 seconds)
  done (took 2.207204823 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503663585 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120790379 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12021522 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090937471 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120927662 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089507857 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130068813 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092279428 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140607319 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089118342 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115822842 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090618497 seconds)
  done (took 2.682487904 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233603267 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125257652 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280590048 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371136876 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154333968 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165617499 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279568277 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158553525 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223962493 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149159138 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202569961 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196621057 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152112187 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213947156 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112784317 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145334413 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188032681 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246301918 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152997715 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235215373 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181945328 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167904055 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179341161 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150474858 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138535864 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17257991 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121211337 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103922716 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233777988 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176220647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216001352 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163460438 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1467515 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208747102 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253652027 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222259955 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284154908 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136138292 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.140663636 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167316605 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260784122 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137680471 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203393297 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155355855 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132203498 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217843802 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165700943 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176953981 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146259855 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112624531 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222859639 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238748763 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193998914 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138351022 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30231017 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148574683 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157845588 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19387692 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251418044 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227417138 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187675311 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120219078 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18901832 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191825383 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212047332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152578558 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182509414 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148505917 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182179746 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188602007 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190606899 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178772175 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185040172 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139494608 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169396 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17170633 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172934178 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258254514 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212376963 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096040105 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168848386 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150236517 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134382853 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195692586 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098281008 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238662096 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143703059 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163808416 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214650804 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158464178 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161094224 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193113461 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211667642 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120846249 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111192052 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15469116 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154136727 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176968456 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139953904 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157066871 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157432602 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103087346 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169227461 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124336015 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183857593 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118578446 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171732614 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182382552 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127014911 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159947236 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151419958 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124049398 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20168293 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201759995 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14274248 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132490385 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209945438 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178288068 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141031136 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176326042 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228343521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117611834 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150111544 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226981834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218313732 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140641293 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227865617 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128701135 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135604057 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131861466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181961605 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154310931 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162489255 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135482287 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184216004 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23181579 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099157746 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138495719 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193931898 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134283643 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131850685 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155637635 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148356625 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111179567 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142801139 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146119766 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176055483 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177891232 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155428879 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164699034 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153468257 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254804111 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142227145 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150888983 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149137846 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094377815 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.21901317 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200341965 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130222173 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206404459 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169405134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22997908 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170400906 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1343301 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177469804 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103446179 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12041626 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19365388 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16712305 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160726039 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222403276 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200189295 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.206429107 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185781815 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166031985 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174320363 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16583284 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156872313 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137985466 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160957764 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158329061 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096780298 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139752202 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133682144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148427636 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11587179 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133995788 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223177565 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171152408 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189710581 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159004662 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150366932 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182344693 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128897202 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174634412 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177985024 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148954965 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225259866 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195486672 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185571878 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142945275 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227494601 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093851206 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125285737 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114350308 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195255077 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106196049 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135919006 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163832103 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18077004 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178496491 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196580977 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211047252 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171407619 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217621553 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094978364 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170224828 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185121635 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177361669 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179855314 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141495908 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150282118 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176898602 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158392811 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255002997 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169796155 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176502784 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233213113 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122688723 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132446145 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150051726 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178419623 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154230455 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175513219 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146525076 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14202392 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160343349 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10335258 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187463153 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18583898 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163123697 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186685167 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150647267 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211498745 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101321501 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163092564 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160907617 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165116339 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108667711 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174677396 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202910198 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148559598 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166188519 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215317524 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10354226 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307589081 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234054295 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193800853 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138972432 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155470061 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16294849 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163126273 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169642266 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179735657 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159109194 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188028658 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159995029 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136683822 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141086335 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148731664 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150199421 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104325703 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149061852 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17655782 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138909484 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185123673 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157171025 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15885441 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173032802 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15015605 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144542098 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151028984 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216148431 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212209333 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212295768 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152408338 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177910124 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235310959 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098618024 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132996377 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133323875 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178849396 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108736734 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221234319 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187939144 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231122246 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182620587 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179656599 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140246479 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11956205 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129187209 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16754957 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234658364 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151670537 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147560696 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200284406 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138051087 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131344049 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166208453 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29182395 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146868402 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195411291 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079564077 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306392543 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099633942 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132744525 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163010988 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236197394 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108987455 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178598217 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172799033 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162770537 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163577703 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150330238 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190954932 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244217736 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202143249 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208007798 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104713012 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157070527 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175318267 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220534363 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158798516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110384143 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23375936 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196512707 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194471779 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142305196 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170291954 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168466219 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158341447 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21638795 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106950303 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236304372 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134254547 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194067619 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153364759 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139029829 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176431803 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189107928 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141621464 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214600363 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184754305 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135436067 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106084234 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16933382 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206088172 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156005503 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100431232 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208195703 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097626506 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223809577 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23178756 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136020542 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156055946 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146410164 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108137041 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155366999 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186428202 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114295843 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165574489 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201988746 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136386859 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190976454 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232477882 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170483774 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173460302 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145664937 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692177253 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131804484 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194163076 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14813838 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233621857 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122347589 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201015267 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131527021 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168453207 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225734127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161350889 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232308595 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194596957 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.205206238 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104791189 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157927259 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155590667 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145189916 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152521283 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169399909 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160877331 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145224681 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179251901 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164367326 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136468061 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141067439 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199989031 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148021392 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183009115 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181210498 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138726213 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174279801 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18784423 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134476324 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179418207 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238777425 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143195848 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151755445 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10533892 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.14954724 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264722457 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123997797 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190342448 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185620754 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160534437 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16966276 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146710487 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222856756 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158269932 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185923173 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141980359 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159016746 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15700274 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137596832 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102763517 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156222573 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168380541 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150956428 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159620843 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163902868 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19525472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095531462 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144005411 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315274838 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178282293 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215682037 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135226383 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135918794 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162339295 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122230078 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.203817946 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179111545 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134969833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108284139 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137267284 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130019486 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135687688 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15774198 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197345516 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164989657 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236314798 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108010703 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280173884 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141128714 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155854343 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088306331 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13287711 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15068706 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146749296 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158645753 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192372911 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263684193 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149799595 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105946828 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150158934 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126029239 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107987415 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163192918 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16422904 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20576203 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144711064 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081788646 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156173912 seconds)
  done (took 82.620543031 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171287616 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133177458 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147593967 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201820191 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176797357 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271169159 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211848437 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254262334 seconds)
  done (took 2.63780761 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093381548 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145991655 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156866719 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132745513 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091274221 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11964408 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343556162 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132748734 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11606251 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121628182 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173692249 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093691184 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551268676 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091112771 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120016491 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106971847 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091473288 seconds)
  done (took 3.746002246 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.082310738 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.454164086 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.997127421 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196029828 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.812795048 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.095960053 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.721973954 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.16769014 seconds)
  done (took 60.604021855 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114523215 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135331273 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122872638 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152704774 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140656549 seconds)
  done (took 1.738763326 seconds)
done (took 172.376890189 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097176933 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127172872 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097115356 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12932236 seconds)
  done (took 1.516082009 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095025119 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069964564 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10031628 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074237284 seconds)
  done (took 1.414414576 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188861502 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168076335 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409121754 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071139798 seconds)
  done (took 1.584500799 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113785609 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131565739 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103326136 seconds)
  done (took 1.434541531 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105442104 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128537974 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102763412 seconds)
  done (took 1.418876911 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105146078 seconds)
  done (took 1.186936106 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106970749 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136292258 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108093311 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135864549 seconds)
  done (took 1.568993871 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098565729 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126527515 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108898719 seconds)
  done (took 1.414920819 seconds)
done (took 12.973589909 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102410511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.512710293 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385238151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143876209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722071885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380108201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034288195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145618168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165192701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093442673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138849196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671200353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025810519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.472241713 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982269592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377007727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675794488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121532647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119241137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093318628 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016545461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091178988 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121625242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092594977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702186109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425238519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094477593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371056691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091615092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125701001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382343988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121844634 seconds)
  done (took 17.067685523 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094367393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172798902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097779188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137121008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123062292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096330965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124547976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093015493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179506543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122119006 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110399112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120893099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125401045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094002427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141920711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091784297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125366749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092393753 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121526397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121710727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111149838 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120038993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093810337 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12116923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09299276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134722921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121670602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092968133 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119870053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098134616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126987582 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095210424 seconds)
  done (took 4.795414152 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139871211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182395539 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127985969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168114321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124191587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197735181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11785069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182046372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122860622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139336473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092336776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156238769 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093651775 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142121433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120953582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095877218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122146898 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09195135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122515878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138771698 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092757276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121470395 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092827379 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122264594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10774153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123518576 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120659328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092919497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126539857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098732011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123228544 seconds)
  done (took 5.115567392 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096530432 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125858979 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108340902 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138469778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094256619 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125486477 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096899394 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124562594 seconds)
  done (took 1.996236076 seconds)
done (took 30.057815298 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110230602 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126403325 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106062025 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133735592 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101755273 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131839571 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090954339 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133262179 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13348617 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101659954 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137073681 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091800428 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122189582 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091802642 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135524641 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096680964 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133078921 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10104639 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13428302 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132063738 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094064276 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133207081 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102922947 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133058874 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104359734 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133116352 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137220191 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09888522 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12235071 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093647857 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124007712 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102962608 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123252012 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104764496 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126257184 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096678835 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122767458 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092872544 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132144688 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132277882 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099716006 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132456065 seconds)
  done (took 5.966510247 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107131765 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138978562 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104414001 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080141596 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116656219 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079836451 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138116308 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078341497 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109881975 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107783749 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073509488 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105366698 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077673038 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101112952 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076439912 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075044215 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107844768 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0753507 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07525751 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105668362 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0795541 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071846711 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107495262 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077870281 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074021736 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109063705 seconds)
  done (took 3.547237306 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099462699 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134062109 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112570195 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183794175 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160267341 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100178994 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131259614 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139721596 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109101 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120771857 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096477252 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149565869 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109960421 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130261193 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091839675 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137309597 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135930642 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093851403 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128087279 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111937762 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13843649 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102739645 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141294873 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13276316 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091841809 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123235465 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09634318 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134755311 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097069748 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130885252 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09640031 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124979216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122992567 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103972233 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126112815 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095459453 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141996262 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102335633 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129854242 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092098208 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129367471 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121291683 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113033998 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162064062 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091296405 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12920728 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095331233 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131965859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121008714 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110932463 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131022822 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091332684 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125321626 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091462352 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122231057 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106386751 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123635402 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09421666 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130322828 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126356899 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104717548 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124874155 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109008616 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12146833 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099840173 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12093993 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092799089 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121529514 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14429181 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09431114 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161644012 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093988789 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124098468 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101299946 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130070756 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127949432 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093384306 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137731577 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102413695 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125806134 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101535225 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125217667 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094842096 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140457409 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123413085 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094834327 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121443573 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10004106 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12389848 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095026539 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136590341 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091857774 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124411674 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110317995 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121888066 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09389671 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128111223 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126423872 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091732459 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135085452 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098166348 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123571455 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10275715 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121636665 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123815872 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102905488 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125751078 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090930886 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126362395 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099433914 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122369946 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093478005 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125866714 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094671281 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131904093 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098427923 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126781565 seconds)
  done (took 14.773882293 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22888572 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214827538 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234668663 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264513032 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13443835 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116211086 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211697434 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154487124 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123042155 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159370512 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174068134 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180542372 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169526361 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181282715 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169967973 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09296906 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141872537 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133522056 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.24390453 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257210253 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143797152 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100060654 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160278364 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159875181 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136716003 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131604784 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110150782 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134166304 seconds)
  done (took 5.773415409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108379375 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155500893 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098567567 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144324898 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149487858 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092995894 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127797304 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093602499 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135158761 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135503677 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092781973 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128939872 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100019183 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131679782 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122045099 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103146746 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130997465 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094692805 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125368392 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096883327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132450172 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100969311 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127245844 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120679874 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102902423 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121133921 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086454135 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14295054 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122138271 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115889929 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120879181 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101133056 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135580211 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093635083 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122298429 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095053979 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124818463 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095199631 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124469941 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091167183 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122357684 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0772328 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121188511 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106922103 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128483503 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079790767 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129874495 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127828534 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094268416 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120318956 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096763159 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125579257 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096278891 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130845302 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096158358 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124543317 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096761371 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115605725 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100094271 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125551278 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084523945 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121069613 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098516122 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118262462 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101999367 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128590776 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092296749 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124759352 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096561684 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129201997 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095147305 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129503211 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089972169 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125275542 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095953528 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128101315 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095484556 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121798454 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121018793 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093668177 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074273736 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122751217 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073127736 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125463424 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092015077 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121799059 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095200581 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129361281 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137790232 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094434462 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130869451 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093790314 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122405755 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096528839 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112782589 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095680214 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140146166 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142345659 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09386218 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121865508 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107324595 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125629072 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092642333 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106401329 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101654106 seconds)
  done (took 12.917627926 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126392427 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153433682 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094585703 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141129319 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156795015 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156312463 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100595976 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129966535 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094650443 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141325691 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093156526 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131968841 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092609929 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137682774 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.1560943 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10338261 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.1244988 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107487948 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127590318 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169678222 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112733686 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142671509 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109602623 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1236708 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0989751 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139233856 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160923421 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107324931 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136042816 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14223497 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107714505 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16094384 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113361136 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12809598 seconds)
  done (took 5.44986328 seconds)
done (took 49.515114307 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211175057 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428399056 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.186044786 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.106224199 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.233227656 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.203754618 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199497081 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.199303194 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.784114523 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.186925811 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.42541176 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.711815359 seconds)
done (took 59.991492425 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.323275062 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.321331537 seconds)
    (2/2) benchmarking "String"...
    done (took 1.449979541 seconds)
  done (took 3.905975603 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.557842703 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.122852563 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446607696 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186485891 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.186082471 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.473213009 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.86465892 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.76616526 seconds)
  done (took 28.162718211 seconds)
done (took 42.064803471 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.212709289 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.260850512 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.201128638 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170697538 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299751225 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.216446222 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.439717493 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.33930631 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.211349274 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.173138267 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207863717 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.197466038 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.195275471 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.472460969 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.191972778 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.187233055 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.297930066 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.897934586 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594283659 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.191072426 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.212966352 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.243573677 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.206289199 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.190948254 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.21169973 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.196494233 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195916514 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.201794893 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.793010256 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.193304462 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.207471092 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.580900115 seconds)
  done (took 190.510295583 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.188177359 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.25372876 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.358548597 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.216140405 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.650238315 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.389061254 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.320044348 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.73493774 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.20956268 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198232161 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.427554846 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191840073 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.508980574 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.163912318 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218416086 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.288046037 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.403185802 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.504591784 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.228747457 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.347632564 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.208378623 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.440254054 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.340168126 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.382441061 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.215359765 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.265914126 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.20058181 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.217067824 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399534054 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.341546388 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.221678547 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.224977913 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.822846048 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.04792438 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.204992946 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.211319521 seconds)
  done (took 149.671950462 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190173405 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190191725 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190454584 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.224074533 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189121322 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761584289 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763061771 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.729424391 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.293369748 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.56235376 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.47201743 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.191705315 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286516981 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.204338704 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.192543592 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206878491 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235301074 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196810402 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191513843 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778240387 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207237542 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.177750918 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.369630899 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.208030835 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224652162 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.581511953 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192074736 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224405272 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.524328105 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240960047 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191949841 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.574085949 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.375300311 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306983058 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194325333 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224676206 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.192337131 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.473790593 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191659665 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.192596046 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194570737 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.850205068 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19173513 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.765423547 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193399509 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.16070876 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.194569664 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193718315 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.076098258 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.854732123 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208700378 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192890159 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.194852763 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.193907627 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193631432 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226887865 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.920920705 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.286586416 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.211273259 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.196296388 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225821365 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.193961803 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.722927441 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19629577 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.995925522 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.268985611 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.302403583 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782772271 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1971115 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194881131 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293208818 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316028191 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.195273353 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193389179 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194255339 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195338071 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305365863 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195400662 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.630976239 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.372726054 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.211924787 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.602480557 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29258666 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194940356 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194839171 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.641057548 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199151042 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194837066 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.998180996 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293472657 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.194505839 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194646913 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195377601 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.634099421 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.76907999 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487947872 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195293524 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194868914 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.85724773 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.199464443 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19536426 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.652887242 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.766527116 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861371966 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.197365273 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308826584 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.374521619 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21422934 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195915209 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.619588668 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195792067 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25514525 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.196195588 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594374994 seconds)
  done (took 366.892170453 seconds)
done (took 708.189733451 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.801949477 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.789819731 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.899363099 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.784451706 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.749387518 seconds)
  done (took 10.151834288 seconds)
done (took 11.2750273 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385650364 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384502973 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257482812 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.386500565 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22923763 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404375456 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364819969 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217783656 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299781653 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280492712 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301713266 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250925418 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230507694 seconds)
  done (took 18.120093368 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513822766 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.503669403 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261690439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505746366 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237190472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54000133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404249356 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41062232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411967132 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231147254 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212430125 seconds)
  done (took 16.361577374 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.532998112 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525320982 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265448083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522749662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240466603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526257788 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407258149 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415145356 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415336986 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232508135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212152612 seconds)
  done (took 16.424115989 seconds)
done (took 52.029287507 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208105072 seconds)
  done (took 2.336940874 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244739105 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411053733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.224934314 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215074775 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209135358 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.209176846 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215420489 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.209231853 seconds)
  done (took 11.068904122 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.208436268 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207299916 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205439351 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204826448 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20942713 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208352772 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206430967 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.205541141 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206082804 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208176532 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.20877622 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204600091 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208019342 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208467828 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205525559 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.2066368 seconds)
  done (took 20.44239739 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207295866 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20698847 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206150114 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.206460944 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206904404 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206386245 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.206727795 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206192154 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206514975 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.2069305 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.205641081 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207185281 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.20772989 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20612569 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.207035504 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.207810015 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207424869 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.207192527 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.210772195 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207087255 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207810293 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208573848 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208388425 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207691248 seconds)
  done (took 30.105439302 seconds)
done (took 65.079119933 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.852501089 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.854969041 seconds)
  done (took 6.839093416 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210202353 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210388412 seconds)
  done (took 3.553575139 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209767768 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.20988228 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209416471 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210084088 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210426251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.209884058 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209913468 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209977926 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210285274 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210589453 seconds)
  done (took 13.232024054 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210904332 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210810606 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207889741 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211218795 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.210777329 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.208477067 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211541035 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210586151 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21090519 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209142584 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211285166 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209550811 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212174608 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208949955 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210997644 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209423272 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209598884 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209841326 seconds)
  done (took 22.916689596 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211805605 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21329065 seconds)
  done (took 3.560057819 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208909918 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209497584 seconds)
    (3/7) benchmarking "month"...
    done (took 1.210305423 seconds)
    (4/7) benchmarking "year"...
    done (took 1.209922073 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209831656 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.209175574 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209705597 seconds)
  done (took 9.601283044 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213970448 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384733977 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462870783 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.790686098 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21451089 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.217222182 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.053879685 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216307631 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218460686 seconds)
  done (took 13.907158063 seconds)
done (took 74.737851565 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.235933809 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.224909309 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.461489165 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219999819 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.240565722 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.551850945 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.265949287 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.334074683 seconds)
done (took 37.666632208 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.211522081 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.191207919 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.963768436 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.186888095 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.250527406 seconds)
  done (took 18.727154981 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.274070619 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546965577 seconds)
  done (took 4.957582799 seconds)
done (took 31.028018663 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215064349 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215043131 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214945019 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21481008 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.212523558 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214594218 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.211841457 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211079181 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212588594 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215021501 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21455101 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.213972953 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.215364384 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214786811 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21198619 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211581201 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214514436 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212157915 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213124028 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212205963 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215723175 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212293555 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21246612 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212405508 seconds)
  done (took 30.260736127 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.217339117 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214299461 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216450495 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21603335 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.213556573 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.216604691 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.216591616 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212711695 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217034262 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215675886 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213588626 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.214227275 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216459062 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21401134 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216068479 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.214077854 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216538453 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214297999 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217150044 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213815331 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216281444 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21433863 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.21379902 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217181813 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214651757 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214094762 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217488721 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214025229 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216257505 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21483656 seconds)
  done (took 37.59727179 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.222852364 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.224297367 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217365715 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219016333 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217941479 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217608122 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.217225058 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217884233 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216860599 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217713896 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.218080899 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217477035 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.218792559 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21828007 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217598445 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.218017711 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217270579 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217805408 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217369832 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.218027427 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218250482 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217567217 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.218438108 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.218590789 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218354507 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219692078 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219069354 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21818293 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219437072 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219152809 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219798673 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218537097 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218869463 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.219821293 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219413193 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.219127424 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224583919 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22593648 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.220260492 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.220147987 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.219702915 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220204309 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.219623805 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.219511314 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.220029239 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.218945752 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219944457 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.220056451 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.219388296 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221049285 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220462976 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220330381 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.220499579 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.220786658 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221083224 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22054075 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22019212 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220833058 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220377834 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220515252 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219946048 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220459971 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220771309 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.22200816 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221267395 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221270797 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221041647 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.222062786 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.221559818 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22209203 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.222210681 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22123518 seconds)
  done (took 88.962210822 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.222392042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219625205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219995577 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218389152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219175063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221983999 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219617316 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221433966 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220422396 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.221903499 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222217546 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22086465 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21962469 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223524265 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222692048 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220449934 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22241268 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220575171 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222711676 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.224273352 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222125742 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.220536441 seconds)
  done (took 28.010342883 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2231773 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225319742 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.220942672 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224387903 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222497236 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223736159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223487081 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226600108 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224698273 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222205383 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222296502 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224424855 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221273454 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221005977 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221755381 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223612116 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225078936 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223776946 seconds)
  done (took 23.165130023 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.222785695 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.222640625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.225464841 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221389572 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.222875076 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224446216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222974045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226129171 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.225144303 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.222144416 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.224582865 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225413413 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22600948 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222962152 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225458802 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222198622 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.22580303 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222290488 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225317054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223272659 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223774028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22582971 seconds)
  done (took 28.075603414 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227134221 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22576219 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222839361 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223955545 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222389588 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226005947 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22609107 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223235591 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.226342756 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225819268 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224093863 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226033008 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.224939638 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22469859 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.223662879 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223553351 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227303064 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224962781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226837513 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224440189 seconds)
  done (took 25.647167712 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227927226 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228030862 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228047449 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228966222 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229344771 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.228025689 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228570802 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.227916328 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229406802 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.229232902 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.228926946 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229715209 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228445612 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.229230972 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228749042 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229119931 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228848977 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229533021 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229291998 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229598444 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.230336439 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230367267 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229807002 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.230529121 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230029076 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229647331 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230630462 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22970039 seconds)
  done (took 35.566175432 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229642653 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230278559 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.227628004 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.227992991 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.225987254 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.227037515 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227133867 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.227625206 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2295615 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22765897 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229827156 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229534699 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229539803 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229331404 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229198196 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231313895 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230433095 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.228261659 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227114617 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227519354 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.230395636 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230088056 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.231694723 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228728948 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227996897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230447347 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228462785 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228333846 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23020278 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22765881 seconds)
  done (took 38.017415932 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249616508 seconds)
    (2/2) benchmarking "in"...
    done (took 1.248843938 seconds)
  done (took 3.649398836 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.228396074 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233674104 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.231619259 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228069047 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229429542 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231265892 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231930976 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229269393 seconds)
  done (took 10.99602744 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231729641 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.231213833 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.231668868 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.232244141 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.231769142 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.231646245 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238649746 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252651322 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233273932 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233158359 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238606883 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.240342061 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.234878518 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232322425 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232097993 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234469991 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232023004 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.232662027 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.23378857 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233859413 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233622503 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235828947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235278611 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.230466479 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.234638163 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242923774 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256730963 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233923408 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233995455 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.237087604 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.233784311 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.2316371 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.234906045 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234693989 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235120058 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.234647278 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242701514 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253622174 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239834054 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254468689 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236422671 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233259553 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23437974 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235493918 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236721607 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.235206094 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235097501 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232621043 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235672201 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.238884712 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.241762061 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235256693 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233584858 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239016556 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236295725 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241758602 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.25540179 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239018942 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.244380466 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245267191 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268587141 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260787358 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23702739 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.235542431 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245657339 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.26004154 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242713411 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253014203 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.233570219 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.236878964 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.243001468 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269294458 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262690027 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237226683 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237388822 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.235856729 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237225452 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23736316 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243904641 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259529793 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.236667445 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238377998 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247125504 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261688489 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236673792 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.237692685 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237838075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238512 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239299609 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247552232 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.256619184 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238697778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.237104662 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238104202 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239765912 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239891101 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238872018 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238701852 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236151334 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239036229 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239845605 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242095544 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.246945711 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238935999 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238961228 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245279079 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260111335 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238412038 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245155994 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239844993 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240061923 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242019882 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245539161 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.236818621 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242546245 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248315393 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2396575 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.239970266 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.239894184 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.24129096 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249269845 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266756779 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.23985196 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.240025533 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245119948 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252519739 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239932369 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243289433 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241457406 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237661763 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.238354971 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.241728718 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248435083 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240908462 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241635628 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242258071 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238335235 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241409512 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.240169668 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.242044682 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.242134661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241943139 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242007697 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.242165951 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241173568 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243858012 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246669703 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.26105151 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.242902682 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.242595702 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238854815 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242281826 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242224477 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24283345 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.241610483 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24283577 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2415386 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242467177 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242747436 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243490502 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242709045 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24349091 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246826046 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243552103 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245911934 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242959575 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.240881529 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.243642189 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.241734194 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.241660113 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.242833572 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241677593 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.245560201 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.25112878 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243733173 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.242709313 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.245480596 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243429273 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243693617 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244113782 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246536049 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251320389 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.243797375 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.250699863 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.264374995 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244701442 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245135302 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245450723 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.242834695 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24531771 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247695914 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251734416 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256183072 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27062788 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.245333395 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.249538725 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245871712 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.2493239 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248108207 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244431052 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.24539659 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244741363 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244124616 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245499422 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246290885 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.24582613 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243872823 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246029795 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.246624722 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245608748 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246104221 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.245790778 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247007532 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.243647296 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246444183 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24716475 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.246263356 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.244111518 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.245987898 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245076663 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245951036 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247693165 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251566075 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243020258 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247464133 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247725387 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.247425701 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246363849 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.246582348 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248712317 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24518968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253956793 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268105764 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247354478 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252632998 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266903568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.246072427 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249809146 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.248197108 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246018138 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249938006 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256206045 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.248494757 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247380839 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.247987189 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247517465 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249555605 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.25274185 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265875861 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248120457 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.2484317 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.248585222 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245370631 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.248901721 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249478613 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.249061687 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249912203 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248945452 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250282743 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249398249 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.248116883 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.248979739 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250534827 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252722284 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257587343 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.253610225 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248956912 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251257323 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.250094181 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.25514444 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.249556089 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.249671779 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.250244013 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262699566 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.275955739 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256529941 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.271079432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250610752 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255191317 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.270829122 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254888225 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251546551 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250579652 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250653649 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250200113 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249034428 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25089496 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.251507189 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25258339 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.252023539 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255866452 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252043542 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.250522984 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252643443 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.251409646 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252708139 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251280541 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.251971239 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253099902 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253318957 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.251104114 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25244771 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258591984 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271826367 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.251872335 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.251698637 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.250721349 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251389659 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254074468 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252932439 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.256202469 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260040695 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255747527 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261981748 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253739004 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261348251 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.25301347 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.256064895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.26036953 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250198362 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.251413693 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253343073 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.252421019 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259582368 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273365131 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254236028 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258954633 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252444625 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.253871022 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.252849453 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253390949 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254256218 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254592016 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260535078 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.273558869 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258720562 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254591009 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.251225114 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25420972 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.253680077 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.253324506 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256460455 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.254820756 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.254901391 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.253859521 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254836017 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.254524696 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255645554 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255773819 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252419456 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254514216 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261660293 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276917457 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260195256 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256172874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261428828 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276389266 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262472651 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276366925 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257253871 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25618616 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.25723896 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.257679614 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.25540133 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257619737 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256611795 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.256948362 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.260750778 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256007952 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.25698861 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.256488307 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.257280507 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.255689254 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266223235 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280892432 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.257873219 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260912632 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253429739 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.258700206 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261211202 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257104208 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.255595744 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261170695 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267833895 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265361163 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256612566 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257469068 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257241312 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258615623 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.257214403 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257894523 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258236657 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.257849408 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258578593 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258920325 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261463795 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257600029 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.257936913 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258635064 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.259460837 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.268048496 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.279268941 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258747001 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258308972 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259932528 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.258724752 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258580867 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.25843554 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259887278 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259126409 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.260643437 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267271866 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265792644 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261589151 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259031095 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259806919 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.258556278 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259971209 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259505356 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.259691072 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260525114 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260733878 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259306183 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260495876 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259124089 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260311319 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259895086 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260217703 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263064695 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267907734 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260039808 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257484089 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.259361051 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259800336 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.259527005 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260349932 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.26715036 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284330508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.271763815 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269628079 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.265891116 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.261542912 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263961973 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269453923 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.259741736 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262669523 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.260930132 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.261938541 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.262118958 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.265260849 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262577827 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.26829597 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283261869 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.261922711 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270390452 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.281984629 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262729416 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.263379203 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266058284 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.262148543 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.260183248 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.262407489 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.262958285 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268689564 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.282949137 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262607752 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263898063 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.262837986 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264068244 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267669732 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262860196 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263996364 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.26084793 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.264016821 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262259288 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262241587 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.261890824 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.261717687 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.262837944 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.265897183 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270509169 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26165627 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264951385 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.263975712 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.264696731 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264318088 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264136959 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.260850322 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.2619451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.263082043 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264116243 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264506383 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.265895153 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.263922127 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266248758 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266022805 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264583037 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267496658 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.27517344 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.271934544 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.262825176 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.264078828 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.265333813 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267430799 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264575707 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.265044949 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264586474 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26630205 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.265614576 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265940448 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.265493084 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.268881379 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282076876 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.286326783 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266529608 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266239531 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268105238 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.266244324 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.263893336 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.267030545 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266929542 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270068322 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274577981 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267333078 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271895121 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286522502 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.267690894 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269882404 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.270623863 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.27407789 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.269481976 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267818714 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.268007469 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272587048 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.282446482 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266740796 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277490865 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297691998 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287697928 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.268162929 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266831723 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266614436 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.267403844 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.269037353 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.268204925 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26728836 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268021705 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.267491525 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.267793261 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273539891 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268896239 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270343392 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.268231472 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.266914029 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268055474 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.266480042 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268800508 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268606325 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269302642 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.268358291 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268745266 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.268191899 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281449757 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.296582155 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269282755 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.269707361 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265940609 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272044558 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.272384115 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279796785 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.276964457 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269358143 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.268170157 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.271292726 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268687738 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.269202283 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268978322 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.268871015 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26905495 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268296545 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28212699 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29788406 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274973993 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.269610553 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271039434 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.27023109 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27088504 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271141468 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271021683 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271245904 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.273708235 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275339131 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.27250184 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.271147421 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.273451623 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.279835046 seconds)
  done (took 748.91657018 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269986612 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267968102 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268986049 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268656527 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268932909 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268571699 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268719002 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269069558 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268429089 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269226391 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269059133 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26858831 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269303804 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270482659 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269563991 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269349975 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26871298 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269593999 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270400729 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26952617 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269884241 seconds)
  done (took 27.841548954 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.273689814 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.269655363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270515695 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273027579 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269797523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272753663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.269808026 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272979348 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272962888 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270521215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273783289 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272995161 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271035548 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.271186907 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270402418 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273255933 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273048019 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271742371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274706783 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271759114 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273807511 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.271973321 seconds)
  done (took 29.175216246 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.274134974 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.273001749 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.273376875 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272059976 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.273592059 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.271367805 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27510389 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.274444213 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274495028 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.274358661 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.273391765 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.275963642 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282285783 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.280349518 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.276905046 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.274810221 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.420181117 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.275588498 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276434259 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274467973 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.272772551 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280854115 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.2949481 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.273403642 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.273449531 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275813516 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.276511735 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.27625713 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275982386 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.276660759 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27995895 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.276294907 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.274516185 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.277948806 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.275425971 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.277700701 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.281401498 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276764028 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.273570769 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.276849108 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.286182005 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299730228 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.276894398 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.282167729 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.29899848 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.278393218 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281107577 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285395613 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.275373688 seconds)
  done (took 63.949025801 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276635424 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.279332035 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27479172 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277538586 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.277256543 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.277366408 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.277307918 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277160164 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.273911246 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274518829 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276675922 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.274076842 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.274281796 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.278026231 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277715446 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275559964 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276005667 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2748153 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.27481432 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275370414 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.276285973 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.277100488 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.278382139 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.275978287 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278620936 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275478509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276511972 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.278580079 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.277049613 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.275659723 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.279320652 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280266536 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.27941956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.275886076 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.276783292 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.279438871 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.279287924 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.276359932 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279747643 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.277269593 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279364374 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279645959 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278863364 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.279575134 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27723393 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.277334599 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276862863 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.277654427 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.277666871 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.279867034 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.280164742 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.277906069 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.279471817 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.278034615 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280732403 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.280977838 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.279261995 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.279274686 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281352219 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.278484856 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.278445785 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280903036 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.279934061 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.281817634 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.28138419 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277780929 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278513709 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.280641374 seconds)
  done (took 88.09191294 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281048083 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.280189844 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281864991 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280560167 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281428859 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.281196353 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281264682 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.281650567 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281950937 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28190232 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280933565 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281754791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.280944672 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281671288 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28141048 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281346443 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281275336 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281508386 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281729452 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281708591 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281313239 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281051654 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28141906 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282051062 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283080508 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282487668 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281540292 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282270203 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282575828 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.282701541 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282619644 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.282734407 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283037509 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283714833 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.283983844 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.281944905 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283193573 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282936916 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282827092 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.282566352 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28362957 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283263305 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282757419 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.283165119 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282854617 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283019328 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283879162 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.283966825 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282620362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284048401 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283347012 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28300988 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283935709 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282936584 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284292897 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.284089673 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284014859 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284349512 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284189637 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284309543 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283984421 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.28467814 seconds)
  done (took 80.717672028 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285134398 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285247607 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28263084 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283256328 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285844247 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282313684 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285365106 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28567519 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286771196 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.285469387 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285656134 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284416584 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283194336 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286774104 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283570548 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283574332 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283356694 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283469225 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286220433 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283621174 seconds)
  done (took 26.893342295 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.283987953 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286552977 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.283606261 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285586756 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.285471128 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284810732 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.2869051 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287340562 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283903807 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28659 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286504713 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287209664 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284022432 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28534414 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288744709 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283757474 seconds)
  done (took 21.773063703 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.28523421 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.287504313 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287345204 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.286748546 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.284127708 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286076702 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287915389 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285531623 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285995293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.287944778 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287937415 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288308159 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287089173 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.288291702 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.285007885 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.288690761 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285636924 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286385388 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.28780558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288109951 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285214025 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.286866658 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.289036036 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.288075328 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.286513878 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287039014 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.285321276 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.287081344 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.286191289 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.289287782 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286211731 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287187595 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.285974823 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.28590688 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.28889869 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.286436102 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.28972103 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289106751 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.288655679 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.2891614 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288888895 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.287420771 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.290011635 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.289430254 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287460238 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29028876 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.28853232 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.288447641 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.288511955 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.288050195 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.290982469 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.290199185 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.289657748 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.292160067 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.291176219 seconds)
  done (took 72.032837906 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291959503 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291160375 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.288580612 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291477843 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291371169 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288704618 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.290756559 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29062378 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289848189 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291027462 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290410766 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293519462 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289717088 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292103817 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290241329 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291602725 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289434634 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289048834 seconds)
  done (took 24.43770837 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28920147 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289502344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.292826188 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289800952 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288712083 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292303772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289149637 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291733448 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292632208 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291832888 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290053362 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.29215997 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291631493 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.292511825 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289975706 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288541615 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.293233776 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292991625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291203795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29042112 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293596403 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292602176 seconds)
  done (took 29.61501209 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.291671549 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.290799839 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.29179397 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.309294907 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31239479 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.316079901 seconds)
  done (took 9.019773831 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301028758 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293323952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290275818 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295044344 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292904261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291128192 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291291051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292242765 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294158118 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291435049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291483852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294141668 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294484767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292702531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294648524 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29495417 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291070331 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291953193 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294191688 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295287023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292108716 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295811889 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29193224 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293352774 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294258557 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293830842 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296157175 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294668217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293264063 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294107175 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296141352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29332424 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297128792 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293628268 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296904028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29573728 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294423843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295515891 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295913729 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293243571 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296246882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297023385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296942547 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29342976 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297281241 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294048567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292774606 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2938313 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294585141 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298532145 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298267951 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29408024 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297054385 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296141477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296821296 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298258626 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294934372 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29513844 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298814296 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295101942 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294821237 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298115105 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29470209 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29619063 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298340343 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295459147 seconds)
  done (took 86.689885869 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295474343 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295937347 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295227854 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2968933 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29600293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296051104 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296761578 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29549689 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296191481 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297117315 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298617191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295928776 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296365441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296406244 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296020629 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297161228 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296574198 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29640526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297286184 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298932011 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296948087 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296760754 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296056603 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296619024 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297413891 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299140501 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296425861 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297682349 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29714907 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297295551 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298559972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29709292 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297620191 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298194229 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297406208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29921395 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298241359 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298575191 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29810684 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301551484 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298404723 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301171185 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298781964 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299188701 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298690474 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297984629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29910412 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298383682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298174517 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298985976 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300025374 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299282877 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29977399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299475525 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298947768 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299221003 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299024529 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298472839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29893031 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301553909 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299079925 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299396269 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303385955 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299228129 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298608458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299141435 seconds)
  done (took 86.884303005 seconds)
done (took 1747.118547384 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464899511 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.417945841 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.300092133 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.305712229 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299562908 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.324007121 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.308475027 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300715299 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299414054 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299760259 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.300249396 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506476512 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.295499096 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.300760313 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300232371 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394141571 seconds)
  done (took 42.636423138 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.328602844 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.306681629 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426529824 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325432418 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329716708 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.505972232 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360615862 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306380429 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.491106201 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351726341 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.990823516 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.331473089 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306606991 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.503903572 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324634349 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.505769808 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.568406473 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.996001829 seconds)
  done (took 30.478431705 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.798229306 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.321411322 seconds)
  done (took 9.338503228 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.325624699 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305847735 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.306501301 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304972229 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.297421736 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.298451524 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.304722187 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297527492 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.335371856 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442121151 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307434416 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313549887 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327008848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306317192 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.304186735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343688228 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.477708818 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304823889 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.303553864 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.312532384 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305919019 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.394838559 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350411722 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305518982 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.443392045 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.340713544 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.309902375 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.313947225 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.461093548 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306963712 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306747764 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.307929731 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.307938591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.925858015 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.813898737 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.319744776 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349611906 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317027384 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.305811515 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459782788 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.308979756 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.317476427 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.299940193 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.805768234 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.445287111 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433468943 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.648058087 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329468739 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309704223 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372316915 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308633143 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30930378 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.338578836 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.091745389 seconds)
  done (took 111.019515551 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.331900163 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.692262565 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470915449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323421482 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.023846789 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015060843 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.319475335 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.618106079 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.346477272 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30249383 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.637429148 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842967917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32850715 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.346295439 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.785330871 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.3112896 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303980858 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.162524713 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321215955 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.303228717 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81378985 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302677677 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302527605 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.606384733 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343837996 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.787113883 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.897696008 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.814106324 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325112425 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302365515 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.802754864 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.326927128 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.353703499 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.306470971 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.579340165 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.690355453 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.68133508 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.327414154 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318742549 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309132934 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317111074 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782442324 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.693872356 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.323159323 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.322435979 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80465305 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.32456112 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.306230678 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.311789164 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516056889 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.184435795 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306619883 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.88199301 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309857924 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.621719017 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.379949651 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.333756112 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81566128 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324605345 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.435403749 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375501797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30632356 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30909981 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306383672 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305504516 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.680564789 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.660232756 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307988737 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.678382141 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817317642 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.329538186 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871691499 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.207571837 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.3084308 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.370770732 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.31819305 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.899126252 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.829143908 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.34339818 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306566723 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.667316806 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.32502379 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.641524416 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.32577253 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307568945 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825276307 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.307610559 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.325004104 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.30707903 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.340641484 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.060176684 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306500282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.609586655 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.37210038 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307616491 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.308292764 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.327442081 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315815802 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.307023246 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.309237211 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870480243 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.334664038 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.292101272 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327049761 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307827939 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.308598993 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309896296 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310042515 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537344075 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.754070917 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.332818386 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309627542 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.308520982 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.328797593 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.564360173 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.309123282 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.64318085 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329116058 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323208671 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309561813 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.014407872 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346352957 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309536553 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.313343891 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.240781473 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.515976368 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.3298174 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.310402472 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309915366 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328291416 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.637641595 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329777313 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.337792892 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.310058493 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051350557 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338638327 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.339478457 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.846267783 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.313094643 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309960552 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.329756454 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.3117678 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603528635 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.589031242 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.550561898 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311592717 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.329271706 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.033124213 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.360465194 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459388514 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331116875 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.31564158 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51061472 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.528253058 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.312182211 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.913423725 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31195863 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535810882 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311468119 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617962938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84311768 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.336675173 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.31242476 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.060054185 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.027682165 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.996854566 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.315058632 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.648151624 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.329421332 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.795062072 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.31220587 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.312496619 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.875650434 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314271341 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317709799 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.313163277 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.312941051 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372215319 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488994651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.643981706 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314720932 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791497885 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.405196312 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312337368 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.318900142 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312460653 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.664206643 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.320117855 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317676424 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.324849986 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.315999387 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318237755 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.813699003 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.265312629 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.314994965 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46885663 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991020037 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.335296284 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312832311 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.905416976 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.573569206 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.886449706 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.376460471 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.650499867 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.337509712 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.354568533 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000128993 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.34760938 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.815035418 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33399091 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314712196 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957695542 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.333716697 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.430007274 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315471863 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316202703 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891528346 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.335763067 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.31671901 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.651385059 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.336048517 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594263851 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.316664087 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.344877361 seconds)
  done (took 1108.327733983 seconds)
done (took 1303.01429498 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.316069678 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.321455559 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299947972 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.321253496 seconds)
  done (took 26.494737685 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327310072 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.323442437 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324138617 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.321916469 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.326114457 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.322411346 seconds)
  done (took 9.185699076 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.698377184 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323650507 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.322115888 seconds)
  done (took 19.582353644 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.544464446 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.722107916 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.700024449 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.689224778 seconds)
  done (took 10.895598728 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.324049438 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.324129835 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.324043458 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.325306395 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.326810259 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.328210854 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.32523361 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32480703 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327712944 seconds)
  done (took 13.166186642 seconds)
done (took 80.557939229 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.342876936 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.333786742 seconds)
    (3/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.312398047 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.318929417 seconds)
    (5/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.297776397 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.304327437 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.586353036 seconds)
    (8/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.398874318 seconds)
    (9/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.143771505 seconds)
    (10/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.596204988 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.363507085 seconds)
    (12/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.987473664 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.343245911 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.998021679 seconds)
    (15/286) benchmarking ("sort", BigInt, true)...
    done (took 6.318208877 seconds)
    (16/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.218114357 seconds)
    (17/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.366416438 seconds)
    (18/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.300599829 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.516835826 seconds)
    (20/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.403818127 seconds)
    (21/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.403927216 seconds)
    (22/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.840641412 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.944613721 seconds)
    (24/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367588492 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.904575208 seconds)
    (26/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.248061981 seconds)
    (27/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.335650548 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.332715527 seconds)
    (29/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.304906056 seconds)
    (30/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.298650577 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.309549825 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.425199389 seconds)
    (33/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.328938717 seconds)
    (34/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.417058921 seconds)
    (35/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.43864795 seconds)
    (36/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.298941097 seconds)
    (37/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.303758765 seconds)
    (38/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.812283659 seconds)
    (39/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.382405741 seconds)
    (40/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.30410743 seconds)
    (41/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.453543737 seconds)
    (42/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.301311766 seconds)
    (43/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.188927586 seconds)
    (44/286) benchmarking ("sort", Int8, true)...
    done (took 6.31896454 seconds)
    (45/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.365325521 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.738330293 seconds)
    (47/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.348615829 seconds)
    (48/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.36566305 seconds)
    (49/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.323421516 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.452379055 seconds)
    (51/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.732609125 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.299219005 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.319372583 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.59964404 seconds)
    (55/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.508223548 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.318154222 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.058536678 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398002623 seconds)
    (59/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.29960865 seconds)
    (60/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.95050129 seconds)
    (61/286) benchmarking ("sort", Float64, true)...
    done (took 6.322174461 seconds)
    (62/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.047438122 seconds)
    (63/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.389881808 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.310451221 seconds)
    (65/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.408825888 seconds)
    (66/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.865731645 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301056783 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.90901674 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.300522463 seconds)
    (70/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.446222608 seconds)
    (71/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.328647499 seconds)
    (72/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.433937594 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.123793633 seconds)
    (74/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.399780168 seconds)
    (75/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.321654623 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 5.583047597 seconds)
    (77/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.376128721 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.432166137 seconds)
    (79/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424854684 seconds)
    (80/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.510436561 seconds)
    (81/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.44251623 seconds)
    (82/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.302251072 seconds)
    (83/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.367576042 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.413453363 seconds)
    (85/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.406309688 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.302112009 seconds)
    (87/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.224097232 seconds)
    (88/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.303187416 seconds)
    (89/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.32166724 seconds)
    (90/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.466091451 seconds)
    (91/286) benchmarking ("sort", Float64, false)...
    done (took 5.701594251 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.127212873 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.34911551 seconds)
    (94/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.339480893 seconds)
    (95/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.335299123 seconds)
    (96/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.702150951 seconds)
    (97/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.429387844 seconds)
    (98/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.316029678 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.69343797 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.557581839 seconds)
    (101/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.99626614 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.318529976 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.421889658 seconds)
    (104/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.340865559 seconds)
    (105/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.325922364 seconds)
    (106/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.083224567 seconds)
    (107/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.371171769 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.322598423 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.087417744 seconds)
    (110/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.333843698 seconds)
    (111/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.321364638 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.846790405 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.367265671 seconds)
    (114/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.607396994 seconds)
    (115/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.017452661 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.603748253 seconds)
    (117/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.413288632 seconds)
    (118/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.747561432 seconds)
    (119/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.142437647 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.176411123 seconds)
    (121/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.776755785 seconds)
    (122/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.577016029 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.265787884 seconds)
    (124/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.379119953 seconds)
    (125/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.440328891 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.753990342 seconds)
    (127/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.476943476 seconds)
    (128/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.033789656 seconds)
    (129/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.325196572 seconds)
    (130/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.354872693 seconds)
    (131/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.315107743 seconds)
    (132/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.226157092 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.427532691 seconds)
    (134/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.320638469 seconds)
    (135/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.800580434 seconds)
    (136/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.343700182 seconds)
    (137/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.366826982 seconds)
    (138/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.337584385 seconds)
    (139/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.073928056 seconds)
    (140/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.171347462 seconds)
    (141/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.609209949 seconds)
    (142/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.428315296 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.163123822 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353714016 seconds)
    (145/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.36958395 seconds)
    (146/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.877587417 seconds)
    (147/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.307755404 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.350310357 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.330132006 seconds)
    (150/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.908918027 seconds)
    (151/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.327606452 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.434686171 seconds)
    (153/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.847125718 seconds)
    (154/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.337214318 seconds)
    (155/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.736069334 seconds)
    (156/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.250791003 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.325827391 seconds)
    (158/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374290517 seconds)
    (159/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.454782986 seconds)
    (160/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.438773704 seconds)
    (161/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.315847665 seconds)
    (162/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.013136758 seconds)
    (163/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.580718966 seconds)
    (164/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.307673804 seconds)
    (165/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.773920048 seconds)
    (166/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.412309378 seconds)
    (167/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.319388136 seconds)
    (168/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.215735008 seconds)
    (169/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.308311526 seconds)
    (170/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.338523112 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.324730814 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.346217294 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.390072393 seconds)
    (174/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.30926781 seconds)
    (175/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.633112412 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.788398345 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.355702972 seconds)
    (178/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.355731172 seconds)
    (179/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.328777027 seconds)
    (180/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.35956731 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.373098452 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.13003681 seconds)
    (183/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.411490147 seconds)
    (184/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.147361665 seconds)
    (185/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.753583522 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.449545805 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.405569237 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.346206923 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.161952712 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.329906644 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.374188363 seconds)
    (192/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.216371842 seconds)
    (193/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.212320332 seconds)
    (194/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.895460814 seconds)
    (195/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.394629663 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.574849012 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.958156818 seconds)
    (198/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389538724 seconds)
    (199/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355779344 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.310491036 seconds)
    (201/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.048682693 seconds)
    (202/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.206481541 seconds)
    (203/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.370093089 seconds)
    (204/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.880230914 seconds)
    (205/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.42422727 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.353722832 seconds)
    (207/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.558477648 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.335816638 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.314475151 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.373420636 seconds)
    (211/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.596356453 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.04260289 seconds)
    (213/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.623064165 seconds)
    (214/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.377506559 seconds)
    (215/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.31181473 seconds)
    (216/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.720841267 seconds)
    (217/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.855603203 seconds)
    (218/286) benchmarking ("sort", Float32, true)...
    done (took 6.330521393 seconds)
    (219/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.331860202 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.238072739 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.725985367 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.826093141 seconds)
    (223/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.77883351 seconds)
    (224/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.311358158 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.626724634 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.887503857 seconds)
    (227/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.112326149 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.312204537 seconds)
    (229/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.805571386 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.31503244 seconds)
    (231/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.381296792 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.828683707 seconds)
    (233/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.316726896 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.745326105 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.578005175 seconds)
    (236/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.433036886 seconds)
    (237/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.509372999 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.357862533 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.359798302 seconds)
    (240/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.335077929 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.740896951 seconds)
    (242/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.581929935 seconds)
    (243/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.029263557 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.961187425 seconds)
    (245/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.397316293 seconds)
    (246/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.312921734 seconds)
    (247/286) benchmarking ("sort", Int8, false)...
    done (took 4.45035465 seconds)
    (248/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.978268616 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.176790066 seconds)
    (250/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.359503962 seconds)
    (251/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.343022786 seconds)
    (252/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.549603612 seconds)
    (253/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.908236748 seconds)
    (254/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.935850489 seconds)
    (255/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.314637128 seconds)
    (256/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.416512806 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.416875912 seconds)
    (258/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.80256658 seconds)
    (259/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.361233423 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.452001505 seconds)
    (261/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.392609288 seconds)
    (262/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.431695571 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.137341787 seconds)
    (264/286) benchmarking ("sort", BigInt, false)...
    done (took 6.334285219 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.020096018 seconds)
    (266/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.21012279 seconds)
    (267/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.457707639 seconds)
    (268/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.005612063 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.77497606 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.395173474 seconds)
    (271/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.750576349 seconds)
    (272/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.880940541 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.323647331 seconds)
    (274/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.030880846 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.295195472 seconds)
    (276/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.315383628 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.469361647 seconds)
    (278/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.327658659 seconds)
    (279/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.31575861 seconds)
    (280/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.526848754 seconds)
    (281/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.842212264 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358046238 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.336564154 seconds)
    (284/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.678294397 seconds)
    (285/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.124452436 seconds)
    (286/286) benchmarking ("sort", Float32, false)...
    done (took 5.378091931 seconds)
  done (took 947.641430643 seconds)
done (took 948.876529198 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.371600868 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366726813 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.348644126 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.37097405 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.460008507 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.37105681 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.360289194 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.351309416 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.397964993 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.398989501 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348024621 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.370526678 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.349192718 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348343329 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.349015051 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363730788 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.493759608 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.3492381 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.365344425 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.360580057 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364467251 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.34766098 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.399656452 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.371627655 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.354453256 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353092876 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.351952317 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.3686742 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.461547451 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.352756368 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355794885 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.361904929 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.494790519 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.350026794 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345908742 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.368702791 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362722277 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.3615519 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.355274288 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.38264817 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.941995788 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.368751191 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.353802165 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.355201564 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35200851 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.358021138 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35230904 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.359611766 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365181567 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366892568 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.927359611 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.384247786 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353505971 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.352928964 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.364089945 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350181187 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.356068828 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369751799 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.371286308 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370120734 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.481843636 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.358459046 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.354812139 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.368975967 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361628985 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.965253454 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.367967788 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.359146878 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.941344225 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.378270966 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.965878306 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.380246783 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.354746101 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.367339593 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.384416264 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.495924148 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.348114312 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.353405153 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.362056408 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.350458502 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365390411 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367901345 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.359006619 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.355632451 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369002871 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.376398605 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.365509682 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.354083522 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364605254 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.373838036 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.361142241 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36417699 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.359123897 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.351603674 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.364723864 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360052624 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357239366 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.357931149 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.360550656 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.367216925 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.944446821 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3928927 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.3524453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.353560919 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.35611231 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.36838896 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.946254156 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.375027357 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.377883896 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.404313992 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.35858014 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.487158047 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.358627026 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372918338 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.365702625 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.359774403 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351387928 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.485574041 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.936828016 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.389373238 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.359387516 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.35389369 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374215936 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.358939894 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.354855202 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.503053368 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35948795 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371115804 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.476288033 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.368265407 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.388956118 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.353778726 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.361523204 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.379418391 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374760738 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388020897 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.361517266 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374220644 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.372856243 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354702207 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.367419592 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.369568824 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360702625 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.364753056 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.353649066 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.380953548 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372043271 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372983318 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380599442 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.479877316 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.356286038 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.489514952 seconds)
done (took 230.722403787 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.414849991 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.344929889 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.436571475 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.35344376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.454426135 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455058111 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350817546 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.352004846 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.351190563 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.733469987 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.351513021 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.3511451 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.345892415 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352202799 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436207011 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.354601621 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.351576373 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.69662695 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.355375086 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.425778963 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.347137392 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.352394178 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354267722 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.736443492 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.353569483 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.349062668 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424661012 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.355008687 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.702201513 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.350329878 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.350088472 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.702193547 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44480722 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.372454823 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.364329868 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36215358 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.456739802 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.376290459 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.4365683 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.436247868 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438479746 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.394388475 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.34732396 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.355793323 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.357679733 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.357265998 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.35392917 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.383282694 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353484752 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35395665 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.698861989 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365696725 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.364742079 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.3556682 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.354593258 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376988582 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.355694494 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.357287624 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447165401 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358484917 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418857181 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.740006298 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73709953 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.357186364 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.357880819 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356030126 seconds)
  done (took 149.858481825 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.422859079 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.429926226 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.475122466 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.375758355 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.405579127 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.481205145 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.375857368 seconds)
  done (took 11.233919245 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.363807627 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358247028 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.412768595 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.411442785 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.357569566 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.559150539 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358921657 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368771357 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.356388411 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411267598 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.35876339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359240561 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.365464258 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.351303516 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410581091 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369784123 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47257687 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.358585832 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359545962 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.514370211 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356684462 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.365868813 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410872164 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.370432325 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.360805971 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365446524 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.198318269 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360084578 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357426428 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.360677767 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358006049 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436493238 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.360465626 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.360394816 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35711641 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496350236 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.362084306 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35622137 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.360595487 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.358756869 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.360589178 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.3610587 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361194225 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.358079808 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.36163417 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.382777609 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.358913142 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.360418647 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.360433606 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.361596817 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.410235198 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360927457 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.358258354 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.358564854 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.416729927 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367490679 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.360514465 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.357337745 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.3625843 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359064188 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518475929 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413529867 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361083073 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414706494 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362303377 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362152571 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.363285027 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.36250765 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414419103 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360754353 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.414921204 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.359297536 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.550670263 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384616998 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364670107 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.36520482 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364273676 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362995667 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360146313 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367680275 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.359350434 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362841907 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.367958229 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359914303 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360250148 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.544876299 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471671721 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.360118527 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375816498 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.369568545 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.360681603 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416281874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363354351 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361564026 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425802562 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47742887 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416707693 seconds)
  done (took 156.383907811 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368997424 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.371740987 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.364876828 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.379331072 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364578811 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364201083 seconds)
  done (took 9.489391532 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366912464 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366270222 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.365088004 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.365548808 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.364803917 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.366146419 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.365553227 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365983689 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.369060634 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.36400522 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.366212814 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.366364327 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.366178515 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.366407334 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.366256042 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.365175881 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.366155054 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362701435 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.366117893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365018772 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.468965623 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.365730274 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365390806 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366166992 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.370541874 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.365933245 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373796603 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.366464893 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366227886 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374811958 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.387882764 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365502684 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.367562511 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373937688 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.371683564 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.368464082 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37192337 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367231861 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364036067 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.367051686 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.367838461 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367476146 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.366770124 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366316918 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369080788 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372143794 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.373644195 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375270278 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367105322 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.36793448 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.368325292 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367082243 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367882509 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.369319184 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370046501 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391745689 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.373980707 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.369759273 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367915993 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.37002528 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.370826774 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.370543669 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370956957 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.374597493 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.366832234 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.370972718 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370541542 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375069523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370293609 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.368235779 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.371383865 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.368430465 seconds)
  done (took 100.941918247 seconds)
done (took 429.16878549 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.426891152 seconds)
  done (took 7.708086564 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.588253206 seconds)
  done (took 7.869629738 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.994448056 seconds)
  done (took 24.280957973 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.409048672 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 8.246380673 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.383444156 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.38192358 seconds)
  done (took 28.70211559 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.362250966 seconds)
  done (took 7.643367171 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.366358228 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.362252948 seconds)
  done (took 14.0114415 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.511696568 seconds)
  done (took 7.792603084 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.433767138 seconds)
  done (took 7.722550419 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.361685121 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.3885942 seconds)
  done (took 14.044941532 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.3429083 seconds)
  done (took 7.623975791 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.420449437 seconds)
  done (took 12.702851724 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.369624606 seconds)
  done (took 7.652982048 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.43037724 seconds)
  done (took 7.711341787 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.209966185 seconds)
  done (took 10.490222777 seconds)
done (took 167.235148671 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.362517712 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.37144661 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.37198935 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.370958541 seconds)
  done (took 26.759101097 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.404905973 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.40608564 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.407524878 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.416761001 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.408345983 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.40492888 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.397220799 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398633727 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.416436268 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.409224796 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.40807858 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409033991 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.407353445 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.398153344 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.408884781 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.407502157 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.417959675 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.410502765 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.397553093 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409489878 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373720993 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417359247 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409455304 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373078294 seconds)
  done (took 35.002418014 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.898355092 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.442701202 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526652074 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426099325 seconds)
  done (took 7.576719108 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425492309 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.426800979 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.442465547 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477947709 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.50601374 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.436428368 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.400462435 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.39570864 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380124833 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427233418 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.502902438 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443466015 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.520939906 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.374136343 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.570071872 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.373183849 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.375319076 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.426353159 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47744062 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.495339981 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.374020334 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.426283194 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.432649685 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44293322 seconds)
  done (took 35.838234847 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.373484826 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.393453111 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.3741783 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373202598 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.383632899 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.374082249 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.376144609 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375848621 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.374003201 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.382055824 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.373880884 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.386996233 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.374856115 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374846225 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.382273862 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.375476927 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.380456503 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.374928277 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.374674119 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381894452 seconds)
  done (took 28.845602944 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.367793959 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.221669096 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.720407144 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630012258 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.369772442 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.3688332 seconds)
  done (took 27.964997547 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.455286783 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.620724161 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376070344 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.782404701 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.876832318 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.395405983 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.377415459 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.644329027 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.028052267 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.017839654 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.447719564 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451512333 seconds)
  done (took 20.760148414 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.381564451 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.369339547 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.376544419 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.386177729 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.439988346 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.400112788 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383627098 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.370478916 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.445854298 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.461650803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.399662892 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.440102776 seconds)
  done (took 38.143501277 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458843313 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420080254 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.435184664 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449055323 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104618546 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584809862 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.433197472 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.843397335 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.378073895 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648476309 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38305733 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462403993 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631737938 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386552108 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379880299 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.446699468 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622432516 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923344598 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377409963 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.86456278 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407008279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384558622 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.883670546 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.412386774 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586557405 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.521253374 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635968547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.153471639 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722109452 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387772146 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387813052 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376569075 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650205224 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077868544 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494340097 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386366799 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376802024 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.926081557 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.355694799 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.866930217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39666104 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378559931 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38787433 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376043436 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311004092 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382177743 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828350204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381921935 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.089176904 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376253676 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387917447 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471408876 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.381130623 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.951995939 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387060831 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.389670764 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380449108 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476318352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966160411 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.348536134 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393297196 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.318071665 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38013487 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.794662791 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075956002 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.402994787 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.381287663 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381148641 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312865905 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.90039404 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401878032 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515998572 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399531451 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039034763 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162292587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400074801 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30858374 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976321448 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388610423 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.31906212 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60884673 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158934903 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318671254 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.328464805 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313712495 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142065376 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388670738 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.838866033 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400936291 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.844188488 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.3912085 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400584983 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403349696 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604621335 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.258346084 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379981887 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.395567227 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495842031 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402084404 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.825512817 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314592251 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.384921596 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637544365 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.592106139 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389206969 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.466174382 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620879623 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394135891 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401522307 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379853484 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.417861901 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031621498 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412046835 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362467988 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404739997 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158199011 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174269824 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384133448 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.393158539 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38205136 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650416716 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.196292601 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266807091 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450023615 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388049283 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381960556 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.893008928 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983507802 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.264617514 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.378548044 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386889815 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398025325 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.381922075 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345012328 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.382855974 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392292152 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.161835244 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606792702 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397352532 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66090797 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31656236 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521534672 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399888185 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.607278831 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.694107998 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.407894423 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645125899 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389544562 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391083205 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39766214 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401954293 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483373965 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406212758 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.386226075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642299976 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387494086 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389048473 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.879757777 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.168274204 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390839747 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389316327 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395857836 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036062637 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377285485 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388164278 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27842963 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.398722706 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453127931 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390025765 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.39532535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.451729031 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406002095 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389556469 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.39594618 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609535752 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39711354 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.748993224 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463375398 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.595177217 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039830651 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418120498 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.320211956 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.096586312 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.078746297 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386005571 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.577385599 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386458741 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396448953 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39810226 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383591924 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044121929 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407447144 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.816852612 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.392464189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39745049 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391463833 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387253599 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.425848629 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396868476 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4058185 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.397460376 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530156832 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.4000229 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.32050907 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904733721 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392450677 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387548755 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.165681102 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422690591 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.812946608 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891144722 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648600036 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401593654 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399851615 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.004993625 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429453863 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.407059612 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391830519 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403829209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.407689256 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396306937 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.398494741 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.845252585 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.762066427 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953731107 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203562764 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016842138 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424903904 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.396532625 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303432304 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837438623 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324670038 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048486411 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602822859 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85537568 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345620795 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601309986 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.698936461 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266645526 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401683048 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619400119 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404188473 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.405303493 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401539557 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601984166 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424679851 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391137341 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323704146 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.687488772 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639286899 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397778647 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468824554 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837473907 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405875228 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169053063 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.399139864 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.836523218 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602961191 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.93891294 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78670503 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407637298 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39262096 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890091221 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394142904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921161998 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073829568 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422538959 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.613927243 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33247425 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403018969 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.402858611 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.386903506 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.929914693 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.400428173 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.648185567 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403771897 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326201421 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404128072 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005223877 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.268039772 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.399082724 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392033983 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200141541 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400964747 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728326119 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.394162363 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.438899612 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416433242 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327614348 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327881148 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085830745 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39210383 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363320611 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938694157 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.403517629 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39592538 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429333 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246966864 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652191327 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.40750381 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047007801 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639779164 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413617076 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415845982 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.397981884 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394341115 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.375296409 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275349795 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62979425 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486178593 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625812021 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.473524956 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.296118927 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.941376882 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613973774 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.276344881 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405425468 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675616888 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.127021193 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.397707019 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191465951 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441251822 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406333779 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415090814 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39986173 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414513691 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487358849 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408411564 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.406057708 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.407296108 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582037604 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409900998 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398118351 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409292381 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489344331 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.242078011 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.427778883 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170404517 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053803808 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229107218 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079326787 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429124746 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397358752 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396460976 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331480868 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549192827 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925518849 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67106732 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516938082 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.409174803 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421620688 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412867508 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408042912 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609496793 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672399022 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.372548524 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413394074 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18766593 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.292132605 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409133193 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.610295757 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952528665 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021296408 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528163235 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406457417 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.845633181 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671891715 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490738911 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397944622 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993413857 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.410622531 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.827858664 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.425851405 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399060135 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546739579 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410279384 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112794495 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.43095573 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.555117811 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172039535 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.785971861 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657775871 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.95304661 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412451344 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05769053 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.205679091 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66402587 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47073106 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410774987 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.516199293 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547729903 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.401462708 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297179581 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400205894 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252958838 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.110099757 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.409373338 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070675611 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686660693 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.404952589 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.40397312 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423135367 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.410881049 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626015915 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175884244 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626985019 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412491331 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409320691 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.975588898 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067942962 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434457914 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335179462 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40420467 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680081607 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.660321669 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424815046 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.855200941 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.112866136 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003481526 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.378459481 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42375109 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401723765 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.200264097 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068240642 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.462791414 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956553866 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064516871 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407081128 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676527761 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407677293 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419282176 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679047271 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.406555163 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.407034974 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414680786 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.06000545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288465251 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.414168867 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891103355 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.339837721 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.631226951 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.502758796 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346261578 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405086302 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.599695434 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410277182 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524570489 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415741059 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.408237303 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403386203 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.179625471 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694307849 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.409711891 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.396906606 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.395236459 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419489034 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505214756 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657151785 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40952827 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079121632 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.755815418 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663128874 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412108563 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.387513146 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.408937587 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406199356 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130308635 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413441221 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420745573 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024914246 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.414774939 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.421845109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40982569 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624193089 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617448729 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405998173 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438305236 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420823278 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425680187 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.307064856 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178547184 seconds)
  done (took 1666.951230514 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.419268267 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.426441736 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.451589155 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.442370151 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.450809789 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481475991 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.456895434 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.50033773 seconds)
  done (took 52.949402631 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.405979728 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.564341493 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.439978752 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.406980873 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.435082167 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.420684248 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.920863444 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.426404998 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.416009557 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.415774908 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.415879912 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.405005036 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.130993034 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.417739727 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.417932745 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.395815466 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.415559384 seconds)
  done (took 66.780295109 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 52.518994679 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.355643879 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.92452181 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.445492075 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.587528199 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.40724701 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.039952955 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.473118141 seconds)
  done (took 101.075733214 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.425389815 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.424218074 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.425678218 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.424460692 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426370017 seconds)
  done (took 8.44977287 seconds)
done (took 2118.376055828 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.41355504 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.415568483 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.412596398 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.416331707 seconds)
  done (took 6.981083519 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.387401674 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.110119435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.390115063 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.408903068 seconds)
  done (took 18.618962486 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.4114565 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.410635509 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.216211786 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149059414 seconds)
  done (took 5.689972007 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.157577237 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.171749221 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.154566645 seconds)
  done (took 7.807534702 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.40807191 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.413759785 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.413224457 seconds)
  done (took 20.556779852 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.703233272 seconds)
  done (took 3.027205989 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.554620825 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.604112314 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.77717829 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.764341425 seconds)
  done (took 8.022846654 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.791940715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.778244897 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.59415494 seconds)
  done (took 6.486090696 seconds)
done (took 91.331286139 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.692434755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.811611887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.613898917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.667462247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.642901993 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.613288553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.707993013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.628017851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.169821903 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.157607992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.703891346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.642582443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.660638376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.811307053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.661886842 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.435205588 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.636719936 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.742572116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352994007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409103698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.70611625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.305545451 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.539174522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.324404936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.638658112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.563772743 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.883525078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.433833983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408991655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.902640025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.564603859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.41639442 seconds)
  done (took 199.773414846 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.412671957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410127833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.409784299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.428362756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41031857 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.411807058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.429390224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.431645979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410165824 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415073119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421645833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409948227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.413071266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444852329 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410291539 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.413311689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.41113888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.431489634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428621874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41038036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.410257734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430882546 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.428886774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.430089085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.424227134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.412237821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.430256391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41209941 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.410419316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.429810016 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.411995428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.44685625 seconds)
  done (took 206.766526643 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409933479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431754635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.412377611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.421580116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411427935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.434876256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.415912526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.412266377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411569489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.448028526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.412241874 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.446494771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411931452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.418587797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.41425564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.414458597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423480085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427935294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.424359336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425807333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412913645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.425519907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.413445485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412232115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.439704884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.413221294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432437507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414078232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433310024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.415133881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412780694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432449226 seconds)
  done (took 206.814622908 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.620320095 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421249508 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.421329877 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.373715852 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.423845113 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422318965 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.416617157 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.613631004 seconds)
  done (took 15.041385309 seconds)
done (took 629.714643121 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.918162388 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.618880623 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.635079343 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.442293925 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.308813417 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.462412227 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44209987 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.631523514 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.389495473 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.639698936 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.809685858 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.459272946 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.958949755 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440875451 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.718965742 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.551444886 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.352533611 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.48347309 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.782147242 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.062616796 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.724639817 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.98436951 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.651990744 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.393986772 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.977672335 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.990552383 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.282246414 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.341522917 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.462479227 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.79187082 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.353154537 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.552594408 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.515297349 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.51478744 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.570842351 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.550047639 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.517016499 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.511908704 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.662665183 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.747843156 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.07058539 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.201186868 seconds)
  done (took 97.806915775 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.406726585 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.406580391 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.40570917 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.407237308 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.407079565 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.407419452 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.405638299 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.406626442 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.40793404 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.406475964 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.406628672 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.40930923 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.406614222 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.409013011 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.406608565 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409021247 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.407399005 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.409723792 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.408018432 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.40731019 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.407813962 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.406958499 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.408233059 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.407480018 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.407832414 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.408597505 seconds)
  done (took 37.926391345 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.427131824 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.687364409 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.873468319 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433481981 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426488639 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.430622215 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.516838784 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.427792949 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.429438302 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.431759745 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.609834868 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43119087 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.465668035 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.904506529 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.430589161 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428017665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.428601863 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.428269513 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.697549821 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436610708 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.541525644 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.42934479 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.51895311 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.439062564 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.454775167 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42838205 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.432473419 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.00554093 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449819321 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.611266764 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.365032574 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.51831214 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.959248707 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.908736245 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.37267298 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.43563675 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430618094 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.616362114 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.431259601 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.429539555 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.518687977 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.430305608 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.88618019 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.112920633 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.450748961 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.431096689 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.027935224 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.635549579 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.711026969 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438642751 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.911264202 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.43376777 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433839541 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432993002 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.714307265 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.43625296 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.431424943 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.031991323 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.456339672 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.520700128 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432543791 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.430983226 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.705637776 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432138689 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.693688769 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.432387093 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.43862232 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.453044331 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.888154958 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434761926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.138014809 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.451155847 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433290143 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.612095507 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.694538715 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.067821197 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.456334173 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710855086 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971980042 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.538715649 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.436499584 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.002121891 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.543814509 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437250162 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.435120437 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.434381753 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433224671 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.478029554 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.51927627 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.070807295 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.145118081 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.058891602 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.543885725 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444362568 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.433293712 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.036502202 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.456324038 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43431286 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.883449557 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.138620042 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454407407 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.44181328 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.140045921 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.455809677 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.524070072 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441042314 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.897276055 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435058135 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48054941 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434326972 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442012001 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.459021413 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.525348 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437670445 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.435044843 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.11052349 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.641607887 seconds)
  done (took 189.444166503 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.442010276 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.428637472 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.427326592 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.447345496 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.427437241 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436151265 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.428302977 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.427919029 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.434668231 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.428192519 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.427797072 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.427518829 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.431488444 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.45489186 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441225067 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.435664329 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.041042686 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.429628712 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.430541275 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.42898702 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.261711564 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.429700187 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.429213558 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.427598807 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.429156064 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.4282061 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.437415212 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.432618574 seconds)
  done (took 154.894191144 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.43628211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.079007484 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.457032021 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.586304015 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460127212 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434610136 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.584298632 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.502022059 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.457102271 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.434923249 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.435188707 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.780668438 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.438646911 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.025976974 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.659103869 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.605697785 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.025297605 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.458946122 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436687083 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.43611401 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.590531923 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.443238793 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.781325118 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.081746254 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.459587208 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.082090298 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.421908922 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.4395557 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436645394 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.084435557 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.456312719 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.785243599 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.526597444 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.506412118 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.103255621 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.04754254 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.047172043 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.607755275 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.43786224 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.436742575 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.436634431 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.421416641 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085340299 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.46129064 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.43944582 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.075172928 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.461360477 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.440652979 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.444857519 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.437295254 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.506410632 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.525549172 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.808060912 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.090871686 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.546341359 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.45058693 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.58848881 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.839046996 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442175814 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.029534785 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.422127093 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.09038775 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462223544 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.422055435 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440734693 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.445548379 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.610573402 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.590769383 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.031446818 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.460865429 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.030917841 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.632017549 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.44155388 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.439110938 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.442728251 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.092246926 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.051667507 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.632494185 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.593609152 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.664550854 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.426455578 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441206118 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.425624552 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.530097636 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.441099695 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.093941603 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.052915693 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.462460019 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.44355549 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.442324274 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.443944796 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.645846268 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.115593388 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.549612057 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.022074445 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.810309588 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.791854591 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.443924489 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.510291742 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460149338 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.793419492 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.443469222 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508972735 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.907151944 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.79214997 seconds)
  done (took 173.383169457 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.710150912 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.836154635 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543179735 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.599012275 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.082363619 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.044185672 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.828828558 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596612277 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.562951052 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.721453186 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.707558181 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.530022289 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.679568094 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528516187 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.22385869 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.541459764 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562864321 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.604828052 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.609656085 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.529319429 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.15584059 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.752783709 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.644734906 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.478321919 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.546404522 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.316324219 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.039233802 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.023414524 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.629578487 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.966698032 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.992950031 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.6594011 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.493800733 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.207996786 seconds)
  done (took 70.299991323 seconds)
done (took 725.080629428 seconds)
SAVING RESULT...
DONE!
