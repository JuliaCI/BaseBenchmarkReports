cset: moving following pidspec: 4392
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.36012499 seconds)
loading group "string"... done (took 0.566113745 seconds)
loading group "linalg"... done (took 7.720075752 seconds)
loading group "parallel"... done (took 0.172747058 seconds)
loading group "find"... done (took 1.293089729 seconds)
loading group "tuple"... done (took 1.977445811 seconds)
loading group "dates"... done (took 1.428394995 seconds)
loading group "micro"... done (took 0.248041122 seconds)
loading group "io"... done (took 0.979231848 seconds)
loading group "scalar"... done (took 42.202243981 seconds)
loading group "sparse"... done (took 14.125028829 seconds)
loading group "broadcast"... done (took 1.095820415 seconds)
loading group "union"... done (took 15.061477927 seconds)
loading group "simd"... done (took 4.886452221 seconds)
loading group "random"... done (took 9.798023268 seconds)
loading group "problem"... done (took 1.999368343 seconds)
loading group "array"... done (took 22.709298925 seconds)
loading group "misc"... done (took 2.052846899 seconds)
loading group "sort"... done (took 3.458646797 seconds)
loading group "collection"... done (took 19.81471407 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576295917 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144189759 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150388931 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131421456 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20647991 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157084611 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158741068 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098987739 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.006363572 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182306304 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156217355 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529087724 seconds)
done (took 5.239102281 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218863604 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095169351 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104429976 seconds)
  done (took 0.886103699 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078155269 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145644508 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095398446 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078404027 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095863499 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07981318 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096784175 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079579831 seconds)
  done (took 1.366367321 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086952692 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097563663 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082368076 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096479478 seconds)
  done (took 1.059418095 seconds)
done (took 4.307687066 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.739067303 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275909312 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204644305 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464764525 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196260728 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217772258 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689868944 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.393528193 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253479497 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099976667 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14364541 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389640084 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138114906 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691697832 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089809296 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125451143 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.190722576 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.492199457 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083814512 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111109577 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11716529 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142628343 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128666215 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090847135 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184037766 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081875198 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193679866 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108453105 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081316395 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276339824 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200765857 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691440902 seconds)
  done (took 11.018871268 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113742403 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133055011 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09709855 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139836833 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134750825 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098731602 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085692838 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098605047 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124721839 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177870077 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129108685 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12146691 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095921747 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084073252 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118236748 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249005477 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122535057 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101481682 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102216509 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089373503 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141676549 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114697657 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110674705 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095536388 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170417221 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225302589 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113626893 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128332952 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098853176 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11359794 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144352901 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146462011 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09662966 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08222891 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174443479 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125303019 seconds)
  done (took 5.203230832 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.089270533 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192273579 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123715878 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17094407 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080266084 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144479185 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094449039 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113690187 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256277344 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112872414 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487410918 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141962429 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101253376 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099950974 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084354962 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099751838 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.560959591 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156993398 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135006312 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097443156 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1080479 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102428493 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372044977 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085268469 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097850785 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084671214 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083384696 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165852721 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084181034 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.14095648 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.1233645 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.135640551 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082354644 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139640732 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216837757 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.126773052 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111254168 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139686735 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099030974 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080898196 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181633164 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107453854 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081906249 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12426673 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137980348 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13832747 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0986114 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083394693 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209912444 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099556422 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11554705 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.927216082 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183911201 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092110712 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097893106 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078901371 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121963808 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081010952 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307714036 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094957798 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277013575 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.208040994 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093672881 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081363408 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097479912 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080159094 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.10116672 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383514339 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082839485 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.763863789 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08475302 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108289306 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08428149 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099343626 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104904353 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089276765 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11565247 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079235749 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101247987 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080918605 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099119443 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082765977 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111147386 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212526251 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098609769 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07933219 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096201576 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114600527 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112124534 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101581867 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095994379 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116926014 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100681887 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096660105 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116847732 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099433721 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107160179 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083154289 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143555669 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098314891 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.149345136 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096074888 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124976234 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099203913 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113805469 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11136731 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098532114 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167658201 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07822703 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095113135 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08026254 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097976341 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082671292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102054455 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111682937 seconds)
  done (took 22.935986119 seconds)
done (took 40.936886163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327966867 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106509808 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106918554 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105625402 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103644137 seconds)
  done (took 1.518405276 seconds)
done (took 2.256812267 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289455421 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175221657 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095676452 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166100759 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092629579 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165105855 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15947838 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093283069 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220532845 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093709756 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160648777 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076326905 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094656753 seconds)
  done (took 2.648830459 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094437808 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114593912 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084430213 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112859222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078620985 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113068001 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094704352 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119636356 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111748752 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087410026 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095690708 seconds)
  done (took 1.842610993 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09463678 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115379057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084464685 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113062053 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07940993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113531049 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094855154 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12047688 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11444794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088301024 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096741509 seconds)
  done (took 1.852009123 seconds)
done (took 7.071931063 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092009413 seconds)
  done (took 0.822274191 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930297803 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.768874681 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1121193 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149630434 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297419851 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.195097598 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.477092659 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127912717 seconds)
  done (took 10.998129528 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11564178 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104817489 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.10164384 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098446 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104670498 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087874504 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102319441 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101775058 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085735532 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102224597 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088367448 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10548451 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10377345 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089194622 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104166201 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088890451 seconds)
  done (took 2.389880156 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121695271 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120429105 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11051602 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111413186 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088618857 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108747503 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108802947 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091315364 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105480841 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106133946 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091941698 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109400171 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106303562 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082252494 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109185146 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110786 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088827654 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110047033 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109388455 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.093356894 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109865885 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097863685 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088957924 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108979823 seconds)
  done (took 3.344805705 seconds)
done (took 18.290886703 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159942816 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109277502 seconds)
  done (took 1.00876755 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096535596 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113988108 seconds)
  done (took 0.957350506 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097961005 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096783599 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122614627 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110776791 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081838579 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098422275 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12352396 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082899526 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09954124 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082239735 seconds)
  done (took 1.74915718 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083196905 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110948238 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101977284 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097547925 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109408173 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097266612 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090937372 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102469583 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113376828 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078912841 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10469614 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116930805 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088048966 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119524596 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107839528 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085137859 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105369024 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101310943 seconds)
  done (took 2.567463562 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080520753 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097562725 seconds)
  done (took 0.932708836 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08154348 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094122296 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083056109 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101394526 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095981132 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079644323 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096500478 seconds)
  done (took 1.383998856 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483234208 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137213431 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266971506 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104272641 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105637065 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.306144966 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098244131 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084586372 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103811455 seconds)
  done (took 2.504968126 seconds)
done (took 11.85140626 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09425713 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11627786 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115447398 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469458121 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108216332 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099220321 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147316207 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252753945 seconds)
done (took 2.159076223 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144349668 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60249112 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428419498 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.238384894 seconds)
  done (took 2.026045852 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.4045648 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100739884 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085370157 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084135909 seconds)
  done (took 1.437885273 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080405072 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101311116 seconds)
  done (took 0.944413136 seconds)
done (took 5.312236234 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081471812 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132048688 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081381982 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.100037944 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08219377 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099879624 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078527706 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098861923 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080963897 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100787072 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098529385 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082593197 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099112972 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081143765 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096976694 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083598072 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09697917 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080572398 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097027001 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080585096 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09969553 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083065912 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097170036 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080557541 seconds)
  done (took 2.987595285 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102330443 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099062789 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104172985 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088795241 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104757439 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088623531 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105379114 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099665537 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090013668 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10435944 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104140505 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088170453 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10218417 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087065387 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10264337 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104444201 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089040226 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101303587 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084940088 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105875227 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106212195 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08363567 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10463589 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105460172 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088740377 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105005083 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084884478 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100796106 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105922734 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087160595 seconds)
  done (took 3.694751811 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085928328 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093823647 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080227119 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105036993 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07997641 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099892154 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080123343 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098521904 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081370408 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097780889 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082364694 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098495334 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080085458 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100125292 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080940718 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102266039 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115181075 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081639474 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098266834 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081682263 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101431164 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081461834 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098815445 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081349009 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098904338 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081104683 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099187025 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08035773 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098884581 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080879688 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101624613 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083659807 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098810537 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086208981 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102785422 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07941783 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102275134 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079963109 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099292577 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078965878 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098472306 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097039949 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080466432 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104343438 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080842324 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099885822 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081455535 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099504167 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081009743 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101924964 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080564877 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097653425 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081806624 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099377628 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084394173 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099799244 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097629687 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08081685 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099125963 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080786531 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096925473 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080514938 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100298522 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082203325 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113752025 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087946032 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097838839 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083060108 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100427461 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082808454 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100931407 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093903714 seconds)
  done (took 7.354025174 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083398396 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105830835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080658019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100549323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078563572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099722664 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102377978 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082303436 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100535773 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088166496 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099475988 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082494582 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100802481 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110133695 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081983087 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100388141 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087255586 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097306273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081034489 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103815662 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081095286 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103683239 seconds)
  done (took 2.826804684 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210205501 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105827263 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142079122 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107175774 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084597999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107650839 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101784101 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088726615 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.212921661 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083901771 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101154431 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102331074 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085009278 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1041054 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102805519 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088275215 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105081471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087613307 seconds)
  done (took 2.797002663 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093930187 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09899196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10285795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100610654 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098853014 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085352435 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106066502 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110625238 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08632584 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101432335 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093432821 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10496896 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102969393 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084306073 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103633179 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083356246 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104767953 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084392284 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111588852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107186928 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088614427 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111731132 seconds)
  done (took 2.942294119 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097643673 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100668429 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118481576 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085081468 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095879818 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08163339 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109152107 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08337675 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110852996 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103067706 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084715796 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099931904 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091199253 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101933888 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106916076 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084339512 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103685459 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084785166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104554303 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079839672 seconds)
  done (took 2.706789861 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1028197 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1017663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099290252 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093630624 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103089008 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084507881 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114021399 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103467604 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085195807 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12932539 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103271284 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084980534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112433157 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108595698 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101843662 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095142051 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11174401 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110977025 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083906286 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101556397 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126085985 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082903875 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110020496 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100453437 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083629561 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101195894 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100067891 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089094176 seconds)
  done (took 3.605645781 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0827762 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09854054 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082398948 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09669885 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079744373 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096441639 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080436781 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096651502 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082115037 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095749758 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082985624 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098240816 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081477781 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099872124 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083629119 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10047465 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083674354 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098937543 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082281449 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099810548 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083654073 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101662155 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083239114 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100198309 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080407711 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101661546 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08031561 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09961484 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082675607 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10015505 seconds)
  done (took 3.495890479 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092083744 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106908934 seconds)
  done (took 0.981122272 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08011738 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115286667 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079403484 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102855433 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085840538 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102158975 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1071657 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086056549 seconds)
  done (took 1.53729 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097190939 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110476312 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083799017 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114954529 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110009995 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099452699 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17486213 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10255051 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08805473 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099439212 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115253782 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083678215 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107192307 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083619685 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108816557 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090964143 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101464191 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110925173 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088383017 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100658019 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085898449 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111968766 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086256301 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100741015 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103939082 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094614051 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114415969 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084724452 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104988413 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10727625 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089549442 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094913831 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084469202 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102778123 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082390212 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113428994 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120559275 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087466007 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112370244 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084709731 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113434484 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095240606 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086664494 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105911953 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110292571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083398745 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099976728 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077939615 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097299015 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084720044 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096683848 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084710767 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098822815 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091673333 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10738817 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11297434 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083173414 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105015243 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08761795 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107347789 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090344361 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107076794 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105217376 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085704101 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110601228 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089016306 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11469381 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078564145 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098357238 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100151608 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095732403 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128573479 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091748125 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103574754 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103671596 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082585982 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105139535 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084336292 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108672262 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107079917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085365101 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109025815 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091281715 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104309362 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087776391 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113499572 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101041804 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08805289 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10153147 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121013812 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084375667 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100208535 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082847416 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115001596 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088204888 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103599835 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082222904 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11115722 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096234602 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086958931 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105340273 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085769268 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116157202 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107453408 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090197422 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109933818 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090557879 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104285138 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106453002 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082426061 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10466279 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087727046 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110433883 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078732054 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106658672 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085429163 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105056882 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113055224 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084100491 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103965316 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092818614 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109709477 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083065032 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101271865 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106272886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086078905 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108120606 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093800561 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102638091 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079689856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099099216 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087101173 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105383958 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106660199 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090233888 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107126825 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078994371 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102396994 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107301714 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095857199 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101960214 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082914621 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108871695 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083076504 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100373727 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106510992 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086103313 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0988771 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088856758 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101832781 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077693071 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105573031 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103127477 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082019146 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104149053 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086454598 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102765273 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082992759 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099592654 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106250486 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084529182 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098893531 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082403205 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099374368 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093776747 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103965435 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095164701 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080505134 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108624105 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081597329 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100941825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081645387 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103091663 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083466184 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101972289 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100046202 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086478595 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114970539 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089430611 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105070542 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107004152 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094902951 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100571118 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085263581 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101412528 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084719981 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104003357 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111413539 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089309499 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107223981 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086796465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099385004 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109516339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093287953 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102507309 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083367221 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103278077 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088853169 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11122985 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105843289 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085430765 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101003 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085682171 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108075214 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084642369 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102055045 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099022505 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089345375 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100167844 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090150335 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103601358 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110878765 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086753271 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095954527 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086801768 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099779392 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088494528 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097392218 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080117147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100670534 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101794366 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082139803 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104228456 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077681807 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108935802 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090758915 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102663647 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081204027 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102794965 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107520133 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084767514 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104509899 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086064667 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108474613 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111327671 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082504969 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104382624 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094807925 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101270979 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076712155 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108374258 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099501978 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08306072 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099382554 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081690775 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105260987 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09243124 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109836599 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094274809 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086899649 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098955701 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08239432 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097255746 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088099648 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105531618 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083753248 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108717548 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102537455 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087542054 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105423047 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083666047 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10327845 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08476231 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105473635 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101158076 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086320317 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.09994449 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086060282 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100252536 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080495176 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10410413 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082832805 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10194461 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105963343 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083391255 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101338637 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087329389 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101858607 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083232635 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102363589 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081806281 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104719572 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100475462 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084143287 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103279955 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079175984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108331768 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082463257 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109776699 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082654389 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098768015 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107036522 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086396193 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10749763 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083931862 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102382199 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101532757 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084089853 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10395846 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090902187 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099597923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094525414 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111756597 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100751064 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086697543 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100786516 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084422764 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101465178 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083454596 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104491484 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084213334 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103767156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106752185 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086964862 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101965824 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086646047 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104795174 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084505846 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106168055 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080057413 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10433228 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083317666 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103303451 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112488494 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084376245 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105424554 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081911167 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104367125 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099839044 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081401722 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110794119 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092558553 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104114822 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108323868 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082501037 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102542395 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09520171 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096550368 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081019065 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100388325 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080396445 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120538828 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102111095 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093899271 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10231753 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083172924 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099640453 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083802608 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100950977 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077087781 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100501707 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105165906 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086699002 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100304369 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084661788 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104973689 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085445879 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11346494 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100443579 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084465879 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102099885 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080741331 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100985049 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083099796 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105751479 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083849015 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100847401 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079928106 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104149486 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104804414 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085821246 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102653631 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085260639 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109304557 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083060086 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106603107 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105826693 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079267226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105002207 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084190704 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103126194 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082541536 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106847557 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087257557 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10350573 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110944515 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084319708 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10252292 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084436943 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101067164 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083436163 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103706821 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102885053 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084292423 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102735886 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092425971 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10074009 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086735413 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102730057 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084223487 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113148941 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105437113 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088274197 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112949596 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086560549 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109019542 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113285458 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090834939 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109478285 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088236204 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108530441 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111425847 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086685488 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112743878 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087560569 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10731832 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088680796 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.105029217 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086139133 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107175283 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084413466 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113745828 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10696069 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086659932 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105792098 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085502929 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106147951 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089807478 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113633108 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106825409 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089352169 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097481999 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082468168 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103702228 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081356583 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104351408 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087049323 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109938442 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103938638 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085327178 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101638359 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094354631 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109764443 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087544131 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102600059 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105783657 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086770389 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105452464 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085846139 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103475731 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085787538 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108125745 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084816717 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.1041693 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109632734 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088008735 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104695979 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085874722 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104179387 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084569201 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099666402 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084098041 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106664124 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107600172 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087298384 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102959619 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094759233 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10381089 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082915491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108203943 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10261305 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090334983 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098365997 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08523213 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106401881 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085337989 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099903519 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10106401 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082928798 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104508747 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085088075 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097650301 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095009369 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113191657 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105744501 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084202008 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101238233 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080640841 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098196587 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083883691 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105380262 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085467349 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114968748 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101467175 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084169591 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098054139 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084697551 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106717291 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08813033 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101387622 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079524052 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102879711 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086547739 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109357585 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101121019 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086202601 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105955629 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087164986 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101613304 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088363659 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100792905 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086756762 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119254445 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104537765 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084656314 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112259372 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111155705 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086704244 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098693317 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086146402 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10790027 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084529889 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105411825 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085462927 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120752645 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107163187 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085072677 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10711078 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090014081 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107501089 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115749557 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090185805 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10901319 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093077944 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.11120918 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116918549 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090680782 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116842065 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091371674 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111156946 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085400371 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108847224 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103490751 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086423224 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108451691 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089323489 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113153476 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115555887 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087530543 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119095827 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096837146 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113787988 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083733894 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108211691 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086134884 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104390549 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110873299 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086363431 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104486686 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085221176 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104974711 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086681904 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111407332 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085677952 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105954397 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103202899 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079765513 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105286174 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087837184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104792273 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085575002 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108597863 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088776272 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112531995 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111195445 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.090503482 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108388094 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090287663 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1086277 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084667846 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115474871 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087219494 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111292112 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086361102 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108246795 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107068818 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090305662 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109319178 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085055321 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10683376 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115373234 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087811725 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100327096 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083365243 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109493018 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082760969 seconds)
  done (took 58.790118579 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147607378 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081930706 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099093222 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08004982 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115503486 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102341541 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083690161 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103389624 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084983846 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107180313 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082517987 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103900807 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112380057 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130330457 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096583849 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106875985 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079202727 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102101361 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098649202 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081904449 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110378223 seconds)
  done (took 2.942141521 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105648124 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11912924 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11670216 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119374507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091374184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115804265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115884329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115527654 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099707778 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113125128 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119799304 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115540161 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092834691 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112927346 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110633362 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093921415 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121138768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110659421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116678999 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096737862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114599576 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115156242 seconds)
  done (took 3.261783996 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085927169 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102930634 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086523964 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09787086 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084230203 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099381571 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088906559 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102424242 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087499608 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103275942 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081940664 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10443702 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104507759 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080420617 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102973855 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083163298 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153034333 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108753289 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083867864 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106849672 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077964744 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107628444 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098313302 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080883589 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101964212 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089727254 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105055467 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083055888 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10581033 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084621226 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107935104 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082019667 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108799155 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104373555 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085263817 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103587269 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085392915 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103558493 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080483506 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102415557 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08524313 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10206265 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086829712 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109754153 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085245845 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.107270505 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088624336 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109118638 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.082392152 seconds)
  done (took 5.536697922 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106172891 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162256714 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088982236 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144776286 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123624487 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113659499 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08879143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143943168 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103777213 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083129091 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125063879 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121742996 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10443252 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089959726 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112794367 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103865666 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087082449 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10411525 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107891729 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085966138 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110456596 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091101623 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125431135 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124444972 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114017289 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087904008 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10892088 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113510499 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102873222 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115652061 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114216279 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094401241 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126381238 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11486664 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08714853 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113653981 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127325061 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109677052 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092635914 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106570114 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091362897 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115315157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115221294 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107428477 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110776687 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115234711 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088969037 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106829612 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123341538 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091930799 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11970087 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125747091 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092239838 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111082131 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114620024 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125426158 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089974735 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108452063 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091235689 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12444483 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107329907 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092469178 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124658405 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111772862 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117031316 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105852499 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.116037203 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113348582 seconds)
  done (took 8.428431072 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09492944 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112169601 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122642348 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126068523 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096076033 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117461102 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115929535 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094635604 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117468825 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122609186 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115638289 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140148049 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.091146226 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121110676 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116689148 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096448384 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118174836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116819402 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095294172 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117292764 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116887006 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126185354 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095295699 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126369736 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149276808 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11123815 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095144078 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117320347 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126931052 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115819133 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129128826 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096366273 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11717089 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124981968 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126267685 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091901046 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105507053 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110816999 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092123767 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112763282 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105215252 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101528484 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112842076 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10697794 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093075455 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114491654 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121412244 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12460753 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115760429 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099874129 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114259196 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123013892 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110914801 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093543402 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122597303 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148788751 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121668778 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121389488 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112354823 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100651652 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122047854 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129296433 seconds)
  done (took 7.90294193 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107769392 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11670064 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118854735 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102191257 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08782224 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114225551 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086805839 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108330223 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11868063 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.1001658 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122017333 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111201191 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092894925 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118250183 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110957251 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112844739 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090301686 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110418451 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114842473 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088613502 seconds)
  done (took 2.983396963 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095002087 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125248112 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084659151 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113710019 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10870619 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091429409 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108435174 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108037474 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087424337 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109432448 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096212249 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119475022 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10759581 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091822787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117530109 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112849573 seconds)
  done (took 2.528560366 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100405549 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119284897 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121118683 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08472187 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10600602 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080258184 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107400572 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100285871 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082403961 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121910577 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084660455 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110577582 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105477822 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084347388 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102100545 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088417945 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102438164 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08236406 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106267341 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119944208 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096960623 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105194069 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085282358 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109173055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106114232 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090874143 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107083828 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10330244 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084165774 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106301236 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085852003 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115384893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102968998 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084874164 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103122423 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082716093 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105382424 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085512293 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110008969 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104235251 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085277399 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105407185 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085356741 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107102527 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081579968 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108131229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080960506 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113239568 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10325571 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085885936 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107193783 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086605501 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108941156 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116521486 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089088141 seconds)
  done (took 6.30396574 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099315265 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109687721 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08077171 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10491944 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088349685 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110235428 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110931421 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092216431 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112734393 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087387933 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114340941 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093974426 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114111897 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114205822 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092026746 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11414199 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085008909 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113303694 seconds)
  done (took 2.693930705 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092031783 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10559502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093058239 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106409745 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085656684 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110052339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080227027 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10529116 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103707383 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087028917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106189138 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088208114 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104882776 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087691891 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106720182 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08456638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109301551 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103598606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086140985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101673224 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088603042 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104724436 seconds)
  done (took 3.000192701 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119968372 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126937006 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092625539 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233305783 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104302387 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134298729 seconds)
  done (took 1.667454434 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110576253 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12148494 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106309929 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108901493 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11608936 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086518291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109363754 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108695099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118967054 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102073887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109655266 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118824794 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118557358 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097791251 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116597393 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115854541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10721115 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088977569 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107230711 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129256368 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088655423 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119568145 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109155512 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087361582 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109478663 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11787134 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118524883 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102754855 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109108924 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119293251 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115187749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088649331 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119601078 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1241873 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088571462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119448167 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109275239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129376387 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114682425 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098795077 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112919461 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11925991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101855012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119390263 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123672488 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112056475 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097928621 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114188694 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111392941 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137424212 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094944601 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11879133 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116072275 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118234199 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098150015 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135543552 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12494384 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119128493 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115650003 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123852047 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117863443 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095201939 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119251734 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124011073 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116074634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097386339 seconds)
  done (took 8.230066377 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103490171 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127288824 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108987528 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123873071 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097544116 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108932831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108407145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087863479 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109894146 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107283909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153868947 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089277267 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119718859 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11866769 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087893043 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110127579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108985945 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11731595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088645012 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136278227 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109454968 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117272345 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097240526 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119569709 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124553346 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116935878 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107974524 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088618141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109783481 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087483505 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115651965 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110165465 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118793784 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087123402 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119067899 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109139145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088038592 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11515457 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10908569 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11506981 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09798326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129044371 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109416935 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108878373 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103089724 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110034352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10916727 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087309906 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110130587 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108349088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102098623 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124290548 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124356998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119066588 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108031492 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089257003 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110622731 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108023239 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08898313 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117137335 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118147697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087374938 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137870198 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110108755 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110644894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11841873 seconds)
  done (took 8.092078875 seconds)
done (took 158.047447275 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.222056369 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201784982 seconds)
  done (took 1.280211963 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088238143 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137503272 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098372656 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177126184 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085863956 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141849613 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138800769 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098292625 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108154931 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08606153 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108318297 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087183916 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173505699 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086081324 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10807191 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107806481 seconds)
  done (took 2.694880342 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118612726 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.233767014 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126069762 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105712171 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090697029 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110564277 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084382603 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112955547 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089673003 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108282749 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087660614 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109211001 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08466414 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109437008 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109870615 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090492319 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106663212 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08943253 seconds)
  done (took 2.831726541 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113919886 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14968238 seconds)
  done (took 1.134263907 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243142375 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163690305 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.231445836 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.477819663 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278040044 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36714692 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206234362 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.214672163 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167409668 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.211516282 seconds)
  done (took 3.424273742 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119338816 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181312066 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318334346 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155966185 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107177473 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13027479 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157791219 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132233476 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123701223 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101749698 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123380586 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119186561 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13838748 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095303173 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116427431 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118201561 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122183444 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115588054 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114454491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096788576 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139062199 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084438327 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117443504 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114528801 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098233937 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120766798 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107306701 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085508192 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118661454 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093935253 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114890565 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126586689 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119395508 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156801392 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123916712 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157284262 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118394405 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09202335 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115546372 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090999052 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120156485 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119405453 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125024618 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098366133 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106294092 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097305692 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107843937 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084439516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116718585 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119766878 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094601391 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115587338 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155019312 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120860632 seconds)
  done (took 7.43402346 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79168835 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157605317 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089860324 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884424845 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112563429 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127480178 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780328304 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111759677 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25537992 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758958318 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139521776 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101561365 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233577089 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258885756 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.966311099 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314191383 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.641663231 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130561057 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151632852 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154008924 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117103646 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115383006 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133682572 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431848657 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11750545 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089683436 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118864995 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119717161 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161732876 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125209856 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091680706 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201731059 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248904577 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204582528 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094576462 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112880345 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089376785 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193956113 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246274772 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217684254 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181429234 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108515828 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089730038 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124695484 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133438019 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087353081 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184016615 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175905502 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170936187 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11554474 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096290752 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121543024 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121765455 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165006137 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122919036 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31581912 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315316034 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08982826 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122079465 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125854773 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243849817 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124417265 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227046172 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138817183 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192086463 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112494825 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798300031 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171272284 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088418525 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118688664 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120733391 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093479745 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12248914 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168143491 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392605066 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125236314 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092125952 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113201891 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23528325 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103782564 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112717159 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163011257 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117650813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098545741 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12510001 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123474955 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169193653 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.234919086 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123862706 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12122214 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092772145 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126392042 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117695734 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212717705 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219231721 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162653709 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207296159 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122855382 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162965938 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193079866 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096556075 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196442121 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097468219 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124848655 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1222827 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219922891 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146271924 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101493165 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116989641 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119171621 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147910905 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104701958 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120191271 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17043591 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480807971 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169040822 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109594802 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105796074 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12129599 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16087122 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119024266 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26016356 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099663859 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192414114 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097838455 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110343003 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119609713 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164373526 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121951844 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099467165 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123701235 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11906464 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236943878 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218577555 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098696965 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246049397 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183884697 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118672903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173544137 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121764494 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169320295 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119881556 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099680324 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118116636 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794094457 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101506941 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121420725 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115376907 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187041377 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089764165 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12509687 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12511974 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087198493 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777117192 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127307432 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09898765 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125402657 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117615189 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098566858 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119551042 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116275676 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161967922 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230825556 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118972589 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098408342 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126910888 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161942289 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118979955 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123919707 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10410373 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125878737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122779974 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092977142 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127680592 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169261101 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.187007075 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19697036 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.601484575 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11282696 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102721092 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230245152 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112794113 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290033995 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098484748 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227660296 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163213781 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.124096594 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315870204 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166009652 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189418442 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12867878 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17374144 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110386928 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095661527 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.190713886 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090140413 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122213356 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163923663 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125686384 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122917462 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.936892635 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113812238 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224508158 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110385613 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172072069 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117533835 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097623177 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295972481 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114048782 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127123445 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166145137 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092148901 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126862599 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.758443791 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102130946 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123424498 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119261056 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22373329 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16389851 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121285154 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09747352 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121315338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162384527 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231192267 seconds)
  done (took 44.172294552 seconds)
done (took 63.830866138 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279414904 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218650977 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270326034 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171832996 seconds)
  done (took 1.912081905 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172589106 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150541041 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122346938 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109511686 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150748368 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084073105 seconds)
  done (took 1.68486645 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367532761 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279027807 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246173267 seconds)
  done (took 1.79298063 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321778719 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254186573 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474405598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327154142 seconds)
  done (took 2.374910963 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211779825 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133977246 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11157366 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103476243 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199462169 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246931487 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143221298 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203261006 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097401391 seconds)
  done (took 2.395549962 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199500916 seconds)
done (took 11.25510703 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.296814624 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.13703169 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.216810745 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099461236 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.125947544 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.186146186 seconds)
    (7/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.250735382 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120527008 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.184026079 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.194451854 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12595142 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128447427 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122655768 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.169572116 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119838081 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163573163 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.217972123 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.231972866 seconds)
    (19/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.255056301 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112842674 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.152106708 seconds)
    (22/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157914762 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.0972864 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.12228018 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091314793 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122892534 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.14162834 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08822061 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119923135 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.221544535 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.161301562 seconds)
    (32/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.227592012 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182559973 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.149867044 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118857285 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067001871 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137385717 seconds)
    (38/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.0767149 seconds)
    (39/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190081425 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.171861082 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091283395 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.150872779 seconds)
    (43/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.1153086 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.0870082 seconds)
    (45/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.200756888 seconds)
    (46/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099230482 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120874747 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091640263 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.198384754 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.157574545 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135119554 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141581947 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094974344 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065982583 seconds)
    (55/309) benchmarking ("sort", Float32, false)...
    done (took 0.174455327 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089483105 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097862248 seconds)
    (58/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.202931487 seconds)
    (59/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120203162 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092613802 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111052515 seconds)
    (62/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096020461 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.198672836 seconds)
    (64/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195265271 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.213878388 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122240957 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.165004836 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.205886196 seconds)
    (69/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.108154606 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.135705643 seconds)
    (71/309) benchmarking ("sort", Int8, false)...
    done (took 0.188673928 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.139082327 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077162407 seconds)
    (74/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.147140441 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123480029 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.115581112 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.116949197 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097953836 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.216599377 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.109534989 seconds)
    (81/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087375015 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076941696 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.172254795 seconds)
    (84/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12441228 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.207959236 seconds)
    (86/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097305604 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12175001 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.234525457 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.161544775 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.179897776 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.169252579 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084972059 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138797252 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.148908144 seconds)
    (95/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068836938 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132479874 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.170265926 seconds)
    (98/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.126473716 seconds)
    (99/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149724853 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.217850885 seconds)
    (101/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.125947854 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214248982 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113312237 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088202349 seconds)
    (105/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.090333325 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095032822 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.169868825 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11711449 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172168545 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.178569507 seconds)
    (111/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114725706 seconds)
    (112/309) benchmarking ("sort", Bool, false)...
    done (took 0.186122322 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066027041 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119472947 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085441239 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118686871 seconds)
    (117/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094461795 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116744424 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.31663268 seconds)
    (120/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120531773 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119678385 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132242494 seconds)
    (123/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174023684 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086810794 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120524012 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109403781 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193482153 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119079082 seconds)
    (129/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13606005 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113610564 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.110379064 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11473609 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198951929 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118035662 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191863192 seconds)
    (136/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.122782094 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092605385 seconds)
    (138/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.160789221 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.16029621 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110565483 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093345143 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.138797956 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092088841 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092047204 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148742279 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092208968 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087124327 seconds)
    (148/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.100270103 seconds)
    (149/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088557875 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.088999175 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150968103 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.1192733 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067555778 seconds)
    (154/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137769745 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109396771 seconds)
    (156/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118430909 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170574819 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111339332 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10990441 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095960019 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128106625 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136407773 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149183078 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091422805 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068380197 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121023463 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093929562 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121361974 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085920562 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124094004 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081411103 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092897395 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068052291 seconds)
    (174/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066492401 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112459788 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068349251 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 0.172684763 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075579188 seconds)
    (179/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117990881 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089413471 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112177817 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066584799 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117798149 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180088671 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140908937 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091741298 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114499511 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 0.222679484 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112853942 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065944981 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.133161532 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224831963 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094837041 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175375683 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065531419 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126225246 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065582046 seconds)
    (198/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135591676 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117443729 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068570423 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085582169 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093271657 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06666243 seconds)
    (204/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.08995564 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069530999 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084764554 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092716894 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068893964 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110674673 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194924405 seconds)
    (211/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091964319 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139690011 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100154308 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118773261 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085091978 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130331046 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113361764 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093131709 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11879681 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094505361 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110264057 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.150297318 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177243543 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110546667 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111655844 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.111472827 seconds)
    (227/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088860262 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.113307457 seconds)
    (229/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.15067214 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095575079 seconds)
    (231/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132772996 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108556537 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.110097065 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085413749 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122739953 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109979805 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088233736 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111027186 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086287187 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135097761 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086672069 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091649552 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067534039 seconds)
    (244/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06758753 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090637714 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077053148 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190056564 seconds)
    (248/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077849583 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145809029 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067518405 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136912045 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087347053 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.111746883 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067926693 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091613237 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089363021 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113701898 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078121771 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08655026 seconds)
    (260/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.149610197 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111500144 seconds)
    (262/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068782268 seconds)
    (263/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13585977 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094272314 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11138084 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.159150516 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121564452 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06693284 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217752847 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119054766 seconds)
    (271/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0966282 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117925389 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067166781 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117325007 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069465425 seconds)
    (276/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077835338 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090368526 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.197448267 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223425176 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155126826 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.092103952 seconds)
    (282/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068683807 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117992549 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166219518 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111019948 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084871472 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120326433 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067932766 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174104091 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111065689 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101208259 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117180157 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068187555 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21696655 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068860445 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111052048 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085515917 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067346027 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.136491814 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116517251 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111764512 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111321352 seconds)
    (303/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089043549 seconds)
    (304/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.092259255 seconds)
    (305/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093996849 seconds)
    (306/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.09197407 seconds)
    (307/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069569679 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101561561 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.091936939 seconds)
  done (took 39.883422208 seconds)
done (took 40.784630686 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101568279 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149842998 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095842436 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137076277 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124194045 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092256127 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119741878 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097650341 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125817305 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125604243 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099096694 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093893351 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097441892 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122375039 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096782834 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140019397 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125184097 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094993907 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119973689 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086677169 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121417221 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086023966 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113778561 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070414136 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12319097 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094220019 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118519074 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119666667 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087630975 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110558434 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090929353 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117598592 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087703008 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125493855 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094203748 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119493371 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096486139 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.1221473 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088525085 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11249125 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117881519 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088200074 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117057411 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096132113 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11658605 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093830287 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119609149 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100065433 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141515273 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115549301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095880854 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121553276 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09661029 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119039499 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091778244 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12108404 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092398298 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141373579 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119729514 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092901032 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121523779 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095685978 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119834046 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094629457 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123813878 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12118542 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09934739 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11715862 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097586102 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116666897 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087054125 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121086652 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090539161 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11284414 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096601979 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123135694 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085492437 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118020788 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118305315 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093145694 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111039345 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090465929 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113152982 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093680638 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114550402 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071255922 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.09064223 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118656304 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110268032 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096941686 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117498102 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094677366 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112571844 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099333628 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112070955 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092591349 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112170991 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087447729 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114967585 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091051485 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112658946 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089785515 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122168559 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089059794 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118698576 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123439286 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087761113 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117086914 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087367353 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111214689 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103165263 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121737975 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088035745 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117655808 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08630561 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120643454 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086137704 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112830931 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086268246 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11268741 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092805198 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113425151 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090556132 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120412158 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125101543 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087569696 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115188554 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09064149 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111158448 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093647398 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.1112973 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087967664 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113317558 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078792329 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113764902 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088000338 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119145856 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091539268 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120128067 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089253083 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121978904 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092108401 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119309561 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093048241 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111861714 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074438777 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117945529 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09084687 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113614707 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08779105 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113445906 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087604925 seconds)
done (took 17.072777344 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088557963 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187052249 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152578776 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144175093 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108428486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113658051 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122280795 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119547144 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115410193 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144701566 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111117582 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133474797 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149207882 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087790747 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112502295 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092346147 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114397322 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10300833 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148174253 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134217748 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165746853 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086906636 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147857688 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137684244 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120954345 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115643057 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112928014 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092397522 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116566985 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103881681 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135136631 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09055361 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113912659 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135223717 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10550967 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121623444 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08738765 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120817978 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087167331 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114755409 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142434651 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110097478 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118471571 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117923808 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092786135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114407774 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089349132 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122303759 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099403017 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118282707 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127645272 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158139938 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09168701 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122565427 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087194365 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124360761 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121785744 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090513356 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11262426 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091234765 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112205214 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092100162 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128197498 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143334114 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093124753 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123125947 seconds)
  done (took 8.69627507 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105794825 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14039498 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.122720415 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133021485 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112164637 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089460499 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113566852 seconds)
  done (took 1.78359535 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089647623 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135325592 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112028061 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137921857 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132967293 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11068181 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12389751 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089237954 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13312324 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088665772 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135392557 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153420649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08957372 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122061786 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138487916 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09029572 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138238927 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088905158 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116870794 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11216923 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117478291 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134991694 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090563967 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114328914 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104110252 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115285367 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162489787 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094635772 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115678023 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093368926 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112614673 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167715022 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106140177 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127008927 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087702512 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130415172 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128799659 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087623092 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130082473 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093909543 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129956613 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089421658 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117182331 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086311773 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120997388 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12515872 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091086675 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114759383 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092387952 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136521064 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089949666 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128827629 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089465204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119941633 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090771842 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121192538 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123623835 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090961637 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135034734 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091546379 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131886404 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105354099 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129392056 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130070995 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091853064 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128587896 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102883752 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117752781 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090305707 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118007928 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131124928 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088179398 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115929161 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101485362 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115870644 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112859648 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139039846 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090572933 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126952053 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114780341 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090314581 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114379084 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112797207 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118624259 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08990024 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120295958 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092461905 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113207252 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088330324 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119262235 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087175011 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116886478 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091390143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116965133 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116291754 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10770113 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115746078 seconds)
  done (took 11.904584519 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091761005 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11543324 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092344426 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115204086 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091601945 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115756483 seconds)
  done (took 1.600235166 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115817241 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118807871 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103944779 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12250673 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157145117 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103992375 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131673175 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123989308 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107699851 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129405877 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130544743 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105788946 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137758535 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122446558 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105174698 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122279267 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104335799 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127188764 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128722698 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096967723 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137985502 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121759434 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09748199 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132912107 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118558196 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096811655 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126216827 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1032587 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128699351 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123815699 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097520431 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118981598 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096651905 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125506882 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130819884 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096657187 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121679857 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119789874 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101574926 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119300621 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105783147 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123364432 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127186599 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094253372 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124295505 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122237657 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095146493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126240512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.105082136 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121137141 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120124492 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096629378 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119257656 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094817343 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122501481 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124429478 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095664054 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131441074 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096038672 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123697385 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118559727 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095002948 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124795572 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118929711 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105879362 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119890156 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096844117 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123052 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123212862 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09748426 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.1203156 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092879866 seconds)
  done (took 9.301000884 seconds)
done (took 34.247710267 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690361411 seconds)
  done (took 1.668519529 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.714927291 seconds)
  done (took 1.695032471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.131444627 seconds)
  done (took 18.109695328 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50501244 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59160099 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.890142621 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183113808 seconds)
  done (took 3.14789052 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.954931154 seconds)
  done (took 1.951031071 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297930056 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259928466 seconds)
  done (took 1.54056188 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.775227566 seconds)
  done (took 1.76499409 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.371945201 seconds)
  done (took 2.355319607 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333882424 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18549357 seconds)
  done (took 1.513878875 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548306927 seconds)
  done (took 1.542319117 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.210573161 seconds)
  done (took 8.211270086 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26905251 seconds)
  done (took 1.277860991 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302675415 seconds)
  done (took 1.303820588 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.559460088 seconds)
  done (took 4.561713281 seconds)
done (took 51.632439903 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100076695 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12822951 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1027927 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124548676 seconds)
  done (took 1.451117987 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101856716 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122417632 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101859525 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12157625 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126819916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096681765 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123542608 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101581575 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121961453 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097006469 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121854616 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120558488 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099757584 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123296306 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093797159 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125482558 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099485293 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12321387 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124245628 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097225695 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119681188 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098944849 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125373996 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094498198 seconds)
  done (took 3.687475203 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101456306 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119686813 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097656646 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118476784 seconds)
  done (took 1.447939625 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10120347 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142987323 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13914829 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101019598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144157289 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135979395 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093092753 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116668262 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09560419 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125114628 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091461859 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150849239 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137879522 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099470865 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128609308 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088718972 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118971385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137267855 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101095011 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126963519 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094724103 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126294179 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090753031 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141723425 seconds)
  done (took 3.835379835 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170118174 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128621358 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13933242 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095589268 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161785439 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141222902 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08850743 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141641251 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087897662 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133383869 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118172959 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133746489 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130335983 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088785766 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115354375 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088135487 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131182399 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12982732 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092666276 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127978588 seconds)
  done (took 3.456980117 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098508621 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118503754 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088996257 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11667476 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099879987 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121613625 seconds)
  done (took 1.656526231 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091464726 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115301924 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090368526 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115201532 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094388891 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115686447 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0887864 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115243195 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08988713 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115340691 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09015491 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113885176 seconds)
  done (took 2.247617673 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.465174512 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092946027 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120982297 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114022315 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097673494 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115179126 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103145215 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119496043 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140459682 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089715741 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114774944 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092014017 seconds)
  done (took 2.676943358 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235046603 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126086955 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288843576 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369093671 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157977769 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179022454 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282429023 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164100682 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22779874 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16836257 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203164863 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225938699 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152825255 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191102253 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139908516 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146262039 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206481949 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249271037 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155141696 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208804702 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228751518 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167620187 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181220574 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152391522 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139326134 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173128181 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09455118 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132128018 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235882325 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176546606 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217100416 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162777595 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147454906 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211318386 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254570459 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223196767 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286441803 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135977448 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151325719 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169102607 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267404394 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13937884 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204978011 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157074517 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133374197 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192222677 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193057606 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178196439 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153350633 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112591763 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222777093 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241036741 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193071822 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138836251 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303473054 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150418552 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175759085 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222475696 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224257848 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228878286 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188542936 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12231087 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189189975 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218857193 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187099136 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174885119 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181959755 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148953866 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230837048 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190221522 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166571399 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22109377 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18621752 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14242852 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171898133 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174389825 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173521699 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25900286 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185928308 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122946474 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17053158 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151767758 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133425219 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168914256 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125372597 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241098895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116933887 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16475299 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247169292 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160627092 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160469279 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203984709 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232459853 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148280813 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08422086 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155504268 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156933958 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195643268 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141792551 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160221497 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163995811 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131610197 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186156721 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12476068 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185719997 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091637438 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201650125 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185085416 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100101392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161974659 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153290131 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151071794 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174763681 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227966395 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142430261 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107375311 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238226353 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180180096 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152340031 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180613877 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203472875 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145894001 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151777522 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19873137 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245965364 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141340817 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203251956 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158280915 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136312129 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132616662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183247661 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155975887 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162294513 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106979191 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211253096 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207297598 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126563579 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1379945 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19474424 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134143598 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104452064 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190065077 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121521674 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139861681 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154126185 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154267097 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183672525 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178235939 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155600004 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165503402 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154231726 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254588394 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143887009 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152784302 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150052482 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094843955 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220144898 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200729053 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131761381 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205465084 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173949967 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23297002 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171008617 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136030253 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178064681 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103496751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122283967 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19422431 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168435499 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161471027 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.226771995 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201471672 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.209065102 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185382479 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174660855 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173674292 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167480863 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158919889 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140389772 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162108297 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174025234 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123344242 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118964862 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134605397 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149906075 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144679068 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106421521 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226088102 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171064088 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219052853 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160558264 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123175554 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210350389 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102561734 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174030198 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206955791 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120836833 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.228359308 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195905184 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216926842 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11761196 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231249633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09354774 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126598026 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144738568 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171344244 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13406719 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109148595 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165860961 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209541011 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183507995 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177421034 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240400257 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174257566 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191693209 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122801345 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140672333 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213938287 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178945097 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193320082 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117503477 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150892118 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177973278 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159934262 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256940114 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168858955 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177790403 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237898693 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152420827 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131859632 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12514566 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224146326 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156707091 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180202431 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149305367 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142396021 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162155593 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106285157 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161180731 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213800463 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1635157 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190089712 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152696915 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184810833 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129984371 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163915003 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16148273 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166300729 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081528239 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203259614 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205453309 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150726103 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169168325 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218188624 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105254399 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309644648 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244415882 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195751801 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13857873 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156467781 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163112671 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165598262 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172106629 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17987089 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160517632 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188998585 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160465411 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13867207 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14198595 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150239275 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123579921 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132770996 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150283654 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176310545 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1415282 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185961935 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164377331 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16011042 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200938031 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124328942 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146388353 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152435599 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216943623 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213264341 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212067086 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151644918 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181830964 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236362669 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098445457 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133747 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134595563 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178943472 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108261495 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223508234 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189408893 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233252298 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183165863 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22463374 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113185807 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121773262 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15835091 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175744805 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210609582 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152292853 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161533552 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234180425 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.147715074 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105317435 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179249589 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318376675 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120202471 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227919551 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079549379 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283160267 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125897318 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133914267 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16507039 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208697463 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138110912 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191331791 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17340755 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172947296 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167231594 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151536536 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192502782 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245230378 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201836059 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209918369 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104889107 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15735019 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177511281 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223254411 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158042437 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112465824 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234417124 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19735104 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224508379 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115570044 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172964272 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169826266 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158481475 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217860692 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10733964 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236729524 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135855518 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19531887 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155701076 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147096137 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177525378 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216174303 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114488144 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217289504 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183799322 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135829582 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105889996 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198296497 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179792806 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158288353 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099285498 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210261006 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09858508 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223062409 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23116809 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137529293 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156914271 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148459821 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107658531 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15597773 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187421235 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113427541 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165962674 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203987795 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136882854 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192146896 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232582132 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16964442 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175613834 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145641378 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693841008 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133015487 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196580756 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161908609 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236442172 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150158631 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174061982 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159625606 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16926568 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197089327 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161517896 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233500849 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193366455 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.209039393 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105105153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15943621 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192266198 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117933866 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152949424 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170200907 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161442152 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154960095 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.18022523 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200763808 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107592809 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141374656 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199648455 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161128792 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212074243 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180352744 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110624666 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175069193 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217193492 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134151473 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182627504 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237291247 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11467107 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153842931 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135883397 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158747798 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262236609 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097457451 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236148263 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187094295 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160743414 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170790742 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149111456 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222402823 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159073275 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188100071 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148578318 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162335424 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15760456 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111378915 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13214238 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157043527 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168682164 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150524585 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160271476 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141895837 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222076917 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095704729 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146771429 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291600465 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221418211 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215567089 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138018598 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136674279 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164969716 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153308783 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181092052 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180008584 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137278907 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109119142 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138343226 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160068814 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114049875 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1579665 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198681937 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167401643 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239246816 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108402004 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281317416 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141801048 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156820358 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088124244 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133411226 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152855053 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147067677 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161205545 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194296924 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264586744 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149050059 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105704099 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151392121 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127850779 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136437833 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138361155 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192368359 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178822639 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146630774 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081835799 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158385577 seconds)
  done (took 83.9190424 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164393365 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13401789 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147307994 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201683538 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177373379 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270448096 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210368447 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254752804 seconds)
  done (took 2.658518303 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093782945 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147196949 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158355733 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134470443 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09162548 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120235712 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346583153 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134213504 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116722136 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121119592 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174260946 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093515505 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554754677 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090802029 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120143734 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108738938 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091577744 seconds)
  done (took 3.791112506 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478600107 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.727769151 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512540289 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097827816 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.244338218 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113570848 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.841665657 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198190934 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115385874 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.489185819 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.77540743 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159796846 seconds)
  done (took 18.856180336 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099250061 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122258696 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107980098 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137066144 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095768177 seconds)
  done (took 1.670019701 seconds)
done (took 132.350385227 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104808735 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405778148 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07191816 seconds)
  done (took 1.615402653 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108145909 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138677332 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108413676 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136675654 seconds)
  done (took 1.606110918 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097919429 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128056194 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109515326 seconds)
  done (took 1.444760249 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32511601 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192349336 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164630572 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106182606 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130484052 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103317503 seconds)
  done (took 1.452138877 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097385165 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128313808 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098016664 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130277081 seconds)
  done (took 1.56795057 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094887835 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074818722 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104323819 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07489589 seconds)
  done (took 1.458675258 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114158412 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133120825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105287391 seconds)
  done (took 1.466332415 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.131589303 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139660707 seconds)
  done (took 1.386585772 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10653403 seconds)
  done (took 1.214724292 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119147647 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170437902 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191465904 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166197814 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231142276 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166198701 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141271132 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115070931 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.1319288 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144869084 seconds)
  done (took 2.690198711 seconds)
done (took 17.795193965 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103639229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519823435 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413932875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117361199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723340153 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380921265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.074445444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14687181 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166544959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093772478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140155093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672500585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029007816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.471905317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986491698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.401094504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678610758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121140284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120396886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095200615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.054738438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091725054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122801702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092633908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704860755 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427075332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095687593 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375297045 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092734013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127570018 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383630355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124399615 seconds)
  done (took 17.254578017 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095979036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175231866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099067776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138379525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124094182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094542456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125488867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093603884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179912282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123687236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111212978 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122494568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126245308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095290328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142709023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092082802 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125849626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092928286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12176715 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122157196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111756746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120473166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095118664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122323686 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094181326 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136571539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122344188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093550006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121569989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098629549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129185214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094439768 seconds)
  done (took 4.857050199 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14036104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184266641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130011701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12793987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168992936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124392686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199937073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117961837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184089299 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123276432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140181621 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092013828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15813254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123476823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114687973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122644662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096935701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122639604 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09274395 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123945989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141568567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093344581 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123470597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09362039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124427405 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108294345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124573146 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12140855 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093879227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128029113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100868649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124543705 seconds)
  done (took 5.186868048 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097713612 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126559492 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110093197 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13995886 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096387884 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126800114 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097671725 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125247332 seconds)
  done (took 2.040516732 seconds)
done (took 30.449018287 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112152217 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128266534 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107117656 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136305376 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104081017 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133984628 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092383188 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135898534 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135573477 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102431348 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138671805 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092034898 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123260448 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092317415 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136646548 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097716969 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133648027 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102540415 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135446613 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133362165 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095572155 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134393917 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103515339 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134139881 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104152935 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134074882 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13884822 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099591662 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124278283 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094413152 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125310376 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104507025 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125195634 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105236425 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127921691 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097918474 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124507857 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094203739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134127683 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133623469 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100487272 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134197602 seconds)
  done (took 6.05598661 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108497835 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141341809 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105842267 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081101453 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118471828 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081313738 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139028519 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079364436 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110907223 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108693978 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074137887 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107892302 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078674454 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102489052 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077498697 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076245826 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110175069 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076728105 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076471024 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107339487 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080106819 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073335415 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110162132 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078904534 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075070406 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110432006 seconds)
  done (took 3.614584576 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100939987 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137839903 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112681979 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18542495 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162740324 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100152009 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13376671 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140409271 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109345149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121331106 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096654711 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150642891 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111315136 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129597858 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092156044 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138535592 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136469509 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094749737 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128384015 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113324892 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140121046 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102703323 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143964202 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133329706 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093067274 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123979795 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09692245 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136006959 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097657247 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132570485 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097897258 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126531166 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12343958 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104228381 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12723616 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094184098 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14304555 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103612416 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131437543 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092814185 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126669514 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12327118 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114426541 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168999451 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09242524 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13286419 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099504355 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133140451 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122127239 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111773945 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132689222 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092440735 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126498337 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091397538 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123310982 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107362297 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125102249 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095090644 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132116861 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125363187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10552704 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12667285 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108771551 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123367 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100891258 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122541426 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093220814 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121412713 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115363874 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124871161 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163763245 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093766263 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.1245857 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101914213 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139802861 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129827566 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092696571 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13920804 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102676374 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126729585 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102858853 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126489299 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095175326 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141093927 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124647622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095214245 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122938177 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099831082 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126237865 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094742855 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137896719 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092790994 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127357473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110803881 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123692867 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123379685 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100531304 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127569305 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092982235 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13680791 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099360637 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124720228 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133015551 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094215265 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125953857 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104802774 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12813786 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092097805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128141873 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09941703 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125118311 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094340055 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12582001 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094670807 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133361706 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099625156 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128189219 seconds)
  done (took 14.942718485 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229574115 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21638835 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239833253 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261700469 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137114374 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114293229 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213771831 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156772703 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124401433 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161512943 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163208505 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183763949 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140393479 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181127461 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141493889 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122163075 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111888803 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165326688 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215869745 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.29280498 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113070428 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133156594 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16300643 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163230071 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107390966 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133321803 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140452548 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105608344 seconds)
  done (took 5.77578164 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108632404 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157284042 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097801774 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146344426 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150189288 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092598983 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128175582 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094301805 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136451851 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136419406 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093161492 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130827642 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100160211 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132607923 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123950546 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103293687 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133929058 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095197983 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127450002 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097399783 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131469907 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102094787 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12797769 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092463996 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133127233 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123154007 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086983039 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142832473 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093159334 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145438581 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122592538 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100615961 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134392106 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093770532 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124012705 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094577244 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12558749 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09492412 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126154099 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091193724 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122650594 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077343355 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122902743 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107038131 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129053443 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079585544 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130224706 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129868594 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095058493 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12190116 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096142201 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125590224 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097670182 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131604871 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099431101 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125020048 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09703201 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.1162984 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099859914 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126593842 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084829983 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121648363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098881213 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119261334 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102312815 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129637482 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093264767 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126856747 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098001771 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.1310868 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095975107 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127279963 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091515663 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126740626 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09665802 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129084327 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097178089 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12297709 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094090563 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124902779 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07624328 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124773944 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074581632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127950758 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092161794 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123283375 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095525575 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131339289 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138144077 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096133866 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132959165 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094561077 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122973094 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09771729 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114060484 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097229091 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139779938 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142270106 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094585513 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12183193 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107924185 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127200266 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093293724 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107170626 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102501628 seconds)
  done (took 13.045287089 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129238097 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155592855 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095751842 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14429719 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157134507 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158755719 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100774926 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132076574 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095506288 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143534572 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093647744 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13288066 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097371862 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138697014 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158301585 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102973645 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127209249 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108119599 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13396109 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171270165 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111488634 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14397053 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108750123 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125623231 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099675099 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142130332 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163332679 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107484854 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137748677 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143656725 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109034783 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163208447 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113328775 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128873087 seconds)
  done (took 5.533281734 seconds)
done (took 50.086170095 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.239606943 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.449169841 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.216089315 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.196950174 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.260207554 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.244810654 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.231312432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.21892068 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.282529984 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.219403617 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.469410119 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.866917519 seconds)
done (took 59.043496681 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.292198276 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.350140136 seconds)
    (2/2) benchmarking "String"...
    done (took 1.480854802 seconds)
  done (took 3.975018858 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.569147409 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.167541026 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.476111482 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.215889702 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.216406919 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.509246597 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.876219217 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.570629988 seconds)
  done (took 28.175106634 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.217386386 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.623952158 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.099300325 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.09433819 seconds)
  done (took 19.180084866 seconds)
done (took 61.341851954 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.198147389 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.239537479 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230036461 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.196112777 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.355801446 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.237475332 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.544292429 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.24771429 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.239382208 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.204064993 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.237606264 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.216859296 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.232449859 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.585336874 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.227132687 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.217213304 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.271639472 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.768508021 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62814473 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.232455675 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.220529126 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.277097083 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.231236562 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.219282422 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.258232296 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.217857108 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.229468152 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.227652861 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.873269366 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.217173207 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.240879713 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.760175873 seconds)
  done (took 191.428021405 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.219433447 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.279897601 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.349849374 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.256598038 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.900182783 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.417078038 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342681085 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.965681098 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.237106434 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.234194008 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.558861917 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.21923859 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.618464333 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.190935574 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.225888396 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.222527725 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.51717869 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.665269749 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236266014 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.492534866 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.241952462 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.41561225 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.330481934 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.574231431 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.230511742 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234418755 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.258449375 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.250117844 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.413106726 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.453672505 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.251036913 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.273045104 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.864681674 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.077048768 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.227707176 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233406187 seconds)
  done (took 151.625118933 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.532413876 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.219635614 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.218424904 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219314735 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.253133994 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.220018796 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.81790952 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802617863 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.722024534 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.398057344 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28522571 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562472347 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.224470233 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316459134 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.232749085 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.220952005 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.235597278 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.263281429 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225732571 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22082048 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799730124 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.233050571 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.426997115 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.226102619 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220414939 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253881284 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611871702 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220880147 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254589134 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.555042473 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.271400202 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.219944465 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221545732 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.644714981 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.643667577 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.223382399 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335681033 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.223147733 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255427063 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.222090834 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.503385397 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221912402 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.221111819 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.224975886 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935025688 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.227135892 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.822167985 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226335145 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.231370715 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.227023308 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223958276 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.996092731 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.995371089 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.243726284 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220405924 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.220954834 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.221895325 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222688082 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.22524212 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.25582374 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.103135668 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.319381462 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.240937171 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.223062355 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.226860475 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256302861 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.223578752 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.410170606 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22379103 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.377862572 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.296138424 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.328761999 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803752003 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224150751 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322626238 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346198313 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223516371 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.22386963 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.223297212 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.223820355 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337153613 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.2238481 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659352907 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229304348 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226088689 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.284490952 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323108014 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.223721112 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.651195678 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.228034844 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.223661329 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050493791 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32610188 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.224943462 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.224384475 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224721621 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.662086817 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806312969 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.512255703 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.229620309 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.126604878 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.229545267 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.678382919 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7994476 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.952561878 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.229422756 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339014074 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.230031478 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.226585454 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.22509375 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.255513465 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.244440909 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.284692615 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.225153049 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.625372255 seconds)
  done (took 350.906738616 seconds)
done (took 696.643757629 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.883509575 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.880170499 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.991821142 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.867408347 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.835393201 seconds)
  done (took 10.611580537 seconds)
done (took 11.769781539 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.417984223 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41742746 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290014499 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418417587 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255419245 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437294767 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397065174 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.246583397 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.329484441 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.312070546 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33110667 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.281586958 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254063054 seconds)
  done (took 18.542189574 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.552588398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545268904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290258028 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554114018 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265824826 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557037977 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.437731924 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.447306023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447211072 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261290149 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239650348 seconds)
  done (took 16.754093017 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557601189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.554510871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294851467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553954802 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269275183 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558957418 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435926399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.448845939 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.446842797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260563323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240876513 seconds)
  done (took 16.777224034 seconds)
done (took 53.232955221 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.237491216 seconds)
  done (took 2.393014369 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.273094153 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.438685207 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.25498998 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.241231883 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.239765855 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.238871688 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.242395023 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.237938735 seconds)
  done (took 11.323742001 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.234099241 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.234121217 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.234426868 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.237001641 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.234022961 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.237830593 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.234399847 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.234523871 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.232937516 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.23433199 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.237126437 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.236484558 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.237699277 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.238655621 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238015038 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.238149707 seconds)
  done (took 20.930717558 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.236733344 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.235244356 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.235123717 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.235348758 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.234568497 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.234961754 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.236680162 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.235527867 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.235347637 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.235560351 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.235086546 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.236079226 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.236886679 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.235525867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.236609881 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.23771616 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.234652132 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.236279892 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.240567389 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.23600437 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.236943298 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.236248972 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.236645726 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.23653769 seconds)
  done (took 30.826697936 seconds)
done (took 66.636564865 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.482525174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.036165296 seconds)
  done (took 9.676722254 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.239430823 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.239470766 seconds)
  done (took 3.638430756 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.239268285 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.238144442 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.239875299 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.239853944 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.239075066 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23910301 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.239740604 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.239078669 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.240114045 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.238899163 seconds)
  done (took 13.552157257 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.239435915 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.240105248 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.237225078 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.240055541 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.239601624 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.237874711 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.24072855 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.240728763 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.241091889 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.23814733 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.240529855 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.238165346 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.241142021 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.239817492 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.24001233 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.239307373 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.237900997 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.238521119 seconds)
  done (took 23.469303471 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.240094293 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241422389 seconds)
  done (took 3.641254197 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.238894929 seconds)
    (2/7) benchmarking "second"...
    done (took 1.238632885 seconds)
    (3/7) benchmarking "month"...
    done (took 1.238277494 seconds)
    (4/7) benchmarking "year"...
    done (took 1.239521132 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.238783125 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.238626727 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.239498706 seconds)
  done (took 9.832940125 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.242903202 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.416640759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.49699514 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.833181028 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.242952583 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.245857518 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088831043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.245519798 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.248468183 seconds)
  done (took 14.222375277 seconds)
done (took 79.197340202 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.277363546 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.255207504 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.474638533 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.251496885 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.253140322 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.579440913 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.292428323 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.366723971 seconds)
done (took 37.916743644 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.243342752 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.986987145 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.993578378 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.236069433 seconds)
  done (took 11.37756382 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.229585474 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.208340727 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.230151792 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.262545342 seconds)
  done (took 18.092544111 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.295650777 seconds)
    (2/2) benchmarking "read"...
    done (took 1.573115264 seconds)
  done (took 5.030346205 seconds)
done (took 41.910338628 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244258423 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.242532786 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.243751413 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.239867065 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.243390978 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.240914774 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.241483129 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.241108366 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.243441651 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.243870831 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.24487873 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.243730642 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243994851 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241466656 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240862964 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244281803 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.241213031 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241778135 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.242535749 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24216422 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.242760388 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243758778 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.242392163 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.24180271 seconds)
  done (took 30.985372506 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.244992293 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.243315823 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.245960965 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.244960532 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.241193847 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.245854424 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.245381757 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.241866663 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246363484 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.245389146 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243517934 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.243213994 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.246212371 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.243624443 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245542882 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.243914112 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.245859078 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24344243 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246537044 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.243382235 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.246215127 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242703615 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.243475154 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246724004 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.24370253 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244559314 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247621268 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.24531414 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24680469 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.244363977 seconds)
  done (took 38.506164664 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.25222406 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.254193935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.247431145 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.246884119 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.24627399 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.247081758 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.247371491 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.248298011 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.247574703 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.247741562 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.24658858 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.247417747 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.247600511 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.247340476 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.247481731 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.247442749 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.249025837 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.247256603 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.247666206 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.247608933 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.248291477 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.247579707 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.248046828 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.248639208 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.248106648 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.248669702 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.248129532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.248718644 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.24930317 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.247605523 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.248829837 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.248947546 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.24902208 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.249754111 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.250325748 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.248848632 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.253003708 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.255803816 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.248678652 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.24932947 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.248983339 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.249863789 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.249336874 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.248366277 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.249755529 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.248250309 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.249995293 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.248401442 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.249317351 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.249929326 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.248844494 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.24890513 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.249455782 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24975033 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.24922492 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.249348732 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.250427873 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.249911146 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.249200906 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.249310293 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.250067652 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.250038535 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.250306691 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.250210165 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.251015519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.249517385 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.249807936 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.250033189 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.250127078 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.250394632 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.251195236 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.251373249 seconds)
  done (took 91.104593299 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.251379981 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.249004803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.24730853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.249400055 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248519409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250263646 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247596125 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250367293 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248804054 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250972996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250624048 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248884523 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249734144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252707803 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251411369 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.249286628 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252358758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248033624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.25173928 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252174785 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25232113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.250077314 seconds)
  done (took 28.672547893 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252732105 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254544057 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.251127121 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2516074 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250111209 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252870913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.252874525 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253198927 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258442176 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250568046 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250378193 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252737779 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250095674 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25009281 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250126171 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251818165 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252667847 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251536266 seconds)
  done (took 23.708682833 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.250936763 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.25147541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.253707295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.250506403 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.252221224 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253761944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251450398 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254106324 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.253924734 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.251514225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.254740213 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253500768 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.254281456 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251041157 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253470479 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251260541 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.254751431 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252360609 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254611534 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252607931 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25020704 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253624137 seconds)
  done (took 28.732177872 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254244327 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.254542819 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.252334337 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.252366854 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.252435516 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255717714 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.254404816 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.253201279 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.255075486 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.254621762 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252839855 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.256257968 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.25510711 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255010967 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.251897493 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252514267 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257061105 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254795337 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255999805 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.254744033 seconds)
  done (took 26.259552782 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257212108 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257259757 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257615478 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25744866 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257286739 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.257313233 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257618271 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257283499 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258057215 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25916509 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258241142 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257917099 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259005407 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258031604 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25843953 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259163192 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258003269 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259040203 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258254846 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259217534 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258182155 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258959361 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25859246 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258783152 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259048453 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25897832 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258711434 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258440636 seconds)
  done (took 36.407249364 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258702602 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258296432 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.255516211 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.255070427 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.255004645 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.254960753 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.25612868 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.255248425 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258647912 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254761828 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.258303077 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.258362696 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25853199 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.258112564 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257820089 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.258904038 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258835971 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.256224977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256711991 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257074003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257700272 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258542221 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.258694605 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257133761 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257094997 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.259157784 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257264191 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257455668 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260558721 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257249508 seconds)
  done (took 38.899638727 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.278354476 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277480859 seconds)
  done (took 3.733695109 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.258302599 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260428112 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.259257029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258694511 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257830777 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260647223 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260300564 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257548225 seconds)
  done (took 11.251243637 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.259564402 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.261152007 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26070806 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.260255998 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.260765276 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.261055063 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267327996 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.281957389 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.261617907 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.261411654 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.268622737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.268317935 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.263070145 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262345176 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.260173031 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261926249 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.261462561 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.2614458 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.263306697 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.26268816 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262453907 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264033046 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26387414 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.259880598 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.264297427 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.272337237 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.285939089 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.263136101 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26193142 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.266161855 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.261654502 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.260005627 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.262637497 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.263614383 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.26437488 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.26340059 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270786454 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281727466 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.268762169 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285985213 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263561264 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.261545869 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.264242244 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.264802211 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264660215 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.263424434 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.265829367 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.261646316 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.263171429 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.267422267 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.270373912 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263769322 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.263040292 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268067406 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.263975745 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27067311 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.284751889 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.268579788 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.274392688 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.274593877 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.296991195 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.290443768 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26583678 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.265462998 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27544825 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.288378804 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271140221 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283457423 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.262482566 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.265778119 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.270485148 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.296887055 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.292055024 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.266283477 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266770917 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.267154547 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265454671 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265437159 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272196967 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.288595235 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.265380504 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266863765 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275588036 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288184855 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.266202241 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.26634814 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.266397396 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.267699352 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.267837952 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275776479 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.286968051 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.267149568 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.264784985 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.266093515 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.267160393 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.267701628 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.265455204 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268005593 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.264784997 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.268981663 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267195416 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271800353 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.27529262 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267833988 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269544525 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.273083282 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.288682514 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266865788 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.274894933 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.268020132 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267817549 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.270526492 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273161173 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.265723751 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27008143 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.276298019 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.270613858 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.268411334 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.268308744 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.26918797 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278215615 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.292554413 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.268156464 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.268572743 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.272498685 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.280725705 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26984071 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.272754765 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.268789471 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.266744726 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.266464427 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.270598043 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.269153873 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.268736162 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269826737 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26951422 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.266009493 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.269318113 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.269883783 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270250643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.270149767 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.270005971 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.272061518 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.27231194 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.269307477 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.271397139 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.276260794 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.28997264 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.271958878 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.269952545 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.267772846 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270883345 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.271306208 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.271373623 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.271756427 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271469439 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.270979289 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.270575321 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271768413 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.271536942 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271172785 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.272479099 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276263115 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.271572353 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.274305094 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.269910459 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.269349022 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.271779141 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.272891957 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.270572204 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.27300216 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.271876837 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.276475701 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.28098317 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.273972589 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.273032076 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.275311649 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272479002 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272864606 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273389192 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.275607141 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.280269211 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.272162657 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.279345102 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.294597857 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273625053 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.274606908 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.273757234 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.271906556 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273716692 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.276921383 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.28093184 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285327624 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297747492 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.27482926 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27796127 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.275258917 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.277604882 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.277111113 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.27478504 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.275948742 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275168209 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275119586 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274840992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.275810449 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.274309319 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.275289716 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.275027559 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.274307291 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.275264241 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275287512 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.274628975 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27633394 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.272807562 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274812479 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275330867 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.273446582 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.273158937 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.274643568 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.274825636 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.275899043 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.276539313 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.281865887 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.273793423 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276477587 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276328326 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.27580823 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.27549294 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.275767562 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276832286 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.275370649 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281683715 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.295379327 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.276397403 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282471761 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.296430312 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.275403679 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.279039609 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.275638445 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.274006055 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.278750188 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.285557322 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.276941794 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.277034764 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.278334889 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277513984 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278157945 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.282069541 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.294969332 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.275703423 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.277530393 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.27861533 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.274214916 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.277592125 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.276899702 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.277690658 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279247686 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278049831 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.279719042 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277865803 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.278463477 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.27905923 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.279362323 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281902562 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.285958788 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.283803891 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.277756959 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.28047213 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.28002492 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.283856192 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.279011775 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.279582788 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.279155098 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291627811 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.304999296 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284968601 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.300546799 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.279958583 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285036055 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.30088887 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.284332832 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279481457 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27988722 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.279095516 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.279041702 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.277473111 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280243052 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.279846889 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281341546 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.280767043 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.283694147 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.28102319 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.280263724 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.279845835 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.279923061 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.280921634 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.280683669 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.281349158 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.282990435 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280991424 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.280487315 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.281085637 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287100899 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301480638 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.280501032 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.280788849 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.280828903 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.279841446 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.28090339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.2817802 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.285089222 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.289681401 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.284758702 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.289815313 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.282493329 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290187996 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.280929899 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.284888158 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28981674 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.279869901 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.281059442 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.282704655 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.282054504 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289027671 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.303055957 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.283877076 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.287541608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282999637 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.283560574 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.283292913 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.282730016 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283535484 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.282200037 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290598854 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.303025713 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.286283884 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283842171 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.280678754 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.283726365 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.283302484 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.2823958 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286257593 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.284119831 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.283677774 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.283792909 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.282708593 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.284044933 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.283736774 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.284214072 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.281216311 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.282824193 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289912475 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.306308608 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288322741 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.284637466 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.290654694 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307099751 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291543803 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.304195064 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.284957842 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.285580972 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.285201448 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.286215164 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.283200397 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.285175345 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.284514759 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.285813913 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289083467 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.284472261 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.287029265 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.285460596 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.284752556 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.286234662 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295167203 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309643215 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.287048238 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290083687 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.28316574 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.288274106 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.289731024 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.286597444 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.284950096 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.28906515 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295678194 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294289102 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.286974346 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.286919493 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287692503 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286893775 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.286442249 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.287448253 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.286391666 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.287785585 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.288252963 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.286283398 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288484092 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.28718175 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.286306687 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288286755 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.287532659 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.29662266 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.310091631 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.287569787 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285627157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.289036892 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.287522035 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.287444462 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.28721413 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288162357 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288076992 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.289152036 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29513866 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.295655225 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.290403264 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.287617606 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.289338089 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.288519472 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.289241444 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289326716 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.288839764 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288686609 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.288307231 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.288768068 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.290964798 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.287751273 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.288808134 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.289514691 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288989331 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291592419 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.295511344 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288391755 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.286414484 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.288818923 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289424541 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.288286571 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.289760967 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.297622858 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.315052682 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.300207096 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.297522825 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.294802449 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.291447333 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292505028 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.298548265 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.289885657 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.290693655 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.291168308 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.289659197 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.290283545 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.29374061 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290557968 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.296731101 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.312391083 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.290091156 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.296772867 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.310098736 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289612369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.292006896 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.294610548 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.290675199 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.289175921 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.291523477 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.290355614 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296324506 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.312594699 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291256057 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292283188 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.289718822 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.292444203 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295902852 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291620006 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.292418881 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.288932338 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.292064857 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292033017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2922212 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.290025899 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.290310543 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.291489668 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.293990439 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.299595171 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.288759238 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293186967 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.291798659 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.291421672 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292197975 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293175166 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.290737336 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.290438923 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.292104902 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293675025 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.291759172 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294976632 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.292547286 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.293536057 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.294837776 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293613412 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.296375631 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.303147282 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.301433099 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.292193168 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.293304893 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.293797735 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.295543055 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293068611 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.293960652 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294499256 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.29527568 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.294898043 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294727079 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.295756394 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.296828979 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308917035 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.313804689 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29505646 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.295048895 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296287245 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.294801233 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.292286733 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.294523144 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.296934386 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.297402305 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.30298349 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.29530511 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301288885 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.314707917 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.296463385 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.299276556 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.297516941 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.30205936 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.297813017 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295619802 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.295469109 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.300317612 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.312170215 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296408901 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305726215 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3250324 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.315795546 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.297056949 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.296233587 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29359876 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.29578161 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.297367453 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.296745769 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.296747093 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29646646 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.297614749 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.297218383 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.301605362 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.298285251 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.299180208 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.296766729 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.295991206 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.298299266 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.293776393 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.296247781 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.297143951 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.297420016 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.298245793 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.297837183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.297673458 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.310149877 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.326193735 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.297510686 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.297948539 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.29508751 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.299961732 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.299907867 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308609719 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.305883442 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.298517175 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.298499178 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.29853149 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298060209 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29826604 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.299507266 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.297949661 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298406246 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.296732185 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.311822293 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.326334676 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.302681251 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.298196289 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.298957883 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.300002952 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299932676 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299934264 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299991461 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.299120998 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.302416225 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303516717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.299298963 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.299011105 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.303831839 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.307747604 seconds)
  done (took 766.111408057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.297457382 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296266908 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297102904 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298108871 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298015266 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297812208 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296141018 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297393921 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298458025 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298026785 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296783745 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297429994 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297755458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297930406 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298695958 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297739103 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298524526 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.299225418 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297476374 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297379948 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297849838 seconds)
  done (took 28.464782869 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.300103791 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.299030204 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299141506 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301096285 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.299231031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.301144326 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29932966 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301094858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302531388 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299413236 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.301125496 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302348365 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.298859774 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.299398075 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299665657 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30249486 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.302004096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298509588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.302586453 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299764594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301952547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.300588316 seconds)
  done (took 29.827159676 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.302309765 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.302942353 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.30210285 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.300126161 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.30439377 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.299456977 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.303311409 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.301817551 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.301725314 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.303883036 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.302115298 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.303905872 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.310774686 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.308566391 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.304639803 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.303973936 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.448170605 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.303669763 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.303543495 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.3032283 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.301688601 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.308288735 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.322875023 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.301559557 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.30372982 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.303955194 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.306197952 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.303853432 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.303242024 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.304457327 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.308424605 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.305303058 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.30426912 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.306751717 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.303624514 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.305412096 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.307837996 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.305842827 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.302170681 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.303915784 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.314002602 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.326026645 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.305128544 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.310064227 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.328338709 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.305737681 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.308157882 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.314292627 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.302546317 seconds)
  done (took 65.359965702 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.305057516 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.305881317 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.302877278 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305645511 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.305987025 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.305875836 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.305672735 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.305230525 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.302912642 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.30305872 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.307065421 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.304063974 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303361527 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.306697472 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.305629711 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.30405702 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.305397177 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.303544329 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.30354169 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.303153008 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.304068559 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.307485762 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.307081541 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.305264216 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.307232535 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.306836936 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.305125107 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.306358592 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.305018525 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.304560094 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.307226254 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.307726062 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.308642951 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.306232021 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.307153783 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.307942445 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.307990267 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.30625003 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.307174909 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.305775176 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.309173142 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.308009077 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.308829982 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.307751703 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304361553 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.305653982 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.305788693 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.305844992 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.306277172 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.308981093 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30868796 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.306158582 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.308495631 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.30584405 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.308866728 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.310002677 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.305859639 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.306125787 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.308477263 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.306893814 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.306881393 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.309324347 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.307186096 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.309781488 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.309526809 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.307474606 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.306347301 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308774529 seconds)
  done (took 90.058732778 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30902483 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.309355969 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308101953 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308714617 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309286979 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.308725655 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.308615022 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.309063807 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308688313 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.309110857 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309787135 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30856569 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.30851925 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.310268601 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.31048809 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.308898249 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.31069785 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309942716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.309881665 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309938291 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.309813342 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.309369527 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.310267667 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.31100036 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.31083397 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.30944339 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.311285786 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.310255006 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310826065 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.310760789 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.311054757 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.311404902 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310696308 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.310731883 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.310583697 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.310448102 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311924319 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311146342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.310633298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.311748526 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312605985 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311219878 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.311492638 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.31328286 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312897127 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.312331494 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.312236015 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.311692206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.312814976 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.312732952 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.312520961 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312348036 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313278036 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.312198135 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.313296549 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.312843115 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313961818 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312543446 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312867127 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.313515861 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.313224351 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.313918574 seconds)
  done (took 82.504313913 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313670426 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313758392 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.311786416 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.311338374 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.315013013 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31088907 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.314598594 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.314146439 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.313520776 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.314419902 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314649429 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311647001 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312329302 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313230062 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310594239 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311418859 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311140291 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312273047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31476869 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.311329498 seconds)
  done (took 27.48423664 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.311499107 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314254728 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.312330432 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312001975 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.313873867 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312721532 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.314641532 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314819991 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312155015 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31445972 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315377676 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315317359 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312722432 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31346814 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31511937 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.313675507 seconds)
  done (took 22.247057793 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.312783591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.315712788 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.315455657 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.315446427 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.3136979 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.314177963 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.3158645 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.313658864 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.312891882 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.316587558 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.315681946 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.316209981 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.316258168 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.315836052 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.31290374 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.316785928 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.313553056 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.313764357 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.317313129 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.317062199 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.315814692 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.314298844 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.317649382 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.317274029 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.314428105 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.315193663 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.314706587 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.315539666 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.315301815 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.318155142 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.314014006 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.315322105 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.314015542 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.315008071 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.317908255 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.315307609 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.316895186 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.317586347 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.317044491 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.318088091 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.317669758 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.315895455 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.318062388 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.317982758 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.315918232 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.317796499 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.314971948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.316118106 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.314373994 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.316262055 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.318639691 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.318549861 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.3177225 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31917635 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.31815035 seconds)
  done (took 73.60909593 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318708545 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.318253204 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.316616915 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.31894914 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319971167 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.316242424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.318903785 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.318201423 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317339477 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.318768244 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317333717 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320880149 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316217273 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319606049 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.31820325 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319450784 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.317739461 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317738437 seconds)
  done (took 24.961609164 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.31720275 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.318301346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.320464152 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.317331769 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.317166377 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32143548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316769051 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.319793651 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321463585 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31730872 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31762649 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.320857137 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320052295 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.320760368 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.318441599 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318912669 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.323120145 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321292269 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.318391838 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319403951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.321817032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321083326 seconds)
  done (took 30.262221024 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.319847966 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.319902063 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.320152003 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.336144488 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.340145586 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.344121974 seconds)
  done (took 9.21403376 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32926004 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321862259 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317882873 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322841055 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321704222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319581792 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319114431 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318766944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322550172 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321031767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317970834 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322346084 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322883202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319215228 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321303907 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321448021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319365937 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320137024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32033615 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322451347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318865435 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321753702 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320079786 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319898523 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32105438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318327115 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321022668 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320071643 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319372817 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322599118 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322184947 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319681335 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322324204 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319520615 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32294473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32322583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320462849 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323234596 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323159849 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320800238 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.323141844 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321368442 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322056461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319910375 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321904103 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320160768 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320191425 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319479885 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319914797 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323250188 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322266507 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320434424 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32313263 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323149987 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323302616 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323606377 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321839653 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320217618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322987219 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321376322 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321196139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323476989 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323217126 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320065017 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321795521 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322167261 seconds)
  done (took 88.467009291 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320223738 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320613988 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321249106 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320027593 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319499955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321101919 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319635535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321864475 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320095764 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320882401 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324691357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320135316 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319435779 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320837032 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320072304 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320020948 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320144126 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320099246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320226929 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322750301 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3196514 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320365881 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321010602 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319606356 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321521562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32260514 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322796462 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320030484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32026611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320936752 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321405595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320398954 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321750856 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321451011 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319802611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318578066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32094356 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319741854 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319901654 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322786883 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320591995 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324034314 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319591645 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319619873 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320882351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321429539 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320057587 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320248682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321153185 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319913775 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321315221 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321012733 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321832299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320122579 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321756374 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319259215 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320986073 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321266504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321449821 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323747662 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320632454 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321035723 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322948232 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321201877 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321535954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320748706 seconds)
  done (took 88.414859378 seconds)
done (took 1786.416183059 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.369616492 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.40187477 seconds)
  done (took 14.007288882 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.486430148 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.440149312 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.323781802 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.376538921 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.320833537 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.346054838 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.331128839 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322866173 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.321906334 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.322425937 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321977014 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.510233663 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.338237812 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.322858354 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.321698576 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.416739552 seconds)
  done (took 43.062202191 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350468239 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.327645104 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.445922348 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.34627867 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.35186926 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.523559238 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.381695402 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.328371616 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.508873994 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371735365 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.98627644 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.352455691 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.328347383 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.506840072 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346279057 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.52409203 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.58549612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.991457786 seconds)
  done (took 30.795986584 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.808421527 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.325022871 seconds)
  done (took 9.371636989 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.342444433 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.348080204 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.360343035 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.355857415 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.369270764 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.377802475 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.331990756 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.382471787 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.346204099 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.372478826 seconds)
  done (took 64.827604529 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.347824854 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327373466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330349553 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327683431 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.323353095 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.31981897 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.327782446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.320385178 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.296617997 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.459601164 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329923866 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.336959883 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.348838714 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.328668129 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.326114355 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365750829 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.528011315 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.328772657 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32561998 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.335524063 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.329259587 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.412235847 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372026777 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.32807361 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.461707744 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.266393377 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.332209165 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335950226 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.513473755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32898102 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.326770238 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.329704486 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.330556379 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.947987772 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.771129303 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.339265218 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.352616935 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337604412 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.325343463 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.484301386 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328604287 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335464489 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.320084926 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.77549187 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.477767353 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.444701104 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.619112626 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.345141047 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.329843353 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.39259493 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.327268428 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.329005519 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357968587 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.093851898 seconds)
  done (took 111.878506372 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.348195638 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.724085886 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490765413 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.343636595 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.114311284 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.066770025 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.338544447 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.622135738 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.364835472 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321213029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.605905574 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846121928 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.33987741 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.328863942 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.653391573 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.322292296 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320692443 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.137113862 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.337677544 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.324545195 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83152474 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321019767 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.322140853 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.443871801 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.360175432 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.791254014 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.77009612 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.723800603 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.340312663 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.322936364 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805173253 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.343649164 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.341272355 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321637569 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.592047529 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693804077 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.686002445 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.34263902 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343375819 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.323633727 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331373615 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785385847 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.694409744 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.340215004 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323516432 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790563375 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.340852797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.333229819 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.322560787 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531985571 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.969277235 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.323958678 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.757012554 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.324410732 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.700309373 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364386818 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.356989176 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820141471 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.341830783 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.428005813 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.385438328 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323143404 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323866506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327068098 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326260167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68444958 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717709377 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.327436958 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.682973023 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818466261 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.34120367 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867280498 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.228047327 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.334506701 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.376988847 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325522982 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.019253944 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833011007 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.38169589 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32519395 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671545381 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.344893439 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.613081222 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.340760299 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.34124797 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845015765 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.3304325 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.337742951 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.325858876 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.343017837 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.086892892 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.330055474 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.617136416 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.383592861 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32674501 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.326881595 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.340269471 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327223522 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.327836919 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.328381795 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867892599 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.347533306 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.306415035 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349341582 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328629948 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327269381 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.328164647 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.329717222 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.552895383 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.902890202 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.350772673 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328006989 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.327840815 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.349181997 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.450431864 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.331758144 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.64968486 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.347202649 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326514247 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.348942995 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106104633 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.379488357 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328343749 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.344377062 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.238659443 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.547015192 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.347237685 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.328736406 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327901823 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.352890256 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.617771448 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.347972346 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.407315242 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.335254613 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049636706 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.363780774 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.32984568 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.625311162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.327864732 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.244594115 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.349392537 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329921274 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616368359 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602243425 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.616494535 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.331475211 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.347344838 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.046101944 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.354182609 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477151425 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35068664 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315823274 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528484738 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.494458507 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.330241844 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.965800996 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.332333637 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55061487 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331491697 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.650380036 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837717065 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.346679765 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339014271 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.048780012 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.032837326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.059657275 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.33551461 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615413579 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.30617923 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.812812846 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.331646055 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332299091 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.916434353 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.332481987 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337528142 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.331526757 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.331982059 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.469499312 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503467575 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.528081247 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332224709 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795478631 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382943695 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.335265237 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331082182 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331512164 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.678412351 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.384247644 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.332438931 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.332866479 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.333028392 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.337494466 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820630756 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.198140237 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.333979409 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486410628 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98183778 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.349290838 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.334576602 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.045638796 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.549894954 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.891568823 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.404467051 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.655760376 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.353831879 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.371730699 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.04435056 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.415126556 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820383293 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352529228 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.334597637 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94604097 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.350717446 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.425942753 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.334264328 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.336075368 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884666855 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.351778935 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.335681943 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.627827721 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.352563807 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588562245 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.334914877 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35527358 seconds)
  done (took 1110.586662183 seconds)
done (took 1385.772575823 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.334833128 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33650259 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.323992055 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.34098024 seconds)
  done (took 26.589132636 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345053355 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.343081935 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.344164012 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341824611 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345686127 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342620711 seconds)
  done (took 9.317567464 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.43736509 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336191494 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.343152738 seconds)
  done (took 19.371816285 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.553388429 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.705448811 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.714396539 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.695838783 seconds)
  done (took 10.927197435 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.3425199 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.343413092 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.342798984 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346064526 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.34711265 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.348385977 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.345007061 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.345160597 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.348772421 seconds)
  done (took 13.363905875 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.474072377 seconds)
done (took 86.303476845 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.318411395 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.132250057 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.337422239 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.481891315 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.337654009 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.320595281 seconds)
    (7/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.320243776 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.208812126 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.300401839 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.59381965 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.620275718 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.093587476 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.379788852 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.25083115 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365191458 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.440089015 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.320403057 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.331430566 seconds)
    (19/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.969978158 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.378947186 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.344128006 seconds)
    (22/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.195066976 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.342746925 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.441794436 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.811401046 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.363882622 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.406213922 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.394107861 seconds)
    (29/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373900822 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.46292973 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.338157514 seconds)
    (32/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.524731895 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.320072853 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.323867171 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.469698554 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.319826834 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.717011056 seconds)
    (38/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.231561332 seconds)
    (39/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.886486287 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.574823262 seconds)
    (41/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.840009639 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.128607572 seconds)
    (43/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.42387977 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.017403252 seconds)
    (45/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.551606733 seconds)
    (46/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.35961106 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.468266866 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.126261173 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.321167147 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.320567453 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.60359969 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.349072424 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.367436345 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.320530404 seconds)
    (55/309) benchmarking ("sort", Float32, false)...
    done (took 5.359146133 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.326246196 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.479286563 seconds)
    (58/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.36584686 seconds)
    (59/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.388277362 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.445802313 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398609142 seconds)
    (62/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.343158428 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.775695092 seconds)
    (64/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.35478487 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.32237714 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.330566225 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.344097068 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.153911271 seconds)
    (69/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.417893417 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.560009817 seconds)
    (71/309) benchmarking ("sort", Int8, false)...
    done (took 4.425359827 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.942908276 seconds)
    (73/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.319559562 seconds)
    (74/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.716130712 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.351549683 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204808757 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.322469226 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.577133893 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.3384098 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.575473599 seconds)
    (81/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.802365388 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.024987117 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.454255014 seconds)
    (84/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.448401839 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.280745381 seconds)
    (86/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.381459306 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.747581953 seconds)
    (88/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.011535071 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.574814275 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.755997039 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.36014057 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.23710091 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.198088199 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.006325494 seconds)
    (95/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.277464504 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.90043271 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.342998348 seconds)
    (98/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.711138052 seconds)
    (99/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.826456702 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.497313864 seconds)
    (101/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.180259453 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.34142405 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.443157585 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.446571058 seconds)
    (105/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.725453512 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.583331796 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.378303573 seconds)
    (108/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.35977916 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.340992648 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.62825159 seconds)
    (111/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.437946366 seconds)
    (112/309) benchmarking ("sort", Bool, false)...
    done (took 1.864446245 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.154533075 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.381928277 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.98338293 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.615921633 seconds)
    (117/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370418831 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.110994248 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600337978 seconds)
    (120/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399893118 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.348623919 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.408297851 seconds)
    (123/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.322279875 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.359607903 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.355342402 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.026213721 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.340302464 seconds)
    (128/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.441877977 seconds)
    (129/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.339915585 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.244839786 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.413516435 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.732835302 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.32012556 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.36799927 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.356494775 seconds)
    (136/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.700714459 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.320902512 seconds)
    (138/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.626018257 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.359671749 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101942561 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365256429 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.383967527 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.424404692 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.321776944 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.337719058 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.878188731 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.33939526 seconds)
    (148/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.703898632 seconds)
    (149/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.428486193 seconds)
    (150/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.079113809 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.559539632 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.367285598 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.328262034 seconds)
    (154/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.373355009 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.343868642 seconds)
    (156/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.367308556 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.320414112 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.866634143 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.818434139 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.45826517 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.715726282 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.842229009 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.323778028 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.342857197 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.34230123 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352568455 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.367482531 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.426826749 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.59207388 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.623954356 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.923961822 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.338423871 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.544987967 seconds)
    (174/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.322132709 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.358240241 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.346884474 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 5.629601903 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.791460824 seconds)
    (179/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.442675966 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.405778549 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.348059638 seconds)
    (182/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.324446363 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.368290603 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.342525635 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.428578015 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.323415283 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.329934622 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 6.361648115 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.362609863 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.428184859 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.863328793 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.34171228 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384823536 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.33549853 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.560797674 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507383016 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.288277372 seconds)
    (198/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.376514512 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.351336265 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.328038662 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.209328595 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.632276252 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.326723456 seconds)
    (204/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.191369608 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.337157726 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408851316 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.324227639 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.326432215 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.359637366 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.344391963 seconds)
    (211/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.463672033 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.733039819 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.052416909 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.387871648 seconds)
    (215/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.182871793 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.782528043 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.40889031 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.360854494 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.983740355 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.551739014 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.263083936 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.325351984 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.334516006 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.698077099 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.377083269 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.122960971 seconds)
    (227/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.409897467 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.344333034 seconds)
    (229/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.658620553 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369344184 seconds)
    (231/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.400671894 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.771538291 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.46710646 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.747041326 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.368340932 seconds)
    (236/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.352674313 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.362554206 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.275832966 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.386547766 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.741688319 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.785335441 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.344977312 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.120717037 seconds)
    (244/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.818867634 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.592531928 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.724275641 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.347196664 seconds)
    (248/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.375983225 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.632590826 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.33473215 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.392223307 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432076271 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.449967859 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.955692191 seconds)
    (255/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.882062278 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.357694622 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.41215007 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.669374153 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.564838165 seconds)
    (260/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.662050228 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.452122022 seconds)
    (262/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.724352529 seconds)
    (263/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.447981796 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.374511231 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.435094818 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.226264998 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.736216421 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.329683397 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.356983626 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.358483547 seconds)
    (271/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.358186505 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.456596868 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.826013814 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.37424761 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.409274361 seconds)
    (276/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.329679479 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.626006589 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.348939591 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.350906551 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.446167958 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.976085472 seconds)
    (282/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.004176107 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.438780101 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.34992648 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.43248533 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.463503252 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.222778059 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.931518631 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.452452298 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758959072 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.076516509 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.409867809 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.331231553 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.351165574 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.188301575 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.154660182 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.952116667 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.364157887 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.379464965 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.374025886 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.878110746 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.00144959 seconds)
    (303/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.474653848 seconds)
    (304/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.534915855 seconds)
    (305/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.395076492 seconds)
    (306/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.990289413 seconds)
    (307/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.940016815 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.775974587 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.108515942 seconds)
  done (took 1042.373667386 seconds)
done (took 1043.639458084 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.387818008 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38428525 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.366011373 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.385810497 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.474230243 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.385709449 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.375062091 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.366835049 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.411117466 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.415515678 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.363486985 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.385238862 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.365898887 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364594219 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367176226 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379960635 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.413890083 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.365393767 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.381383564 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.375408871 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.38442566 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.36588422 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.415058702 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.387663153 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.370231825 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.368627836 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.367764247 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.386004141 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.477734422 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.370291348 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.369441885 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.377389889 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.41229514 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.363426161 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.362287835 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.387412103 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.379856141 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.376742123 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370021804 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.397309591 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.822385106 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.382911775 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.369316245 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.367963308 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.367238386 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372721777 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.369403581 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.374727963 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381398411 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382256648 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.810152975 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.401443213 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.372202956 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.369290646 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380967424 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.368435002 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.371454622 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387413707 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.387037798 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386502557 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.398400097 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.373091062 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.37106652 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.385162294 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.376413179 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.845350037 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.383224903 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.373818501 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.822248477 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.392366591 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.847002841 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397503242 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.371464159 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.383107461 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40230696 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.415513622 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.364008715 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.369042773 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.376421493 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.365706717 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.381439694 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383890234 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.376765222 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.371016981 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387049267 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.391163807 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.381302251 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.371131295 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379513107 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.388056464 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.376258796 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.381209423 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.374528512 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.364639475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382717941 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.373733436 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.37368668 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.37414874 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.377549583 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.381351379 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.838800156 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414606199 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.366593306 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.366410093 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.370384627 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.383517147 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.823906128 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.391333774 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.392685789 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.417347892 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.372723061 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.402288294 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.375999368 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390946879 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.380686316 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.374469913 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.366327051 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.403682156 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.815942429 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.406687413 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.373102918 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.370510579 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389384278 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.374870378 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.370265951 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.420295685 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.373553733 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385650824 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.493131419 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.384560848 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.402255489 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.372074623 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.376903903 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393465003 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391660224 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.405478458 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.377090424 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389568854 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.38903857 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.370533061 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.385014507 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.383804738 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.375205136 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.378671185 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.370027599 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.395196194 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387233295 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38973694 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.396316722 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.494804496 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.372609793 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.406683183 seconds)
done (took 231.292685618 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429979261 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.368993952 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.459748151 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.370473599 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.467943635 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.467088804 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.365228279 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365530485 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366396828 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.745951697 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.366854553 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.368254722 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.35934852 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.365218101 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.448665265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368232957 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.366712795 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.708203551 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367876972 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.43954767 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.368306344 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.367031525 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369820085 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749882108 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363611448 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.365855248 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440427837 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.37193068 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.715006407 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.365139765 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.369303272 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.715282681 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.457923484 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386981895 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.380557785 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376414032 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470380762 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.387843217 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451826397 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450079559 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.459759194 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408487649 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.363756097 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.364583469 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.371201551 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370409883 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369352919 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396274804 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.365772353 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368402767 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.710119629 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.381771331 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.380727613 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368156234 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369480676 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.392290172 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.370115298 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.372883931 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460543882 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.3719682 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.432260852 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.750650382 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.7555306 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.371725068 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.371900485 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.371413505 seconds)
  done (took 150.840091124 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436021207 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.443489729 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.482920372 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.392004011 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.424115132 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.488660965 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.38836754 seconds)
  done (took 11.335454156 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.378100845 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3747336 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422285176 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422404388 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.374045314 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.519892164 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375441373 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.384371976 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.371013092 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425847278 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375941579 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374056442 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380099666 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.368378004 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422216177 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.385972936 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487911535 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.374874939 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.376305618 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.53114213 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371519469 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.383161871 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.426572168 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.385833455 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.376161068 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.380881997 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.939546884 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374759524 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374156876 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.375084165 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371388157 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.411953664 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375165098 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.372863403 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3730635 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489398597 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376055975 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373015706 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.37481569 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.369839702 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.376058643 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375215699 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.378501944 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.375051928 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377224184 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.399594553 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.376711199 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.378096158 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.377061792 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.37811883 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.426000632 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.379485517 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373968749 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.375117023 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.431447921 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383742054 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.37718075 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.374667023 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375814712 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375286154 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533527571 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.425091776 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.377886724 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.424186416 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378794474 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.379024302 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.378129024 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376496841 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431160703 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377883696 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423965484 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.376581093 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.533946021 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.400629388 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380408707 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.380063795 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.379623104 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381178829 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.381256841 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.386166435 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.377572155 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.381514622 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.384113847 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378060215 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376353114 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.481275024 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.489220972 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.378142878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390994028 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.385905998 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.375016021 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.432585748 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.380438252 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.376580688 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4300047 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.494382245 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.432968992 seconds)
  done (took 157.40128642 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382912359 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.387716934 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.380404947 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.395492117 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.378721446 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379391442 seconds)
  done (took 9.593756368 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.381545671 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38160753 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.380058079 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.382413493 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379853223 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382398188 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38017395 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382410966 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384509407 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.37968121 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.378843453 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.381056856 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381550394 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381552344 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376975703 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379980926 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381647334 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377309627 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.381148452 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38115352 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.475019671 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.381288694 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381432796 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.3834356 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.38435825 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381508997 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388092193 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381535833 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.381950446 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.385137186 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.404309076 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.378137428 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382281576 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386172467 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.384774881 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.382059413 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384153488 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.379881111 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379063428 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.380714642 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38261649 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381477088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.38310509 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383774994 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38455839 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386109687 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.386949326 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389505542 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.38336099 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.382120003 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384752775 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.383130843 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382927819 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.383092948 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.384075351 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405274299 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388538562 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383528407 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384058664 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.384852605 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.38504729 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383552064 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385322686 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386606223 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.388903626 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.38338816 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.384294543 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388942101 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82858001 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38432244 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384710245 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.383337123 seconds)
  done (took 102.44779245 seconds)
done (took 432.903143371 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.852653965 seconds)
  done (took 8.145020642 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.510217209 seconds)
  done (took 7.804288707 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.228096995 seconds)
  done (took 22.528309752 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.421752461 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.405654388 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.388503245 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.386877327 seconds)
  done (took 26.894968199 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.693094489 seconds)
  done (took 7.986451323 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.377452642 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.400618337 seconds)
  done (took 14.074460189 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.487901521 seconds)
  done (took 7.77978462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.963795253 seconds)
  done (took 8.263461424 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.400604274 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.391145551 seconds)
  done (took 14.355606232 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.357999842 seconds)
  done (took 7.650341889 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.661100919 seconds)
  done (took 8.955573021 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.377421846 seconds)
  done (took 7.673732932 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.420952859 seconds)
  done (took 7.712752019 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.654153216 seconds)
  done (took 9.945573563 seconds)
done (took 161.070303067 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.377797282 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.37633053 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.377593207 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.375635639 seconds)
  done (took 26.801468865 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418441488 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.417807287 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419564512 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427518725 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422419106 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427468192 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.41120685 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.409424726 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.429929317 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.421680757 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.420354653 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421194095 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418196122 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.410611375 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.421796935 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.420133581 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.430388985 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.419567597 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410404497 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.422160589 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385800928 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.429569921 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.422431556 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.38432548 seconds)
  done (took 35.315170816 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.909492425 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457433813 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540876597 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43922841 seconds)
  done (took 7.64048749 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435091172 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440469766 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.456193943 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492839223 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.517148505 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.447688351 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.410356047 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.409495181 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394503313 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.438973761 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.515447401 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.455961717 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531428316 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386400554 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572856352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.386524927 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.38583524 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.439246671 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.489916785 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.511956529 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.387597574 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439510367 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.445736619 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456679697 seconds)
  done (took 36.143117772 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.385780011 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.404560498 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.386546063 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.387288868 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.394467254 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.38662976 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.388635325 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388665428 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.388669988 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.394550628 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.38617036 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400062159 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.387465349 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.389995814 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.392331913 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.38974528 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393300724 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.387877173 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.389424745 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.393175505 seconds)
  done (took 29.112546984 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.380397835 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.233549713 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.732301389 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.638103242 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.381918332 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.387349442 seconds)
  done (took 28.050641651 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.458099037 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.618460553 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.386998605 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.753974528 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.847903581 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.40673992 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.389303166 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.632967691 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962903314 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.967346734 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.444532277 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456910039 seconds)
  done (took 20.626922255 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.392605744 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.388376774 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.392919177 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.404724231 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.443678198 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.411003208 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.396769174 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.384174342 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.453574434 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.465854494 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.414596493 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.447047025 seconds)
  done (took 38.294960932 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470505172 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429851782 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.347907171 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469176316 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104593035 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596191793 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409442874 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.830717784 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.393846615 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65644458 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398235378 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480851849 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640046758 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383263609 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394023293 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.391291787 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636685442 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869341306 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389819704 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.511163644 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417427074 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391056557 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.589745815 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.422600594 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597075811 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.52024329 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.690822081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.17244597 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693274839 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404147115 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397667216 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388197475 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658952551 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080790573 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510615085 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396652956 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397972946 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.017535544 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.367361103 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.435420788 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400168299 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397095838 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398191875 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389583609 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322463499 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38908885 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840142509 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400761485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.10002008 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386787362 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399944966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483108313 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.391362282 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.958057541 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455304683 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419904165 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.384062327 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480021098 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981239379 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.924235442 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407188193 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.330084928 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386469763 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.501807726 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052354078 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.5185889 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.392623903 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39464848 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323288623 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.465678111 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412491807 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536155531 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.411784845 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039994608 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105845259 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.424998825 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327568823 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930999176 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405580524 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.332912701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618060037 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166496426 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326582947 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.338021687 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324658433 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09031559 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397425941 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.774241934 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409909001 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855946837 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.408041183 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411438305 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414424942 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613351861 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.2686286 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390274903 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.3973203 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519999278 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412441159 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.835801936 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334104697 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.393810187 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649466417 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602022498 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392113883 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.406918145 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629097053 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399428519 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.413665933 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400592752 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.409851066 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.980900367 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429268279 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929787202 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417007281 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.170152497 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119021387 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406561964 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.500097518 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405597878 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648836 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.141822833 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275442965 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460701932 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394021977 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390034463 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.518393613 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992305341 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.273972041 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.390608803 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393630531 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.410249251 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.392391967 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33838231 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.391699273 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400214858 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.180333608 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615612223 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393326902 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677579045 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32911045 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542853658 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40491613 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.616184726 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.648324586 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.419597994 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653984511 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393104025 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401157786 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411302258 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413799339 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493370022 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4174247 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.394134817 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656319183 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399032111 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39855548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.528835422 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.185701866 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397961457 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.401878175 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397292224 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997648415 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395640937 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402371273 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284632022 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.407605011 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462267034 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401053492 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.406433295 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.284068353 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420337028 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401410731 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.401909442 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619052265 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405405877 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.539002759 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482344328 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.60069259 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001204376 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433019948 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.329541224 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.108398884 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.089265175 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396925031 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.596529375 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396415759 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406778039 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408051766 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396662664 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006959624 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423673381 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.448595166 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410805119 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408763012 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.400617942 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399538603 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.259573227 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97798739 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417043871 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.415002008 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54120333 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412724953 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332324887 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.91585511 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404387267 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399866726 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.173561648 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433246772 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.443772264 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888964325 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655620595 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408691064 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410594187 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.634895126 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.438415275 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.397549074 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413856355 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416296155 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.415769747 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432194151 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.41090492 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.523750649 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.768892357 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969111344 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135097853 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986324501 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390259041 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.420775244 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303319781 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845695815 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340070248 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.056411428 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594090879 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863276061 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352090297 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611694647 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.661810017 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212800467 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418829318 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627542964 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355820978 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.418101146 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420819981 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612266606 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436562174 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40080125 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337920131 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.6840083 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647446474 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412539113 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48681105 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847249986 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415020194 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.188073079 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.422464128 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.752841888 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602868803 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.956841148 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.789724342 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417429528 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417284256 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893236949 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412140398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928171362 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035067665 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42313869 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.618230376 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347457491 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.414098881 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.414291994 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.399246826 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.779637939 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.412231847 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.665105495 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41413365 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339432766 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406403198 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956247046 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.283670419 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408494112 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404071214 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14137912 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409303013 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712761638 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.414551661 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.264508331 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43471819 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339429168 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340250099 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.097608678 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410858629 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381393703 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900428546 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.423793596 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424786961 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4081509 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254947289 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661642533 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.419268679 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.004861824 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656880391 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408587252 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448230438 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.506668519 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42010672 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.395448191 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.289524564 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642791634 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43687711 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.657703955 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.394610192 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.308096446 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482382913 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644062261 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288506102 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406233205 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677351343 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.137602862 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.408307335 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132326191 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452753251 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408804607 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424189809 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407377092 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426373759 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499148529 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416513267 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.418965842 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.419800242 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585093607 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420222761 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417660469 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.422071984 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500375327 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.989624624 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.273576435 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.189874398 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011471674 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196344549 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047407623 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447289825 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408720232 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419609955 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341846304 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560276323 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935493302 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680599581 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538676637 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.407757226 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45006474 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419852268 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424780294 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627359359 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68671318 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380539405 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408699036 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218131109 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.295474637 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420382505 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620902423 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909329691 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967395298 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52643439 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410886631 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.861750464 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691554827 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.502621843 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41086976 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003716198 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.428097389 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.752664711 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.436677187 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413805925 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565492582 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421102459 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105779587 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.438847103 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.566081472 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.183865309 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.499947605 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673355627 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.908398832 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.419788688 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016479168 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.159873441 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678960798 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482284911 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42084114 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.522030334 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563605259 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.409946123 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311841972 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413709558 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257273167 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.121227339 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.422431187 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017119801 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701035649 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.410503538 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.414465625 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443476316 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.422699237 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635457454 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11427115 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637478714 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423370715 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41542532 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.982815423 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024406368 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450127308 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347125537 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.41657299 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671889294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671477283 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436546415 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.92705486 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.127488994 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963924012 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.386414387 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435623284 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418909411 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147650371 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022790256 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.304243853 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923391934 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.072640175 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422445433 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688095563 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41918661 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411935228 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690360896 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419253773 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.420072661 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425099193 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.019696596 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239150454 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.424592749 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.605621518 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.35876766 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.640939352 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42083295 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380299924 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414076648 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.599943468 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420896738 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546180545 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427550733 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.411987034 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425869096 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.147607145 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69764582 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.421582256 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.4081088 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.412441845 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424574092 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511933125 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66486776 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427241015 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.090370743 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.775801924 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67177313 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426645513 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.393608827 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.420615722 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417084338 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135057876 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.427276314 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413733435 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997668369 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.432570527 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.425778939 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420996917 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632257935 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630298599 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418133755 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435915506 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415968482 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447142234 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.317583977 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.184017084 seconds)
  done (took 1676.639435983 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466578229 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.439870985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.465642682 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.476380459 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429278343 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444211349 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.491051775 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.470154716 seconds)
  done (took 53.013505835 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.417585769 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.573828269 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.446318704 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.42035511 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.424776314 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.41680226 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.909318599 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.44912942 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426160302 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.428306118 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.431620856 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.4298566 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.085764733 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.424742875 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.434562243 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.421670756 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.424903857 seconds)
  done (took 66.902421768 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.419830966 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.651224155 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.449152261 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.428764196 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.743063787 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.437737056 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.589258974 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.452136507 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.419651017 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.549303182 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.090497468 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.461387512 seconds)
  done (took 81.024810217 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.426603015 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.42686153 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.429180551 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.429036338 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.428031049 seconds)
  done (took 8.471272513 seconds)
done (took 2109.339727056 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.689461642 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.127652914 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094478227 seconds)
  done (took 5.551683294 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.567432011 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.614362045 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.789981929 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.765258211 seconds)
  done (took 8.066432118 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.702724132 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.80465585 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.603749164 seconds)
  done (took 6.442223503 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.890942875 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.425324898 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.421853233 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.417820729 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.425295274 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.423470642 seconds)
  done (took 20.598574505 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42262124 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426953412 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.424442093 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.426562392 seconds)
  done (took 7.034734178 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.39964536 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.124697506 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.402851622 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.415211847 seconds)
  done (took 18.674903072 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.169614051 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.182717375 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.167562781 seconds)
  done (took 7.850999296 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.418014283 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.268239493 seconds)
  done (took 10.018394715 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.707654853 seconds)
  done (took 3.043475958 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.556255218 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.750175928 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.519773418 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.402730907 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.514829259 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.423239504 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.12357317 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.692481815 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.356341535 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.706346876 seconds)
  done (took 29.379446602 seconds)
done (took 135.42795237 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.36109988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.825985466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.627808219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.333866729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.656824501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.629553551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946287801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.301601942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.844322735 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.833367511 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.37756819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.655142947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.680988033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.826371994 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.680476787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.443972134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.666612771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.410097798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.063880306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.22704694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.946400574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.975657233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.210739596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.994304517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.665446265 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.578371439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.552871387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.445796907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.237530937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.577651161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.580860126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.395227515 seconds)
  done (took 195.888793212 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.422468732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.432851755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.424270816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.422082045 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.444044198 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.425221345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426521815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.45054327 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.434292461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.423234722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.442671504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.424145446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.441745628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.425362689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.425606834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442838782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434444209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423381689 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.441517811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43669112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.426769694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.441686067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427053793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.428815879 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.425227437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426070744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.425156392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.440126722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.435856229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.424236089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.425038196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424670319 seconds)
  done (took 207.133108099 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.426414355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443976543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.441492911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.425637926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425445599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.443210963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.427838918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.443688735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.442833728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424933187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.445473188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432726852 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.434078685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426280004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.426010955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.443098182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426286795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.428057115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.461909307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.426351739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429249508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427571113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.438080068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439228992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.426467436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.446207023 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.451359339 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.429098805 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.43279941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.428369201 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44553142 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428023664 seconds)
  done (took 207.257189922 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.631668149 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435113482 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.437508091 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.39593224 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439001664 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.435850536 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.435224459 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.629354411 seconds)
  done (took 15.180964655 seconds)
done (took 626.802638584 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.782737486 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.494440656 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.635216604 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.456347695 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.250744201 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.476734228 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.45881553 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.628350788 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.371236076 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.636099521 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.700631757 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.474332269 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.847542417 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455909213 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.71563286 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.556494303 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.372334132 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.505721847 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.776134273 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.015153449 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.7200411 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.934385112 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.649852894 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.363832977 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.865467553 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.931586585 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.222113842 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.361836257 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.475771367 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.786329963 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.18229257 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.478869119 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.520280623 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519215956 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.574961421 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.556487149 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.454692399 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515043367 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.662106019 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.701827404 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.012188114 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.187325763 seconds)
  done (took 96.63095178 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.422708121 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.423279848 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421110313 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.422496799 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.424132765 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.420042759 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.422282828 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.421323589 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.421433086 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.421630114 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.421159138 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.423133256 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.422589383 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.423735055 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.420523466 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.422150201 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.422858873 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.425139359 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.425711381 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.420986955 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.422612855 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.418821472 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.423564761 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.420889854 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.422817595 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.425056891 seconds)
  done (took 38.328355635 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.44174192 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.696234643 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.862118212 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.448262447 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.439153757 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.446250565 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.521252428 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.443662256 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.44615128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.44444993 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.614831443 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.445365473 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478310409 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.88791297 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.443752738 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.44465353 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.443333733 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.442844803 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.708893847 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45338865 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.54276638 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.444503073 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.522625265 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452128007 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464834858 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443384149 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.448258678 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.962377091 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.464119473 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.614657411 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.269798064 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.527229375 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.916080035 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.890747393 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.273307289 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.455703248 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444083539 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.620733954 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.446698266 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.445119495 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.524239668 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.443934274 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.868600178 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.06302652 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.462140233 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.447017958 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.982851206 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.640689485 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.697796229 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453044415 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.898450516 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.448022528 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447423365 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.445609213 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700377694 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.454659109 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.444554366 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.981111214 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.468778207 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.52650001 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.455924567 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.444316536 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.716158428 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.445045581 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.702287781 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445829731 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.452901705 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.469917527 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.871094403 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449346281 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.093690082 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.465400299 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.447295722 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.616047584 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.709654231 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.019598703 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.46895339 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71681973 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.935260688 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.544413805 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.450193656 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.953285755 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.54877284 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451134266 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.4508023 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.451211828 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.448720021 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496830064 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.52400632 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.01525298 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.097411857 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.004504638 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.548630145 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.459215844 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.449199345 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.986571367 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.468959646 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.448626102 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.872210011 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.089456011 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.464900115 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.456397241 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.092727957 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.468016883 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.528437123 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.462305961 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.879177209 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.449070525 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.501431801 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.449608931 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.455447369 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.473729854 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.532460607 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.459001391 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451442174 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.069334529 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.644845008 seconds)
  done (took 189.47415874 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.443646916 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.443017205 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.444235537 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.44096193 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.443688676 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.451166643 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.441302153 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.442729168 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.448204895 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.444276267 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.443435368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.443822719 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.442336087 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.44559091 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.45363168 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.449358761 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.056454399 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.443884616 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.442634511 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.462297565 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.250209534 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.445460014 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.454549779 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.443341006 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.4468468 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.445182735 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.450171575 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.446106719 seconds)
  done (took 155.262993839 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.449646393 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.034155435 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.470742528 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.586468688 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.472601489 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.450585412 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.585392423 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.510784868 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471050049 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.451416491 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.451185782 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.764065895 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.455053831 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.985262352 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.651128426 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.605358708 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.981277831 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.469906496 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450981063 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.450814929 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.588685976 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457017235 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.764255061 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.034894444 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.469920401 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.032939104 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437238779 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.455487053 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.451125669 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.039051663 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.470262247 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.764173524 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.532324906 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.522198923 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059233786 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.004008711 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00423498 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.609712191 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.461300661 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.453860573 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.453148653 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.438502398 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.04950804 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.477253958 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.454140977 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027321114 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.47308233 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.455841804 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.459429892 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.454752781 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514516095 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.534256565 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.788589711 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.046438689 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.548656603 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.467615889 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.589683146 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.83896724 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.457835939 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986625707 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.436382462 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.06092051 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.482401193 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.438471009 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.455521012 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.462084741 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.608995574 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.59701628 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.989631417 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.474759973 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.988649477 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.627881484 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.45870752 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.454447221 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.456072513 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.043842366 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.006820318 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.628241202 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.597160583 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.658612854 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.449199602 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.453168712 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.441930997 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.534633595 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.457596943 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.06208156 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.016237998 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.474113939 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.457014006 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458260071 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.457267087 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.638438444 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088133908 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.562821331 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979373547 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.798505773 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.785184494 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.460654503 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.514192774 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.475563009 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.782254006 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.466450794 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.514940659 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.905902219 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.783898111 seconds)
  done (took 173.179121328 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.707194874 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.71432565 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.548002257 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.591136819 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.068043451 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.040964082 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.757507032 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.600273956 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.570657064 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.724756563 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.656657866 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.553422634 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.632619829 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.541631675 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.19628228 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.547632953 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.572039456 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.601088036 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.570763708 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.519169992 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.124352394 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.757896897 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.631364676 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.380740906 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.557289487 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243588816 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.024750047 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.036519813 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.637230833 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.842951702 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.006305138 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.629016185 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.449911164 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.157911095 seconds)
  done (took 69.556218626 seconds)
done (took 723.783573839 seconds)
SAVING RESULT...
DONE!
