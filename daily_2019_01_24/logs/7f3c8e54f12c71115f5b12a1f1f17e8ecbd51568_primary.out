cset: moving following pidspec: 25437
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369784995 seconds)
loading group "string"... done (took 0.571355373 seconds)
loading group "linalg"... done (took 7.365997992 seconds)
loading group "parallel"... done (took 0.168623902 seconds)
loading group "find"... done (took 1.150415867 seconds)
loading group "tuple"... done (took 2.052762724 seconds)
loading group "dates"... done (took 1.306365733 seconds)
loading group "micro"... done (took 0.241145907 seconds)
loading group "io"... done (took 0.971588318 seconds)
loading group "scalar"... done (took 40.404231054 seconds)
loading group "sparse"... done (took 13.026072462 seconds)
loading group "broadcast"... done (took 1.072743965 seconds)
loading group "union"... done (took 14.46471448 seconds)
loading group "simd"... done (took 4.714859862 seconds)
loading group "random"... done (took 9.559406624 seconds)
loading group "problem"... done (took 1.995649755 seconds)
loading group "array"... done (took 22.39061036 seconds)
loading group "misc"... done (took 2.017948502 seconds)
loading group "sort"... done (took 3.421926897 seconds)
loading group "collection"... done (took 19.645625444 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572788634 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156554619 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149556983 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148635522 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199116614 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144555968 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160405754 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100449439 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.970852629 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180263679 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15484692 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.533421892 seconds)
done (took 5.204981666 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.216117753 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095112955 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104169171 seconds)
  done (took 0.874048626 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076687122 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14584247 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096799199 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078016081 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095465752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077355918 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094453924 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093284947 seconds)
  done (took 1.362970757 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086330586 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096987314 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0825976 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097546162 seconds)
  done (took 1.043428183 seconds)
done (took 4.263464535 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730011925 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271924385 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203490042 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.468528756 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196899677 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216291037 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687754687 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.384538623 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253085814 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10019985 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134443231 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392827457 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136954719 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682808154 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0896507 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124298645 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.195260106 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450361163 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082126137 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109139397 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116789623 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139961534 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128437275 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090021006 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186037197 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083974242 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19567059 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.1068196 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079530427 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275070795 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200513413 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678204995 seconds)
  done (took 10.911079853 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109226607 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13315025 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09688662 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136860646 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136496229 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100930326 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085518604 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096824417 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122705359 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177415382 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116123454 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137717953 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096816009 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083127737 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115746887 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24564224 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121316701 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100728976 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10205029 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088320013 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139418804 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114789459 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109057239 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094818162 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16780044 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222301643 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111637155 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12518344 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095938158 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112207047 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142387446 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144246224 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096284117 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081200511 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175179004 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125948122 seconds)
  done (took 5.157956542 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.121914602 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189781843 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121946167 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169193379 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080702329 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143474328 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09494626 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113266165 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25593603 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.18097377 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.499798534 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141867696 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098747747 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098938523 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08221453 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097199943 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.476917093 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15815194 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134564469 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095753207 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10505343 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099858171 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362514832 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07975341 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094990424 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081876441 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081971943 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16324262 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158691087 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081015323 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.22573095 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121928142 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081600766 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134263042 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204931224 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109259358 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133963324 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09592603 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079222714 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176087184 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104018334 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080383885 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121849443 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133588228 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134465042 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097930331 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080976591 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.197396191 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097534414 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095931797 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.951086899 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180564554 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.10526248 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096677604 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.310002243 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098844944 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096963105 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077199328 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.274606627 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195818508 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102568178 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099509739 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082410463 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097608357 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083995259 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385381084 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099794936 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.712830102 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084737699 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108492125 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083501525 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097362315 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104571296 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088568523 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116112675 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079932416 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095248505 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080805952 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098456242 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077591332 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098860103 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106405931 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215517982 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080131578 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097385926 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077291436 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116860712 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127195577 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083341237 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095398265 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129720366 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08253142 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09662632 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132908025 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080514045 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108459162 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09828094 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140825285 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081327449 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145290986 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095354612 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12561391 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098446901 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113370819 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11005816 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09460164 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081723113 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167958775 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095716963 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078287216 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097534391 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078464836 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098788086 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080695544 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110084014 seconds)
  done (took 22.774321907 seconds)
done (took 40.648067026 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323628905 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103291321 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102293322 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104957558 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101231571 seconds)
  done (took 1.498315163 seconds)
done (took 2.236245854 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.164223366 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11477335 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095166702 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12815297 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076984248 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.13285504 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130697397 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093923138 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132039581 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09311699 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126257797 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077111146 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092700626 seconds)
  done (took 2.218597702 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094504958 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113251775 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082478663 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110065709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075738219 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110234884 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091834704 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116946107 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108071295 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084400258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092060105 seconds)
  done (took 1.806153297 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094095141 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111245349 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082508189 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109136161 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07668027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109198528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092360377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114288511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108765985 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084794517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092410177 seconds)
  done (took 1.807255134 seconds)
done (took 6.556022052 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090432057 seconds)
  done (took 0.814747488 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926559258 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.625578614 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112480551 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149167462 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.318131718 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.17250538 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474276388 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127534021 seconds)
  done (took 10.842501103 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.142205313 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085974193 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098830875 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085193088 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101855767 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082869283 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098426258 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098648632 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081504806 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097986825 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085372258 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102505686 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102499544 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08544705 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100783547 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083497039 seconds)
  done (took 2.328467361 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118236643 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116814162 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104992623 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106152929 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085936075 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102631578 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104716188 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08652671 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100056143 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102976206 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091735254 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106793084 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103413624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080831111 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107437445 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108911869 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087374978 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106904542 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107905474 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091047261 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107026978 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096547379 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088012502 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105861538 seconds)
  done (took 3.26008301 seconds)
done (took 17.975270938 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156266402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107163111 seconds)
  done (took 0.997458239 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094374581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111609315 seconds)
  done (took 0.944462837 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096903142 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094286629 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12046577 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108989539 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079726756 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096825326 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120253242 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081723126 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098292235 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098766 seconds)
  done (took 1.738202309 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080853174 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10865756 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101305294 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094625616 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106586735 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094174307 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088051763 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099031496 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110923471 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078523231 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103246672 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115472785 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087391443 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117274703 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106692177 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100564059 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086468353 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100506188 seconds)
  done (took 2.52511259 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07887628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096861253 seconds)
  done (took 0.919089236 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079634006 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093557151 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080494087 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098028219 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096204209 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077693363 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095014009 seconds)
  done (took 1.362235303 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.432419581 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135729933 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2578051 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100216455 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10180451 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298497014 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098757286 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085452612 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105277648 seconds)
  done (took 2.418517102 seconds)
done (took 11.647190417 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091639138 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11387295 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110366274 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.458228072 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107348857 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096957547 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146111301 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.242753575 seconds)
done (took 2.117469505 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.141967752 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.57179808 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.430862663 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230887688 seconds)
  done (took 1.98332415 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400627169 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097797012 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082223838 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079527757 seconds)
  done (took 1.413577475 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078759232 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098776981 seconds)
  done (took 0.930112939 seconds)
done (took 5.222766583 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080114654 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098288894 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11094366 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095391708 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079719033 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09410375 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077504074 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096716192 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079281675 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096254508 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096234382 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080692732 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095740707 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080101818 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094591282 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078099136 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096528948 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078653081 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094862242 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077226184 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093724313 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079554359 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093230652 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076647067 seconds)
  done (took 2.91134136 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099375279 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097625974 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102404946 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084838254 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100846833 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085037131 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102936742 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097696071 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085617264 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100269989 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101856504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085822424 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101606182 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085858622 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101242958 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103518226 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087146428 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099621731 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084362207 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102729424 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103901291 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083253169 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102895046 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104135966 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086514674 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102937321 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084009228 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099741005 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103653035 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085400598 seconds)
  done (took 3.622562758 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084413429 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093327675 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077667545 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101635873 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077259646 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096284159 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076506163 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095359831 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078395522 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094330094 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078611517 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093780296 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077214391 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095271962 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078128557 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097534811 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110789134 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077639626 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094243096 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077657229 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098019787 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076688307 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094568342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077333232 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094147107 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07694796 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094865405 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077198362 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094510034 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076926834 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096997271 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080747434 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093707783 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100116356 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082173084 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093688862 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080970133 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093276319 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078076448 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093867424 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077683099 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093679341 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077535827 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100427602 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076919362 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097050064 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077674059 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095953869 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079422437 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098094141 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077074485 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094026828 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095992602 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078528853 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098211814 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077199635 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095185986 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077775439 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095054002 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077324285 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093772853 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076707915 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096937783 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078197649 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109131049 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084879481 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09485546 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095845613 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078600868 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097178945 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079458989 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109143216 seconds)
  done (took 7.105617891 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.129883555 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125274978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079409428 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096826407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075414008 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095245212 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082070484 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095156608 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09571953 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084601653 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094881404 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07962583 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096586511 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092836636 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095927964 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079749476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100952382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093105555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078636874 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097816811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078712844 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098930699 seconds)
  done (took 2.80770442 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20496604 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102920396 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14209401 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106604411 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082522551 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105113318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100639157 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085243333 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101269571 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083054078 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099435453 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101651862 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082766869 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100056641 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099497407 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083017668 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101687887 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083375358 seconds)
  done (took 2.625524479 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092172612 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098325764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097393955 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096879557 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097782824 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.192850181 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103172875 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106843229 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083110803 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097527702 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0894103 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099999293 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082988663 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097097311 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099756476 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080853602 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099945607 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081312645 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106264491 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104460197 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08640535 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10641251 seconds)
  done (took 2.964940897 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094914065 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099880151 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117337472 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082835652 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093991199 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079419054 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105329258 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081375214 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105735854 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102432481 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082858303 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098996633 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088149468 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100612583 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105250836 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083041925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102570042 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083573854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101422165 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079100885 seconds)
  done (took 2.651780803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102031077 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099802448 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098864576 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091239974 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099725732 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082779963 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108858795 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100033256 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082085727 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124238541 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100985599 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081847868 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109907546 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106107535 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098545545 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091346776 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110168602 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109537038 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084278937 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101323817 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126246986 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08361495 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110187814 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101903625 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083966273 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101828279 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101515573 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089648629 seconds)
  done (took 3.551646087 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080552893 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097800789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077895218 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095586667 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078565161 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095493454 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078193229 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095217673 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0812246 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095406707 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080757549 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097253891 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079991265 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097792257 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080184454 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097539427 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080493743 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095857267 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078108549 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095149873 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080135304 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098083553 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080691185 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095844722 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078584504 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097806781 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079041396 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096434386 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080901117 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09601813 seconds)
  done (took 3.415033112 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090659004 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106242876 seconds)
  done (took 0.964640315 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078118065 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114421175 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078232582 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103804624 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0856104 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099076572 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106921573 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085741774 seconds)
  done (took 1.520706353 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095651053 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109859067 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082508198 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111278452 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109345684 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097168962 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169873862 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100750674 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104921143 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078714542 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112823695 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080480805 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104813777 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081937562 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10505623 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087556335 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096675607 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105394351 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083767664 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098130612 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082918081 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109212535 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104009024 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083508669 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101108073 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092118228 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112508548 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100395793 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084806586 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106625421 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087224858 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093632814 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081123929 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100822008 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078596475 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108364961 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115818622 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084015802 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10865981 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10082888 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09188535 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094865954 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086350472 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107266162 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110926443 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084302384 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102681321 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079495258 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102487792 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086201631 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097544605 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083708563 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096625334 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108698874 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08758053 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113833363 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082906931 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102320928 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086522845 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106013522 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107601845 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086455073 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102710761 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084282542 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112758303 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087784057 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112142423 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095164701 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077624386 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098422888 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094062264 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124095428 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107344188 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085068476 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102027381 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081323326 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105216483 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103342055 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090532974 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10783229 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084526787 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107742235 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10953483 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084055657 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10482543 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092407348 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099279307 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104194854 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08193968 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118517082 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080427013 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098533032 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08026776 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111991631 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103307244 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082492287 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096983937 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088568355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093253349 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082109047 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102070743 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099863397 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094792753 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106878344 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107235873 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092584045 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107749605 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083452415 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103828431 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080116765 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102537395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100949511 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093631354 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096764179 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087478896 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103644195 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084602557 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110680993 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0999393 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083633704 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109188409 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088499214 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098769829 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078450611 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103397739 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082436374 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103353725 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109029246 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080355668 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095823992 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076549918 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104780159 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081546695 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102935049 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105503682 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088309404 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096601055 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08233486 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107657702 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11201671 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084907361 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103042618 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090759085 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103678341 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083114487 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109461659 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105142088 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083182448 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108936655 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085566065 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097707003 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088300546 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105905541 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100639556 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087283983 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10720211 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086807155 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102742159 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083795009 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108254538 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10396421 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083514764 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101926354 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082661718 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11299948 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104693005 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080405335 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097768924 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092790637 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099446295 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083588691 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101373947 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087856487 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104668082 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100558014 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084052439 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104302671 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096841583 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108206871 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104262203 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089977796 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112978627 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084628277 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104324295 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083533734 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103781376 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104366061 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094179965 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108500064 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089708835 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106442921 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098013216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090963733 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110556247 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083714105 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100806338 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082619511 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107503128 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109310349 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088878858 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103110111 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082672469 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10349937 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088528269 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105687752 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102756527 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084320587 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10778088 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083923795 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110318263 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104258371 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095310093 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10665805 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080272838 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106671377 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101972673 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090982469 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098832644 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082601499 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10163276 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087056359 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102078363 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088318394 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097055613 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092209075 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112143185 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104129494 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084902954 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103042285 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091401001 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103334891 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089035535 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10629903 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110134777 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095897336 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101936451 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08761981 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112636173 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103987961 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07867281 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109473858 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083778882 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102755559 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084603075 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101577636 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087972837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11255516 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111045664 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079028864 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105321835 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082945709 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102594808 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080682181 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107747217 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106792813 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08607232 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109402701 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085909637 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102898046 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106862742 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084049454 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104860774 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086833108 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107163334 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085819627 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107048584 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084021908 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107139455 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102940158 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083521434 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105324915 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085105092 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10283633 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090508783 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103530893 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085691549 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106115467 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104315155 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086348147 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104909724 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084472518 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10746175 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08552733 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104618573 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10607372 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080502795 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110899252 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084846005 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110753021 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085562302 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100079735 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090932123 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107283077 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108440209 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087472564 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105424312 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085884796 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10345506 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106481093 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092114131 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101562893 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096566299 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112420184 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104097204 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087852769 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104843715 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087774828 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103051264 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086081328 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104878478 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0850817 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103413358 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108607035 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088316327 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103790349 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087551035 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103347997 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085737057 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103979448 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079737303 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101428237 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085499613 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104598381 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115353001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086421648 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103611279 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083656641 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105967458 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103621875 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081269523 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112810344 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094307462 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103869613 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111546831 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084639355 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104199566 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096435844 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097641815 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084013653 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101868957 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082518847 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112182818 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105381328 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095201795 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104024666 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085038187 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101836817 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086075134 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102972828 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098573736 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083110884 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117862095 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084674332 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103362615 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085222395 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107462078 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086081502 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116014408 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103508714 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085939202 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102736141 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083223258 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102676096 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085059799 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106899766 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105309624 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08292684 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102060681 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085823457 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103048156 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085411086 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10240865 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087267748 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113402243 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085118591 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10806924 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108931854 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080323787 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105750402 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085280327 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104160296 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084229632 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108775483 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107483396 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086920731 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114108017 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085371075 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104950274 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086311911 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103299003 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104320979 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085533241 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104511131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08526095 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105686054 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09364556 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10299125 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108104443 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085947371 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104757497 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094160138 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10644668 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088601642 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112904314 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10472291 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088531691 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114273102 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089464249 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107560311 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106925126 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088013079 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111036621 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084744178 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111480032 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086132023 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105829079 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106566975 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083267733 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10477246 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085840028 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104499747 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092227223 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105726559 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084780468 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.1044615 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102907551 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087595869 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109046584 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094018917 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107828199 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088792982 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100256625 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08314042 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106826643 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102593807 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08850618 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108629688 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09246488 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10815282 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086226152 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103306658 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114263327 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093235151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109215044 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083596823 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108879452 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086549242 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10851411 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106927199 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086012606 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106134091 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089921804 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107365273 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085654915 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112682579 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10816224 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088176633 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106372189 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08689119 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104893552 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08154502 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106219192 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087953417 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110704441 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107089842 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086280658 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116956626 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083694131 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105511151 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110159701 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085687998 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109960708 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080746597 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106479099 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087013526 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106100283 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081311983 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104474099 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084293077 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108383702 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104249479 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081192871 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116413166 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095540988 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108956821 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104760927 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085091791 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100552252 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081545188 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104374245 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087400177 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106293814 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115901021 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085926308 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103730839 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081601686 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106210227 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089199802 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10826769 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083537671 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101413469 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084784346 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109433583 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11117437 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084475752 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105234349 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089256371 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107270067 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084106118 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109778985 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083053027 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109462761 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119509191 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087928228 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106832906 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112953827 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094984806 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106465595 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082826773 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107019436 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089515375 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105895059 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087197729 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107404976 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123649582 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09053881 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106245233 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085050897 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109118564 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104916737 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095419836 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107788359 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087981773 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111538551 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088448532 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116049929 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10896524 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096242395 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109687384 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109657983 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086024793 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105904619 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085403073 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104709057 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088487816 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107407884 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110927497 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096084488 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105690432 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097944214 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113715175 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10500145 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083915481 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103815117 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08707178 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100032463 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087279686 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102395927 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085995327 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104491738 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086458395 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106285501 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112143954 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088110729 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106405049 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087216377 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099816872 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088946294 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109176348 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087589326 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103680724 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08713204 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108287128 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110232608 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091188921 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103848582 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088345087 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109085246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087367913 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102248332 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112902209 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087029832 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108900168 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086775434 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106884518 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088683823 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110421931 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111887745 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088903254 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108978268 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096484999 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109676727 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084497106 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104770431 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112352599 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085154633 seconds)
  done (took 59.064938792 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14557256 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080722059 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09922379 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082540512 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116666833 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102844589 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082385722 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103105173 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083372446 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105086546 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082376937 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101937555 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113155536 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128151202 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096787459 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107489441 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101579907 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08457406 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101729283 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084530062 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11255587 seconds)
  done (took 2.945452467 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103440931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121924916 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116963962 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122755332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093561936 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118090705 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118268199 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118039054 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101998962 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114965852 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122302465 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11809663 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09540898 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114779169 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113882208 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096149777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121386897 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112775409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119607708 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099071882 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116296113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118208639 seconds)
  done (took 3.305131644 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0852738 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101508236 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085197085 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097905204 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087218771 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101363366 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090839931 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104839303 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.0904394 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106071536 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105668242 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086878742 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10922822 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081861274 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107021991 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084921018 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15624963 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110798559 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085867135 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109365693 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102559774 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089090505 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102352341 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083041489 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105410848 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091665054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108401157 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085942556 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106921378 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086126022 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107238676 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.10452061 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08851603 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106959727 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085766338 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105850421 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086600536 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107418977 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083501858 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104784292 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08787919 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103309709 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08801816 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109528323 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.10460755 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085134273 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109028079 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087668724 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102487115 seconds)
  done (took 5.64001926 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102540163 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161976803 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089304033 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145686854 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125343049 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116616044 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091021952 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146240006 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106214457 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089899356 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126528528 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124846045 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107369109 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092574396 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111273018 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108807613 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088669591 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106212431 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091936272 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106981687 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.1130963 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094685145 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122483214 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121590794 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112116239 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086405197 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107537865 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092221162 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122108834 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112825243 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113146804 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093584728 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124250449 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113004868 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08691443 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110611911 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125867614 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08812814 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110817026 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106015424 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08997888 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112455444 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11525903 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105784144 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108234423 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113139635 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088220623 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101409384 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119816485 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090768522 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117057627 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124169251 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091320865 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109103583 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113573753 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103618931 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109321413 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106045634 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091054798 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120843718 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105359928 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091786576 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122305784 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110070703 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096231237 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124592689 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113143274 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111865339 seconds)
  done (took 8.385227762 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092932742 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111633585 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124561149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124641067 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094670823 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114847828 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115391559 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0954313 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115108425 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120151447 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115897442 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137645706 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089998264 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11764659 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115944077 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095761298 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115094155 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11428721 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094387275 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11556468 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114687901 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123628924 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094260592 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123925115 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146078164 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11028094 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09373803 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115337192 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123827114 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114719847 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127168939 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095392653 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1150118 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123915482 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128119294 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095308383 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107653698 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114533989 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095079407 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115701289 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110150968 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124004563 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094380308 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110417792 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11549316 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0946008 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124945445 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127006571 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118708386 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120894248 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.095223298 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124472229 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116005174 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094718435 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125636901 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150787505 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124567823 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124538993 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115236477 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123830388 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10364695 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131917249 seconds)
  done (took 7.9106957 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106253522 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116001706 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121181262 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104718471 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086676987 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113396553 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086124149 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106716985 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097788153 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.120274694 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121221768 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113343596 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095768014 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121346727 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112326018 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115937251 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092890696 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113004335 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117670085 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092513337 seconds)
  done (took 3.00209806 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093257142 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123704493 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08507289 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112579624 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107953519 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091044221 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106687844 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108455681 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088759795 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108351748 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097869493 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117957255 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110277144 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095766631 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120232033 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115066646 seconds)
  done (took 2.529633219 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096458544 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119000586 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125094227 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088516647 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108717852 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106380871 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088093492 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105398587 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085778659 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124271944 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088981659 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113197229 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108810269 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087561722 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105454192 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091714264 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105263441 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086007534 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110100632 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12496753 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099131579 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108204128 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11040851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090445464 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.1083395 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095073978 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110532511 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107212826 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086640136 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108741876 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08920483 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117667001 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106796348 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088007187 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103743416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086534031 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109558431 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088580193 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112565045 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10786849 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087219129 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10957409 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08866689 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111411629 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105516915 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089695332 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106386759 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095982885 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104632249 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088697286 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110815483 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111272056 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090378672 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120483657 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112822944 seconds)
  done (took 6.486635212 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098848155 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109903485 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080530292 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105375317 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09182652 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111880328 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112685747 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090862018 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110908784 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086569259 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110664202 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091494672 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111623107 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113832735 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091029075 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112626934 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08437835 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111647287 seconds)
  done (took 2.676123367 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09117604 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105467407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092370055 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106640488 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088783384 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113056968 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08483346 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108608594 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108693365 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088841571 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110050485 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091294678 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108325777 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091233896 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109504359 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089247193 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112368443 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107971804 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089185079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105978637 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091675766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10758766 seconds)
  done (took 3.056254387 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.114659275 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121995805 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091281373 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.226208862 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.101691162 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130170755 seconds)
  done (took 1.639398976 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108783464 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121654464 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109039523 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111567451 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118931929 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111182986 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091802329 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112291885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121739088 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105186346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113297006 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121694269 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122263133 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100542134 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119112973 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117817724 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112854636 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092653376 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110246977 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131461029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092438887 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121602085 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111442409 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091396444 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112660733 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120715393 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121899803 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127909029 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091273648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122243988 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118500826 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092150636 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122643371 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125923999 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113795469 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101135604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111614821 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133133187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11852454 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100465132 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114190609 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118654839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100533452 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11861492 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121678945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112009568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096328474 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112364768 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112761511 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138997882 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097295056 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122855028 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119139464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122933857 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123005867 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139180003 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105613037 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121670027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118827976 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126626485 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121541637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098557055 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121977467 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126271771 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119770792 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125074246 seconds)
  done (took 8.417417226 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100531689 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128140623 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112120105 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12698438 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101247004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112474799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11249328 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091663377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111891822 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112069593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155483306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092140133 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122751243 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121860334 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113072425 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091937304 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112300008 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121635065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091218456 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139342966 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112811867 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121819873 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121799279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100505602 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126723385 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118196862 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112828313 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092214361 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113419184 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112219553 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097596453 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113393552 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122217747 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090303141 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122663515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11297778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112173059 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097337198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113102306 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11985312 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101707169 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13202557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112511002 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113202833 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127598401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091625564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112280153 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090613397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113570337 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111564943 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127755483 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107128398 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1270805 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122372733 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113551599 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09232182 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113445747 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112862556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09219722 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119191381 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122339503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113045503 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13908548 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092836331 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111544037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122852723 seconds)
  done (took 8.301331864 seconds)
done (took 158.252411571 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213737242 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199166223 seconds)
  done (took 1.267846489 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087199747 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136050314 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095327054 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168078491 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107143115 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118935082 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1394338 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097635351 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106023088 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085213322 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106436657 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087293375 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173086512 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085498747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106420838 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107904387 seconds)
  done (took 2.668234676 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113139157 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255644782 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121427759 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105280336 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.0887754 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109104089 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084360838 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11133034 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089408216 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104791203 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087760795 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107285416 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084099129 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106361254 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089188573 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109381136 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105425756 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087728068 seconds)
  done (took 2.821663065 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11206622 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146277467 seconds)
  done (took 1.125842482 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24130657 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161112092 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227189082 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.478710021 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.284599622 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.362833537 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.199329232 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.213758234 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1652295 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208708665 seconds)
  done (took 3.401505163 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1185428 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18420834 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324816003 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156524873 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106020587 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128683264 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158612998 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131421288 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122886901 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101372444 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102051885 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11862813 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139376333 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093992156 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115092161 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11754244 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120652376 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113711564 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11539289 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094711062 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13861571 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105861141 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094978431 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113827369 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.117704454 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097185077 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106331933 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08582964 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118557322 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114497686 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092502606 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126553463 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120036874 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156870625 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124859314 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157475172 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119877117 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093635347 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115268058 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090210414 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11865258 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119378989 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125449261 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096522572 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106397269 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097087736 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107553259 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084527795 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116099849 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119478492 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093729365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115925055 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155015869 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124410446 seconds)
  done (took 7.425119673 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794441213 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15783347 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092895621 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886056872 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136378467 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103464375 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.779757217 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111369127 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.262766087 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759532816 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135094145 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096203289 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231860483 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.264919493 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933775694 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290239874 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.643777249 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127922607 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154621368 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155251348 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118928871 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118096212 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134090121 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434805871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117042084 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089744318 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120048561 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120032198 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16703588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.131012839 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096567401 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205677449 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.254139471 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207099849 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099395792 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115296288 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093834069 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.197005096 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275895866 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195147602 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18414096 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112456842 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090332541 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123224654 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133253506 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086207515 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184322382 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181176457 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173893218 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120944188 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120938286 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10064111 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12168864 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166379952 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12344251 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314802756 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321359432 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090042253 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122385166 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125033374 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245631013 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124762919 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226234684 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140178167 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191160792 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112224664 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827939831 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171880134 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110616486 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096133488 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120783727 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116424379 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10243094 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168974657 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409466886 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129564899 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119110981 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095037642 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232007186 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106324281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112981621 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163687976 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116570629 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098761002 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124993137 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12346424 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171237592 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250077646 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101676954 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120403536 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114961822 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103244776 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117355917 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215891144 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22270555 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168973158 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.240485228 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100640576 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184324654 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168319798 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118579165 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171357178 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119359425 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101566811 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122020865 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218842628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147640328 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104763571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116959418 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117702025 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148998913 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126997323 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09654962 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168452772 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481924942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170113876 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.114894228 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.132203237 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10054746 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161582286 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11818198 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26350727 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121597104 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168934368 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097817633 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109035363 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121049535 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163474276 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12173779 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098928917 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122627076 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11983508 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238094703 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224240955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12518756 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227423154 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188561933 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119479332 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177410761 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127733244 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175274648 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124065174 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10166986 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116377163 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820159713 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101638265 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12030718 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114754184 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188570123 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09001327 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1241143 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125701246 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087162735 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819998369 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12910672 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098836508 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124102797 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118801911 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12119124 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095670747 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116034812 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163076659 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232785695 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121819442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100119955 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124492345 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160465663 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116572988 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125469478 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102807379 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125141108 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122009256 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094060571 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124550673 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16766516 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.185905875 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222242389 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580749563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11741238 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10546934 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230414374 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112779832 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293889747 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099689354 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226292973 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189600799 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10447408 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322151014 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.169168499 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188360839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.130355689 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174125799 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111034407 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122313554 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.170902764 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094497052 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123204447 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168323863 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13186021 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129725032 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.971930794 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090699029 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229555325 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10962641 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172545272 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117867982 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120216142 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266051176 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11633072 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128699072 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16470929 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11474886 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103055508 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.869546873 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124154159 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100199057 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11802379 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220891094 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163739019 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119614471 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118608998 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098076345 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163075874 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234497486 seconds)
  done (took 44.587760784 seconds)
done (took 64.160997263 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278381161 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217350179 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269795569 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170823386 seconds)
  done (took 1.903798349 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170716172 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150000402 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121854663 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107275861 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151284047 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084663894 seconds)
  done (took 1.675988954 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367391405 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28478792 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247585406 seconds)
  done (took 1.79671213 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291992184 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246683906 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474837651 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325654426 seconds)
  done (took 2.356569375 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210206484 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13311957 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111496269 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.1033625 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200048862 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251242362 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14781659 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20532594 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098517721 seconds)
  done (took 2.399815798 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20068678 seconds)
done (took 11.231089688 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.253941987 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.232544571 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.150091509 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.152100971 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.218478081 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.147833791 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.206558221 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.153493805 seconds)
    (9/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094377509 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125216435 seconds)
    (11/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118755421 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11614062 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.212612834 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122292722 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.150501707 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.16703525 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093966537 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215282969 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 0.173854499 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120692048 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.257526169 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.196471916 seconds)
    (23/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.243695015 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.225483924 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.253513414 seconds)
    (26/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.128472586 seconds)
    (27/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191872187 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.147705569 seconds)
    (29/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.179345083 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.159698218 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163070806 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123672381 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.138118717 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091901976 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.214135556 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11774701 seconds)
    (37/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.169771765 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.188825712 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09134675 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116137767 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09380131 seconds)
    (42/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090943917 seconds)
    (43/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.16851842 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222461336 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177162634 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.191439208 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139973858 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.210187385 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196296692 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191469711 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117247247 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136176937 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110383673 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.154948666 seconds)
    (55/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091807013 seconds)
    (56/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123574187 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.106319061 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099749807 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111554008 seconds)
    (60/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220260321 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088271205 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212309371 seconds)
    (63/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136535239 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.134002518 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085939338 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136181954 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.210763884 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086742642 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136949949 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11861509 seconds)
    (71/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.151095976 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.204463954 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109174392 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225033431 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086612947 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.180542579 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.114704064 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116952229 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.179104674 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096486641 seconds)
    (81/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.121019351 seconds)
    (82/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.088534099 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.088937747 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105623125 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217086722 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.110468101 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131654425 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138588227 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.173439882 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076118862 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119093353 seconds)
    (92/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.181454025 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136994875 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117638834 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216097443 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.132537336 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116351384 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173977445 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086830979 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138388873 seconds)
    (101/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093883196 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178560822 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.18332064 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09045581 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117523185 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119579596 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112148848 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132163319 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067447833 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.089677024 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093469391 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07727604 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118341679 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192733682 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181059526 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094068873 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123308064 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.222737101 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085563519 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138893827 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067924658 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109819985 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.184255648 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097696584 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.415330025 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120505978 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08777932 seconds)
    (128/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152581093 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06643797 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185248755 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094119083 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120688839 seconds)
    (133/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.20981736 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.187809642 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067236893 seconds)
    (136/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137931847 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.180663368 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110340906 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117833442 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119947942 seconds)
    (141/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096661747 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084695512 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108575588 seconds)
    (144/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081953249 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090629083 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092811555 seconds)
    (147/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138851613 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091612638 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120742085 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093657036 seconds)
    (151/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.116916278 seconds)
    (152/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065949155 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105010949 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093807921 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109548549 seconds)
    (156/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10510468 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119753767 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067408759 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170916427 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124848345 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086114652 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111547919 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085377682 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090101897 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093652321 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077594218 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.088778698 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139923782 seconds)
    (169/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115040619 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066792069 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.153288936 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.1189534 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112522796 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127015375 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188999712 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190383371 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099525928 seconds)
    (178/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.090859682 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067948769 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.075451893 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.183235999 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067401988 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110366377 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132913095 seconds)
    (185/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094205723 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06696578 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108335522 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.19629664 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066104206 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109602347 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087081704 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091568784 seconds)
    (193/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066815584 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086500446 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.19546393 seconds)
    (196/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113791542 seconds)
    (197/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087940865 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116501002 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110090358 seconds)
    (200/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11038216 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180591731 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066187881 seconds)
    (203/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.149231346 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086929719 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091474829 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066458255 seconds)
    (207/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093811434 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10866409 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207466768 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110393554 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.131620688 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110155674 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 0.188989182 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118345798 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177362584 seconds)
    (216/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117655055 seconds)
    (217/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095801382 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114163179 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125799945 seconds)
    (220/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.093799573 seconds)
    (221/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.125335247 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091839068 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086822355 seconds)
    (224/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.091738713 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085990592 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067792958 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090390341 seconds)
    (228/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08503189 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123434531 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067185668 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110617989 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067193805 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110766721 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085808025 seconds)
    (235/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.091252899 seconds)
    (236/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067171727 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136335432 seconds)
    (238/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094608616 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090105926 seconds)
    (240/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07742779 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087195872 seconds)
    (242/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120538011 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218278442 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112184141 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127946868 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 0.173962404 seconds)
    (247/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089187628 seconds)
    (248/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116395522 seconds)
    (249/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085777681 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109296923 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067351617 seconds)
    (252/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.147115002 seconds)
    (253/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094978633 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179773555 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180874715 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188978345 seconds)
    (257/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088495488 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067767765 seconds)
    (259/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092022804 seconds)
    (260/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150078831 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067627123 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069886102 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090666263 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143599241 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111404134 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066468871 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136067315 seconds)
    (268/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093325436 seconds)
    (269/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111735671 seconds)
    (270/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085963366 seconds)
    (271/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09212385 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087032212 seconds)
    (273/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111231599 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09346551 seconds)
    (275/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09235799 seconds)
    (276/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091181116 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1196616 seconds)
    (278/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089520823 seconds)
    (279/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117438904 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134492162 seconds)
    (281/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06777458 seconds)
    (282/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075892268 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089964066 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087066496 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118220091 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094892612 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10806509 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084780024 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09095392 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107942422 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117585864 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09233466 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115394795 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067962831 seconds)
    (295/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164559915 seconds)
    (296/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067719393 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116924496 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068128671 seconds)
    (299/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077305602 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154045383 seconds)
    (301/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066831679 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093845581 seconds)
    (303/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077606103 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115808822 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09344399 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110568732 seconds)
    (307/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067082249 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116457438 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112747159 seconds)
  done (took 39.912803293 seconds)
done (took 40.818242407 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099565138 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135396615 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096208113 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136282427 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123648988 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091673846 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118472414 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099158255 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12334965 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124773512 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09812838 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093757653 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096035172 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120547798 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096205498 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135050212 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124662501 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093679699 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119413429 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085857339 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11964724 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086591045 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112067394 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070276046 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122234686 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094635503 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116402721 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120319504 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086123325 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110995212 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089909339 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118437098 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086316139 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124999681 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093157914 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119159937 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096892305 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120913999 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112063142 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086241813 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.1190224 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086226281 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118066233 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095360832 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117169542 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092384589 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119051463 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099196471 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134998609 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113202218 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09529046 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12119979 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096352705 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120069583 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090480295 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121464235 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118033674 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111427504 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120520064 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089906341 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119065759 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096199616 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116882534 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119391536 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094706413 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121059528 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097991037 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116801324 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096754688 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116311904 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086427913 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119067604 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.113873239 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086592167 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119963609 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097912542 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109645252 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091983561 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117680159 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092377225 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110292298 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089393964 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113091743 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092921284 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113313556 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.0700537 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114961577 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092693245 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110273904 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096170519 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117190001 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093686285 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112472483 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097951463 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110256976 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116230522 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086729151 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110532419 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088529871 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114793145 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086919683 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112418149 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095516696 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111622981 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092827023 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123239307 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087056331 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117232355 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085991282 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110886695 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12452798 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097593679 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11066755 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088921988 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110732464 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094355825 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10974187 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086695157 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110604418 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086684405 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11741461 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086881018 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112514783 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095055204 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125017851 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086655445 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113996358 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089165286 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110618525 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093393362 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111553211 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08704348 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112802061 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078228851 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113387784 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086830296 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118854243 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089108756 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119597476 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113212719 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095804444 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115462622 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092937525 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11705561 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.08610633 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099200235 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089369941 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113265413 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088560891 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11091171 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088624454 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110930793 seconds)
done (took 16.935329881 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087938183 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186481721 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152298867 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142778302 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106950648 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111934232 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122714258 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118747227 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113572703 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144644055 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110055671 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133162385 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148525522 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086671612 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112679897 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09074164 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113589141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102961198 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14529817 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135061031 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165232668 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08609725 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147716671 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135752752 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120796515 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114192589 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112052037 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091801503 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11465936 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103282281 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132555094 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114588062 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087960099 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13419626 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105046206 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12069321 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111031219 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094539065 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111830238 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088353776 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14147077 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133628708 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092859548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117075884 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091871441 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114553965 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089600691 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120818972 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122882745 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092288112 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127993663 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157743755 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091102591 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121937507 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.110395849 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098293601 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12169104 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090090192 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116009269 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090146879 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111428896 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091073361 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127023121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141929224 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091306339 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122058465 seconds)
  done (took 8.641707511 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104961798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139451501 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129974688 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105735763 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112059946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088079742 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112883057 seconds)
  done (took 1.761153457 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088280294 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134070352 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111346427 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136099623 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131587262 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.12581027 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123130804 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088460047 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13065485 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089883653 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133250463 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152394822 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090148192 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120913966 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137953687 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088053318 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136856862 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088645602 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11660699 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136460956 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09119619 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134631787 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090749373 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113680307 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102843064 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113477102 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161925721 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093446455 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115734946 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091686774 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111945293 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168138369 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102610876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125626284 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112799535 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103145965 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128395333 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086924251 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13011754 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093984333 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128097365 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114961873 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09002951 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111463568 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093886399 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125385717 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089803211 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11510029 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091503688 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134032535 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089081068 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126879125 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113691255 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093091927 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115497943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094941664 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124548865 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089294405 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133346037 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090483204 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131372043 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129786525 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102321216 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131240547 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091480895 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129503994 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127472942 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092029893 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116896861 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092745178 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130866973 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087182757 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115170613 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100109905 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115040604 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138285994 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112193736 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115346314 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098812802 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114939797 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089042898 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114980104 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137540721 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093239343 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114606383 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093383773 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117470764 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086800783 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113067356 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09346702 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112914652 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090037754 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118437971 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0892983 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116755726 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105324073 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11566288 seconds)
  done (took 11.845730741 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090041179 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115163533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091865931 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115089664 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089345901 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116303862 seconds)
  done (took 1.599439884 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11302463 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11810254 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103769516 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121253351 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158575738 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129397108 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103823859 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124467574 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107820284 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127904391 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129554672 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105027969 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136255092 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122039763 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103910202 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121349726 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129704429 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099549852 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127883021 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096490962 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138430155 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122708147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096954746 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132322893 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119857607 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095306268 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126897867 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102117486 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128054479 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125122583 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096211284 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119158962 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121890593 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098206296 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12969393 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095670309 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120553189 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119666976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101014133 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119020268 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130734081 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096655649 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128138836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093658202 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123917257 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121895043 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094290651 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126275492 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129637611 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094198305 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119586363 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095375766 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120105156 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120709003 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096655806 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123784043 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09350876 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130400005 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1224331 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096149974 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11894244 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093471328 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124455045 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118507893 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104275045 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120435577 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122683319 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096384143 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122677623 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095959521 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119047156 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118451788 seconds)
  done (took 9.2809673 seconds)
done (took 34.088507385 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689024181 seconds)
  done (took 1.667511395 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.774317787 seconds)
  done (took 1.753081865 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.175520775 seconds)
  done (took 18.155991143 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504945212 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585876375 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.823997031 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17907126 seconds)
  done (took 3.070422472 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.93699261 seconds)
  done (took 1.934514161 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24678799 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232926623 seconds)
  done (took 1.464495778 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.778659265 seconds)
  done (took 1.766390601 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.365809845 seconds)
  done (took 2.351163358 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337416455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185410437 seconds)
  done (took 1.508804027 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557183442 seconds)
  done (took 1.540861557 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.159343333 seconds)
  done (took 8.149946647 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259978035 seconds)
  done (took 1.264535175 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301245711 seconds)
  done (took 1.294955472 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.560948829 seconds)
  done (took 4.552709711 seconds)
done (took 51.458886986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100761644 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128030817 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102437526 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125750239 seconds)
  done (took 1.434176017 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101884476 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122313749 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100604279 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121990445 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127311967 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095109893 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124828282 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100727323 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121695225 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096758513 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121228905 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12185744 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099534236 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124728246 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092914671 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124770872 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099222282 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121315017 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124870425 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09590735 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11959293 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098125198 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125928953 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093876394 seconds)
  done (took 3.673467292 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101958705 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120259965 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096501224 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118826958 seconds)
  done (took 1.436201346 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101450005 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1425307 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139022268 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100144441 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14368534 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136466884 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091674729 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117578749 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094102684 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126497247 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090825965 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151612135 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138167929 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099945429 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128416462 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088569089 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11743199 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137284766 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0996978 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126897584 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092985274 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126452988 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090306739 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139171117 seconds)
  done (took 3.820168959 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.161016051 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15151992 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140017535 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09587567 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156803266 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143185349 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091013942 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142641524 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088865642 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13141655 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11954357 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133601881 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129341034 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087986697 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115915852 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08823722 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127612495 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129615969 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091223901 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145263501 seconds)
  done (took 3.473656 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099296306 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118128696 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089156357 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118208765 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099701308 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12228771 seconds)
  done (took 1.652393286 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091947617 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115845123 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090228463 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115672598 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094295769 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116133664 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088599269 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115804563 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09026976 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116123515 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08823578 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115328637 seconds)
  done (took 2.240350579 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.471624998 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09329197 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12167479 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111360955 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096889056 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117051124 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103692425 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120232342 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142136207 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089769884 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116652238 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092247218 seconds)
  done (took 2.678853671 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241080196 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13373544 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301909141 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195306182 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160491881 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17404575 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153171301 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166914948 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201001585 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166478991 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240636332 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202896884 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153335692 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220283071 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115964045 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14467912 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201794511 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249190877 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15889314 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20671671 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231307523 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170731408 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179396984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154537033 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138960979 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170066325 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095916198 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13228814 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239210872 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184898072 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1919927 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163400178 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146207124 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242096079 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25521162 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20211922 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217181157 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110020741 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170907246 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167344841 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26725202 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112389965 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236681119 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159746878 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131703372 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193580182 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167768005 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174708985 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149828388 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139258132 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223749715 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216934669 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193980566 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138366855 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161622022 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162463348 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168013231 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152691803 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25342921 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200078177 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20626887 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094639454 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146790747 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190981665 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18327927 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.193612173 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182428693 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146399955 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193883255 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187835426 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163094735 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218227406 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182701667 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138680773 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170147225 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174397964 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170091359 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258684767 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178302256 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122444922 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166604314 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150068239 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130647531 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167967539 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124931684 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213368896 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149993389 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13428108 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162698651 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159872212 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16128023 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198645121 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21919674 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120401633 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110880564 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158011295 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155321052 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188967161 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139298166 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157858477 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161281643 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103593451 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203650302 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097322237 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17639194 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118676754 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176912999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183649099 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126343574 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158760312 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151328456 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125389044 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20316668 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198772062 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141151754 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105906136 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234542998 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174685868 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151287028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179028643 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199176563 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142476355 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150047529 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225835679 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219083726 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140179714 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205042345 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154238518 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135172072 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134408674 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181268138 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155728819 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160261093 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105778374 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.20636761 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21203283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125703368 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110913093 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21522768 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1061283 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131689583 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161069119 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148576543 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138641108 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145258794 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.123958574 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208811945 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179602296 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153623584 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167588916 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152223357 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253356823 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141204986 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122868732 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14715419 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121018784 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194136869 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196163531 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130833949 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233184125 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174940667 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155418904 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170683553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10852249 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175419941 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130413921 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12028175 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19371074 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166194776 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162799867 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194950558 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155689846 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181039509 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208641412 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173421135 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174935317 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165062116 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158827701 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138599814 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159961738 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162804549 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096909372 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142631855 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134399566 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157003364 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142924517 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106849037 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227900789 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169146425 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148774448 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159572747 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122461983 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179821815 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128392644 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175046453 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20410937 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118718591 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225458883 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192522678 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185966819 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143101525 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233883411 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094103267 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125150086 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143596305 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17067113 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106657018 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135966085 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166051914 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179337666 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210038839 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176023745 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163100555 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176711509 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191895523 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122064837 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140547843 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21118743 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17561205 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161430622 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136998878 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15188941 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176192152 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156452184 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259086535 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167749733 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177147274 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237146152 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149702 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104950454 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150790361 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185160588 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15379777 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20348887 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11999164 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142613288 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16148852 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133300632 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159630111 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183573705 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161754431 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21693449 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15064992 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186283126 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101023326 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190643017 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158423016 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164414541 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081541958 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174390619 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230665685 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147620414 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16904381 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192399563 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131516075 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.176728176 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211732257 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220042489 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110650468 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157913629 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159580674 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164503534 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172365345 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177024875 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157615935 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216658278 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129158337 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136597658 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140303246 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15041156 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151453857 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10618088 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148703268 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174524074 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139963171 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186776457 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160234707 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157999116 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170974111 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150473423 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144761898 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150015886 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217125368 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175487726 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243250553 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149661613 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178288405 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204727338 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126142911 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131475369 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106682494 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17663889 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137290484 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188831035 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.148039177 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157351773 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180974049 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220337318 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112044507 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12082871 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157279766 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175019149 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165676583 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151943524 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159436557 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209131819 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142394348 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1044244 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170685891 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157050529 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147299062 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196100971 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108502155 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148732657 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100796552 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133862865 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163287382 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207406315 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137808235 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18386828 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173083901 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169373959 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165782738 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151268675 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148633061 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138141998 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22994583 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184970371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133117994 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156734682 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177083068 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194925095 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159451141 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139885759 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231418381 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191636402 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198979788 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142154841 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169148265 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16754821 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156819221 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18493292 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13591571 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233086606 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107688166 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228513721 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156436956 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142766151 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174739618 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148071476 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112636294 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212904377 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173834483 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134576613 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105740009 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166999914 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207118626 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153948436 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100976166 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178984134 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126534464 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190842331 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263237392 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134024825 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154543694 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119914353 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135326385 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157077695 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157973801 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139527946 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139600339 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22868703 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134502307 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192305846 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229682826 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169099206 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174377908 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144077659 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69267907 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130229994 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192315085 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154156671 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204292307 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151606213 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171759557 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160768815 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168054663 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22275055 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158824426 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203656599 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223733012 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177261461 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131271742 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158294027 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161660917 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144402062 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152044072 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166065295 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159033491 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124238199 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20363505 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169883028 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105666281 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139812587 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223997804 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126672641 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211512795 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179250813 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110904552 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171198224 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212876798 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133508759 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18033325 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233781606 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114717399 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151302596 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133132325 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155476248 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25912412 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097769959 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224970943 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175454585 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156404562 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166438765 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147712857 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191516095 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158814886 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177017456 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145877672 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159040048 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155612295 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137603548 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101399398 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153333126 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16560268 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14854544 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158880072 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163760995 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191693228 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096244097 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144766335 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156335457 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188286809 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243608914 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136390891 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107974942 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161369721 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151470984 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173954001 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203599785 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.1075722 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134787616 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136559374 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132234915 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137343189 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154108834 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129114911 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163335561 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234112325 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136781997 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276184627 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11291148 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15516116 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088322644 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131968368 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151042163 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146289619 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156465591 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150372199 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231923507 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145822939 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131935032 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148171804 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.09913797 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13735428 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164477606 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166287295 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175614507 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145403389 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081055191 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159082499 seconds)
  done (took 80.8586482 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167187346 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131426057 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146948402 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201657124 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175958028 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269723157 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209789889 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253186597 seconds)
  done (took 2.638540299 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095203387 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145872927 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153191467 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133419798 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090983044 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119859368 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.33097497 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133275233 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090415034 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139913651 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.1470392 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117559792 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.508001667 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117793587 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117408255 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082968712 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.11606843 seconds)
  done (took 3.719363834 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.465155995 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715300907 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.477605802 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124313092 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119714775 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134507672 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.735794281 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.21009783 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094971807 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487329898 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.768011207 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179396389 seconds)
  done (took 18.595647694 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098946977 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121493925 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107651565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.13615894 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096539088 seconds)
  done (took 1.648745904 seconds)
done (took 128.854733932 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106418854 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40464302 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072180057 seconds)
  done (took 1.60165238 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109488221 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137659182 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108860715 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135701498 seconds)
  done (took 1.58941818 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10018414 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126927222 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109448819 seconds)
  done (took 1.430318835 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325919164 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190856159 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142204958 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106477369 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130243494 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102654581 seconds)
  done (took 1.430325177 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100106373 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127483434 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098322575 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129933033 seconds)
  done (took 1.552960548 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097433466 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071374673 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10169344 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07471749 seconds)
  done (took 1.433608109 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116549057 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132248542 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105125833 seconds)
  done (took 1.452257011 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130279834 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139349982 seconds)
  done (took 1.367387227 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106962453 seconds)
  done (took 1.200243106 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119924673 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.17011955 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.18975822 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164947523 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227932226 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165206436 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142250755 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114446527 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130942145 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144345308 seconds)
  done (took 2.667604171 seconds)
done (took 17.588123686 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102619085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518791679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413823081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117274556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723185551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380285171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03334128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147844716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16688781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093625411 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14028566 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672695298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.05973662 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469436104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019696375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373201602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705582488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09277876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120211505 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0936111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016991047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091995483 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123099649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092271233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703868496 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426158997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094995589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377021712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09184168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127227966 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410164383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094942354 seconds)
  done (took 17.175386248 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097032129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174662409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100220518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138347084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123938636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09400304 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124546457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093718586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180332242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123464588 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140413154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092161622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12677044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095957616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141883679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092599102 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125062516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121220577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093946837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122443659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111993639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121653129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094147001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122479443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093579377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135702113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12421368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093051875 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120937692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09886825 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128340204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095502708 seconds)
  done (took 4.846715262 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142724214 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183539683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12861673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12693732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168656433 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123475257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199781156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147107662 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155633608 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122889912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140305522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093333719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157074104 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123854393 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114238298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121799104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096555447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122156828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09354256 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122845921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14061557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092689358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123144049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093398534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123887093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137037983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095040947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121131355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092646829 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127529625 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09933967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124550081 seconds)
  done (took 5.164664478 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098856261 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128108235 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109277793 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139079197 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096399701 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125830955 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097887893 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126181245 seconds)
  done (took 2.031344003 seconds)
done (took 30.317380892 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105439822 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123018723 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098222882 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135951748 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098328212 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132051514 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092150409 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.129170706 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100326393 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127006092 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130001596 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092205977 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124963266 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092510429 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129118273 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093229264 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133618168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096350343 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133370426 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132849449 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095298178 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129247954 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098718684 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132247853 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104219643 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133305481 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134328205 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099023312 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122873843 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096339026 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124882739 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103849236 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123003256 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103450183 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122712387 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.094751581 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121631893 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092706429 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133229904 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10003935 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124642341 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129697332 seconds)
  done (took 5.907539868 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10991407 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140879597 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104709502 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081817122 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11772953 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081059959 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139122659 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080375082 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110765004 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108674318 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07805935 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107114353 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079467381 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102566925 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076978521 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075967395 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109497064 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076211717 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077411392 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107622575 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080739377 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073175936 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108652179 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079837877 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105485732 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081227834 seconds)
  done (took 3.606013451 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103348559 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136213414 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112887543 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184770293 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162701397 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100234186 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133981633 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141121691 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108818562 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121564818 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096621735 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150396875 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111282015 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129718443 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092320406 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137484249 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137031987 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09466629 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12871496 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113785854 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139269509 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103390782 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143365452 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133907299 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091640682 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124340788 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096533199 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135399122 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097702376 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131260697 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126467596 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09551427 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123260553 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104840172 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126816441 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093799049 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142701024 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132365919 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.100909706 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121684753 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095741702 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122187688 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114054468 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168581705 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121400175 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.100191708 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129028518 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102757693 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122425201 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110865866 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132004613 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092069915 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12625109 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09165287 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121783904 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135880003 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094948739 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124442514 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102137527 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12434386 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105553716 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12573214 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108669996 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12165557 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129480267 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.0929273 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122936801 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091216275 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145395701 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094411288 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164131091 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122984752 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093965691 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131866893 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100706648 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128242465 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092815771 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138642448 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102524597 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125551806 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.13068994 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096864729 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124491757 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.110820918 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124464184 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094197893 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123039393 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099082591 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125025224 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094271001 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136290946 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12160067 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096056677 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139590395 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092129198 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123546347 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09924809 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127465869 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09153189 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135562097 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127269607 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093869696 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132294781 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092204677 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125527327 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102706717 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127899143 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092116804 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127453219 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1282986 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093796059 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123539572 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105606016 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123099999 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102706477 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129346418 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097552998 seconds)
  done (took 14.869195792 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229761781 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218056803 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.124820882 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.210831588 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105201799 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.134805899 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212508705 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15519073 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094031332 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124441221 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094093807 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162139253 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156645598 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.167391687 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.103697393 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122269737 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11099734 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164840988 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214066021 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.206249644 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143557657 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131694721 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.09482888 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124373109 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.095203229 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13248234 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109782591 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133082087 seconds)
  done (took 5.20589643 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108953807 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156336074 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099106442 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144516523 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149526698 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09348083 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127516331 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094124463 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134867264 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135648809 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092853777 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128871062 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099722218 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132001527 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123888304 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102863052 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132109033 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095398046 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126123956 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097557101 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13018078 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131977011 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097398743 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122410307 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10034961 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121356393 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086825037 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142252464 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122920348 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115901677 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122177 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100562712 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133719864 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09373988 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12344 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09482876 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125373598 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094999619 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124336681 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092168383 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121886595 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077660501 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121757136 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135953489 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099597139 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110401382 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099701552 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12890821 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098557513 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120794683 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09632828 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126045469 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096807067 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129842748 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097981211 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128544299 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096818416 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117099163 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099332513 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125823731 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084758812 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12203786 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097549127 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118325954 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100860536 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12772985 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09218114 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126015423 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097729225 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12940588 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.124353122 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09672124 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121101692 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.09528794 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127786335 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097699147 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126392726 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091619243 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123541071 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093781144 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105874659 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093711417 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.103695343 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097315968 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122232358 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092666555 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125036671 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.100400459 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137906632 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095300857 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130330334 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123862465 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092737203 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126231829 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083725417 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126111004 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108289325 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141558369 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093653516 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121732429 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.136741802 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099034299 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122643252 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076268838 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130821767 seconds)
  done (took 12.999151478 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.118283198 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149165165 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095374772 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13762748 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.149294874 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.116894101 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130582897 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.0993328 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125503358 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11021701 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123925125 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103187093 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126918121 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131909414 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.11678968 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131851069 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095507734 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.133788451 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101682936 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.159338488 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137571506 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108384647 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134168446 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093933133 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128234908 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106926849 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.149710438 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.1338401 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103129677 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137683917 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104240358 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.149406724 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109551095 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128595893 seconds)
  done (took 5.318137616 seconds)
done (took 49.014466284 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211132475 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435953283 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.207207838 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127301993 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.23693413 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.241908591 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.216008642 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202009394 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.877584957 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.20524158 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45869728 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.856522424 seconds)
done (took 60.417085993 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.250353496 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339133463 seconds)
    (2/2) benchmarking "String"...
    done (took 1.476620039 seconds)
  done (took 3.957966711 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.573231792 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.154653787 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464964012 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.208252293 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.210142166 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492193651 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.856225179 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.571643427 seconds)
  done (took 28.092110203 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.207672081 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.603164099 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.930941151 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.941109087 seconds)
  done (took 18.819768754 seconds)
done (took 60.827021344 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.204277574 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.288160274 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.22766954 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183329819 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320080022 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.230175735 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.523923502 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.213503615 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221739518 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.196746031 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.223124875 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.220670111 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.219329545 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.553782474 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.215184872 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.208534761 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.219927209 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.658694182 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.630021072 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.223936788 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.233170245 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.242195597 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.227365667 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.214692066 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.244789108 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.210552381 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.223012388 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.227792188 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.847244914 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209606623 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.21593197 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.731859178 seconds)
  done (took 190.946829313 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.208741761 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.220881901 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.332999058 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.250420753 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.653862673 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408796457 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.341759568 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.740326727 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.22701651 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.225021993 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.478973951 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.21389421 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.541379995 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.194193499 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218655226 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.313589392 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.525216208 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.53714638 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230369829 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.479973928 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.238873705 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.489490473 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.380127205 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.428715401 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.267859107 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234142335 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.224045621 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.215795684 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.416705151 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.461760102 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.232844737 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254743783 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.842965045 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071635396 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.214233799 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.217171063 seconds)
  done (took 150.673611029 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.516805404 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209226138 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.209223383 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210426445 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.243695094 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207327562 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802792808 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803318277 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.717181973 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.619369643 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273937989 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474922968 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208458675 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308332931 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.22172312 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.21046845 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.225566599 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.252178156 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212943963 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212033436 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80485385 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.226384704 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.375245262 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215938976 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212361445 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24609616 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604031355 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209099878 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211076894 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245529445 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535858895 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259480791 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210865244 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.580113426 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.157174394 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321746163 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212997425 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24563653 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.209903689 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485657612 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21141368 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212366817 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.217276374 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.860867596 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.215843739 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.806958581 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215597119 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.145412122 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211550823 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214302163 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.84757357 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.735256245 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224793771 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.211015073 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.215892165 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214471936 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214402981 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247281846 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.80314583 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.32089664 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.229023984 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.214896968 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218255969 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248391919 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.21536616 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.303463688 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211526586 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.630465936 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293340563 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.43108233 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806408582 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217885301 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312186132 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332652543 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.21317347 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213773174 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216143338 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214566375 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213345898 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.325892349 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.213388736 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.64591437 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219078321 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216641958 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277227885 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.313385392 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.212637085 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.581519 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.218478169 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218308293 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948400455 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308694481 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211472402 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.217619204 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215653464 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.644471171 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806261264 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.459245408 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.217028171 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.881360444 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.216469533 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.660994845 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777992096 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.832055878 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215385479 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.217987337 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325865449 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218971056 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218344463 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.213403801 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.244458383 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230026281 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275873884 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.214056782 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.620051294 seconds)
  done (took 348.258362111 seconds)
done (took 692.528682463 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.910910035 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.86089896 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.993431248 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.87397585 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854147743 seconds)
  done (took 10.637293058 seconds)
done (took 11.779698196 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.40506545 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407703162 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280431385 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412333557 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244335476 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432090757 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392784006 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.239558849 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321433746 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.30117841 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321345188 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26910633 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247945661 seconds)
  done (took 18.421003513 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536900742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527851042 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283254898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539409194 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26266807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537905986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425958297 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433218307 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463704267 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252383098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232719585 seconds)
  done (took 16.643889021 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542564747 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52971785 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286802858 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536111059 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263835197 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551618718 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425472483 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441361945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433884565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249407882 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231918259 seconds)
  done (took 16.640908532 seconds)
done (took 52.849344098 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.227264774 seconds)
  done (took 2.372594096 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.263335381 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.42611151 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.246299079 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.233695983 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.226442222 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.227875359 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230074495 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.229905646 seconds)
  done (took 11.231425267 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226652892 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228760503 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225254753 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.229424349 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228063037 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.226478555 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.226836564 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226239673 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.2273251 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226635975 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.229228322 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229940094 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.229870009 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229001969 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.227586347 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225676852 seconds)
  done (took 20.789583733 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227730375 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.226231532 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.226245227 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22556347 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.22655213 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.224755533 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228540837 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225836379 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.226081575 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.228173626 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226300878 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227433444 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.225934223 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227315635 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.228991289 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22913728 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.226769514 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226405838 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231899221 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226252726 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.227087845 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.225445611 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.228360833 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227069343 seconds)
  done (took 30.600931766 seconds)
done (took 66.138955169 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.468687119 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.025178677 seconds)
  done (took 9.641588151 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.230991952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.231308423 seconds)
  done (took 3.616352393 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228971527 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.231837166 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.229754419 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230990999 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230222094 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.229553188 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22745302 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.229186312 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228613374 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23070405 seconds)
  done (took 13.448992236 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22912201 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.23208948 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.229490615 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227936559 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.23098701 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227666398 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.228885178 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.229449195 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.230094998 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228522868 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.232761517 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.229443345 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233448088 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229222097 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232123551 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.23058163 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.228163955 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.229659269 seconds)
  done (took 23.291527568 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230834026 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.230488723 seconds)
  done (took 3.612656896 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.228295373 seconds)
    (2/7) benchmarking "second"...
    done (took 1.227880944 seconds)
    (3/7) benchmarking "month"...
    done (took 1.231060267 seconds)
    (4/7) benchmarking "year"...
    done (took 1.231660823 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.23041823 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.230394594 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.230593289 seconds)
  done (took 9.763626216 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233069357 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.403759314 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484167271 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.859187213 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233647487 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.233948229 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.091100937 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.23486871 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234657382 seconds)
  done (took 14.161094102 seconds)
done (took 78.683290954 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.275830307 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.24321336 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.451585492 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.234086068 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.243037586 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.567454442 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.284357723 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.361869874 seconds)
done (took 37.812840018 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.244698239 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.010164502 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.005735642 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.244765039 seconds)
  done (took 11.415351114 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.214363403 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.212585113 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.214295587 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28820518 seconds)
  done (took 18.082602077 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304584738 seconds)
    (2/2) benchmarking "read"...
    done (took 1.565337825 seconds)
  done (took 5.025090751 seconds)
done (took 41.917890587 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232498935 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.236833846 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.232317229 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.232011005 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.235367487 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.232653811 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.23091956 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.233042117 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.23302086 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.231340836 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.234307591 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.234306224 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.235343111 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236335191 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232309274 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233347717 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235509022 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.235410074 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233615628 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234555022 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231406584 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234942038 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.231063773 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.233489037 seconds)
  done (took 30.76055412 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.235821048 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.235276056 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.236600772 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.235030522 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234938242 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.236358837 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.236256397 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.23437197 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.238506308 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231959881 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233355467 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233871392 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.238179568 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.235462736 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238147009 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.235719334 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.237073694 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233360494 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238664843 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.234931036 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.237194251 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232446849 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.235188061 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236201254 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234410805 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23445332 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.237916943 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.237728753 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237884104 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.236499249 seconds)
  done (took 38.2305821 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.24268653 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.243597035 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.237129035 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.237132449 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.239552785 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.238504979 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237883915 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.238240303 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23930091 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.236511643 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23996145 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.238178616 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237556456 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239931991 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.238088048 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.2384557 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.238344881 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238372187 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.237539202 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.238245625 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.240584204 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.240338756 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.234989961 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.238174281 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238527667 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.238249337 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239950565 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.241776222 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239311925 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.23940084 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.240063421 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.239527558 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.24104117 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.24012036 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.239865935 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.239891133 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.244667387 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.249110425 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.24014336 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.239688636 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239750375 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239554442 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.241590275 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.240999162 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.238658223 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240117253 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.241452016 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.238939187 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241845645 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239474435 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.241641641 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.239890799 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.241328866 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.239106881 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.241086339 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.24088796 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.239645677 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.240045743 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.240928221 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241789211 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.240907205 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.242999538 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.241056124 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240098154 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242477329 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.242121195 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.242275568 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.241321341 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.243063759 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24274914 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.242418529 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23976115 seconds)
  done (took 90.450188861 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240872648 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.240597408 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.239172699 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240576866 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240314554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.242071153 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237564863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241979133 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240165878 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243970906 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241283819 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239177434 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239466298 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.242001059 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242464525 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.241621819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244338466 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239766486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245092877 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244844682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242990694 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.241872873 seconds)
  done (took 28.475508079 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244912398 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246473298 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.241075528 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243371871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241521739 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25032292 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.244986813 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243164802 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242457744 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240012068 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241172707 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241721467 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243311291 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242219787 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24320388 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241853638 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244052216 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241666527 seconds)
  done (took 23.541554979 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.243719724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242728699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.244863909 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243672657 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.241477735 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245431674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243538992 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247064311 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245148309 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.242770299 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.245209306 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244164948 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.248349647 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242457807 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245723938 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243220762 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245179588 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243850757 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246271904 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243041115 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244508327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245769942 seconds)
  done (took 28.540992055 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24439513 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245605555 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.240527749 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.24344165 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243636777 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245635608 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.247875683 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.242557543 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.244915869 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.245322302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244397426 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246020973 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.24335146 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243391337 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243454612 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245253012 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248945164 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246109659 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247045556 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.244782545 seconds)
  done (took 26.062520126 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24861334 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246186346 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246979208 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248462494 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247606745 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247261443 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249123335 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249088048 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246465966 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25080131 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249005639 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246809656 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246974131 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250734935 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249882116 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248529668 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247251082 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248149466 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246224704 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248446334 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250303274 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.250617725 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249879719 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249756031 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246300427 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248522575 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24966448 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248722728 seconds)
  done (took 36.12437532 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248481011 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249052607 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.247312059 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.243108291 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.247067821 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246979795 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.24836004 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.24698789 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247998083 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.244732588 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249085555 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.249360426 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249081467 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.246751849 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251864748 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.245456781 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252198756 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.245583619 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245220141 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247766046 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.250749469 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248005876 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.24676729 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243140573 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246055032 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.246625831 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246224947 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243420105 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251507592 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246106976 seconds)
  done (took 38.590506025 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271668972 seconds)
    (2/2) benchmarking "in"...
    done (took 1.264170116 seconds)
  done (took 3.707337908 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.245290889 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249676596 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.253224474 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247039043 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24898014 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251363713 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250189348 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248181586 seconds)
  done (took 11.163878379 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245898593 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.250491494 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.250952011 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.25193448 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.249836719 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.249851844 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255486123 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.268902322 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252611292 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.250982905 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.256739057 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.257440364 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.254867011 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253720685 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252623794 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25348208 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248323815 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252262471 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.251713863 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.249927437 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254208025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25263953 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252165631 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.250443043 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255737337 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.257496431 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.277265839 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253131202 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249972644 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25470859 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.2513407 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.250122585 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.252755545 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.253532663 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.252443548 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.2517626 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262543418 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273354555 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.258090278 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267697729 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252591257 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.25026035 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.253014046 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.252258 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252788844 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.253781142 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.251316346 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.248668252 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.251911007 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.256279308 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260632062 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251596591 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.252245445 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257670101 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.252382404 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257697555 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.27266216 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.255616091 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.26102925 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.262621881 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.283621493 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275680214 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25465978 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.255445418 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261057746 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278882817 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261058203 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.268077123 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.250327435 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.253190648 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258663405 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288308289 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.278311812 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.252703674 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253759751 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.252181839 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25420692 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254152831 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25936506 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.275631684 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.252022503 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256221432 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266605523 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282615759 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.255673919 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.253364131 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252857215 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257114119 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.257501852 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265761708 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.272656805 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252457173 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257357611 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254147729 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.258171402 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.254251142 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.253961165 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259046049 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.255305793 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.257822064 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257867373 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258916026 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262853452 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256229883 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25818271 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263833781 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278006148 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257294875 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265069492 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.256360336 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259317087 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.258619534 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.263748063 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256622179 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262195381 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.265695118 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.256121601 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.258022828 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.260807181 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.257085563 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266458726 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.288025316 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.259450382 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.26053507 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.260659054 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.267300157 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254627758 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.257895897 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.259426518 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.25288973 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258322583 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.258140484 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257143456 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259227406 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255942929 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259299315 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.259336789 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262515037 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261090224 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261465164 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261018656 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261499877 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.25897813 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.263992475 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.258393989 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262116767 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266754232 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.27984259 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.260325085 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.258250437 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260183395 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260226392 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.259985025 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261096259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.260598338 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259243516 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.258971146 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.259758609 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256533144 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.263561846 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258529735 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.260821263 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263060659 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263713571 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26618371 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.259879267 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260338204 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.262479792 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263444492 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262220143 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.262674934 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260167394 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.264465195 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269855351 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.257566928 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263072933 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.263302967 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264429006 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263345287 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262344535 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.265959159 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.269756696 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.263304704 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.269014432 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.283161618 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263033893 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.261909754 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262607756 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.261454136 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263290906 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.266971704 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.270961694 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275790986 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290379651 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.265257415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264039522 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264531223 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.267539341 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267330155 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.264521631 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.264406101 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265546775 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262326889 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263193225 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265184145 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.264325987 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.261441488 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.263474873 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.265087723 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.26234889 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263790965 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.266316732 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265720557 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263901985 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263519962 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264497503 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.262525517 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264879639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.263010752 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265707198 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265076106 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.265618563 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27296353 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.26351484 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266954803 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266193591 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.265804269 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.26505375 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266294371 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267914644 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.26736007 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273394786 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286475281 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.2641681 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273481115 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.285419298 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.265915783 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.26739243 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.267944615 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.262901146 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.267761632 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.274249916 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.265922245 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.265937332 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264587986 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265392653 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265669443 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271310403 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.286221042 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.265934252 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.266695179 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268022885 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265454123 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.266544524 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.265904277 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.267120069 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268428443 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269047418 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.268640288 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269807299 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.267227298 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267844081 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267590028 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270657942 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273946697 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272017177 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267525491 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.270000995 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.269311621 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273526229 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.266970228 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.269630797 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267044207 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281286085 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.29446302 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271583714 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.2897329 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.271727457 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276518588 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.291504545 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273152697 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269640837 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271265962 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.270146857 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270393597 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.268560388 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271384861 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.268116488 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266458845 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.273001074 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275794159 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271454481 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270217365 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.267331231 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.269087007 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269562178 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269457369 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.26691271 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.273104994 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273925827 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270538981 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26942664 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277179294 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29067714 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.273277055 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270453272 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.271386118 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.271247323 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.273099869 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.268565905 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275387856 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.273417325 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.271139419 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281228772 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.269654088 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278130228 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268742544 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.273738089 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275798217 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.265214229 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271049604 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.269793314 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269406707 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277556655 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.288917631 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.273501615 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.272632233 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268208205 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.270461892 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274457948 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.270335936 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273281999 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.271588256 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278633497 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290532228 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.27336586 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274631465 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.273154783 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.272796455 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.275441665 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.277934644 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27353176 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274322927 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.275609865 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.273969854 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274242305 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.272864217 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.270832933 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.273194791 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.270919561 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.275166774 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279796771 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.294361758 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276363358 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.272034009 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.279882631 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289661912 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281661611 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290848217 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271906018 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275668753 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.274149951 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.274811069 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275453334 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.273664909 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272837705 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.27361948 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.276256806 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27456408 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.273012252 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.277097186 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.277445107 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.276804624 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28419238 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299987534 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.27580008 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279245694 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.273463953 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.275859777 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.277477047 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.274141506 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271622162 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.279353343 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282261256 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283844296 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.27481485 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.275368551 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275180621 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277916225 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.279182304 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.278748644 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.278158047 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.274071596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.274277602 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.275557105 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277680826 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278557418 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.27825091 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27989541 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.277813386 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.285499683 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.297951312 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280291147 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28029035 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.276577931 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.277716187 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.279426833 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.278334105 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273983163 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279576904 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.279762336 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286204029 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280350905 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.275828913 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.273715881 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.28092171 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.274506824 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.279133846 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27816769 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.275960808 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278998131 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.278379771 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.27770538 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.27718387 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280414256 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.279475064 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280214003 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28046683 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282257596 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.283972064 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27934669 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.275947752 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.278203718 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282898143 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.277492513 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283074921 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.287832978 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30319451 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293696221 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.293016043 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.284750358 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27519443 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280671388 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.28619189 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.27758019 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281351258 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282098743 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.278349373 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.28235657 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.2866051 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280694846 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.286372003 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299633649 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282907331 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288844741 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.298674315 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282152371 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.277807681 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.28587341 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.27991589 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.280848155 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.280262328 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281443414 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288429532 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.298986035 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284481004 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28185219 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279417143 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.281661106 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284570519 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279051664 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.28484396 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.27651607 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282382588 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281276375 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278378125 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279135717 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.281933618 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280502902 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.28221612 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288327243 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.277872434 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282832577 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282838264 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.283913803 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283449679 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279228847 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279893831 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.281432888 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.284171806 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280597521 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.282784585 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287653807 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.280935355 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286056012 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.280586154 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280814856 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285413107 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.29271767 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290760845 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.282181425 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283197325 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.288294713 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287006875 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280959179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284125515 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281130336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287090734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.286973688 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285075445 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.279405068 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287904929 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297594565 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.298366716 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285692906 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.282086811 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290984407 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287657693 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282395699 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.283422232 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.286397229 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288709537 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.293644834 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287840034 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29067634 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305028571 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.284912009 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.292240573 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28775003 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.290691188 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.291983611 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285304112 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.283236313 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.28854227 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305361892 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288461052 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296529503 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316940868 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.300873134 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.2833736 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.285140267 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282068644 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.28567866 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.285087833 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.28615272 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283666534 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288159965 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289781849 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284373267 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29174955 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.286750722 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290882807 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.288847297 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285916282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285929628 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.286087045 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.284282426 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.283538527 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.28609629 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.283899317 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.285471391 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.287396713 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299373753 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.312203 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.286046671 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.286377356 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.283516802 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290585774 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.290670662 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297580823 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.296690292 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289401399 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.287268403 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.288339558 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293088797 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.282972818 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.286080481 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.285649059 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284556254 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281238464 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302567433 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313552665 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.28828584 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.292363505 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291982177 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290380468 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29145637 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284384977 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284636998 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.289031766 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.293847165 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288872554 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.288550146 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.292137023 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.291930904 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300448737 seconds)
  done (took 759.744185966 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285413915 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288163902 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285473763 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286155249 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285422197 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287059426 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284629748 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285671324 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292709136 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28928632 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284602422 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291022782 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283832468 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287350242 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289178238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287838821 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284173051 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286464879 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284770865 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285194027 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2899429 seconds)
  done (took 28.226490464 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.289935814 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.287782756 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283756258 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289268997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285932416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.292085624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289255602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292544662 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290689052 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290096301 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.288981413 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294255105 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.288420615 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.288248046 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286831238 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293399007 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292420146 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286993589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.288189168 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287073774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293129743 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.288605593 seconds)
  done (took 29.576174589 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.290275641 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.293193791 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288931211 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.29105234 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.291894222 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.287298031 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.288587668 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.290128953 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.292149512 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.296226545 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.290079661 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.292555332 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.297850736 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.294677445 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.293165438 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.295246201 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.435728331 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290878293 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.292082519 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29017277 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.289966327 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.299252483 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.312289636 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.287006553 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.287848629 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.29184524 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.290368056 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289777852 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.295415186 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.290544009 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.29808343 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.292415273 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.291201046 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.295225535 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.291571476 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.291497923 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295908214 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.292605498 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.286574277 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.29250109 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.304688791 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.317080031 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.296414905 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295156494 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.315974901 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.292040457 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.295623318 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.298803511 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.289917784 seconds)
  done (took 64.75556268 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.295836654 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.291732884 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.29070973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294720282 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.294338253 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.299794631 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.295420644 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292221148 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294980507 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.292784995 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.295456214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.293339587 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289682424 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.294496331 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.291975924 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289055028 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29228109 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289795859 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290407316 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293955696 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.290309324 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.294478149 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.29460152 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.292164589 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294707233 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295542379 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29336888 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.294212232 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.290651795 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.291534296 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.296617248 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.298533628 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.297876139 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.294193819 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296063253 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.295883942 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.297935517 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291384787 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.296622574 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.298838337 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.295470735 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29827864 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.295580594 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.295574116 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292512216 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.29613599 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293794174 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.295202501 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.294223284 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.299932611 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.301643216 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.294629152 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295200133 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.299702347 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299915588 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298859256 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.295433356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298205062 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.296530739 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.296540151 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298763389 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301198129 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.296876932 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.296530717 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.297157034 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.297990755 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.300091405 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298017393 seconds)
  done (took 89.28871019 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296767014 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.298243266 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297200385 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296269055 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296543195 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.302229212 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295905613 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.297991107 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297150784 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297436529 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297770237 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298865962 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.297551259 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295983612 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299629305 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296805301 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294912658 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294214314 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.298832808 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29732411 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.296161533 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298255891 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.295580188 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297732236 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30008591 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.297006827 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29727061 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297430978 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29646629 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.300743002 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295980423 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.303187291 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297765452 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.299286829 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.296970534 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.299010502 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29966085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303786154 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.299864369 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297352354 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297628224 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298013505 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296106313 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29753984 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300038657 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301497115 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.297720346 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.303424222 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2995952 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298288095 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296925426 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303043376 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296425878 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297987515 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300347301 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299912826 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301528862 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299965205 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300333016 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302820891 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300751065 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305595751 seconds)
  done (took 81.727945284 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300979243 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305385939 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.299128411 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298486418 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.302159572 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301909857 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302631974 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.300220041 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300518253 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.303765725 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300667696 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299046976 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304002364 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303057636 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303600961 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302266559 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302880378 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.300848095 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302826038 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303023935 seconds)
  done (took 27.255693597 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306848556 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305849771 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.300995959 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299973043 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.304969836 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299382235 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302668806 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309180391 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303026577 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304642854 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306058707 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304952355 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303264231 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302080505 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30229839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302954816 seconds)
  done (took 22.077007392 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.300902871 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306668854 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.303462078 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.305902051 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300223059 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303958914 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.302885778 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.303881116 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.301170508 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30565681 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.307037333 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.304665344 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307322147 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.307611581 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.30437079 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.307962862 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307677674 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304947379 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311505944 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.309551907 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.304041251 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.301410196 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.30868808 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.305208633 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.304837325 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.303455762 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301383971 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.306155957 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.30334305 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30917539 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.304812989 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305251718 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.304038956 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.303162437 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.306808752 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.303408338 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.308722462 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.305251839 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309750789 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.307315337 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307874531 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312855553 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.308026152 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310161189 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.307798185 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.308694657 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.309615126 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.310241886 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.307127209 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.304997891 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.309921615 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.307703923 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.307044904 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.309420928 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.308827252 seconds)
  done (took 73.058022523 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31212912 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31250927 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306731194 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.30669714 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309154252 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311043682 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313891613 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308847049 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311566821 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.306841791 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309796525 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312286139 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305433678 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30755012 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308222754 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30813561 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306789196 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307540069 seconds)
  done (took 24.784253275 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305371729 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309826079 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.311510819 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309386207 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310181137 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311553519 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307938156 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315921767 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309180763 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.308502734 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306925619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315036199 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313714782 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314433366 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310610695 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31236582 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314487434 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311380091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312451393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307561714 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313030851 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313065997 seconds)
  done (took 30.067274244 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.314265944 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.311583162 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.311778185 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.327632062 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.336196844 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.336061068 seconds)
  done (took 9.164048206 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323049118 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313497981 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308787677 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315191117 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314063322 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310972144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30972628 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312353176 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315318899 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314854323 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313214801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314657757 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314698202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312896375 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31734956 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313722071 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311686892 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315714142 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313126683 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318015462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312623839 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314862544 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313865241 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314735492 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315063455 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314791883 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318986804 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31414844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313193598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316685747 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316756549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315379888 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318081541 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317931218 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319296167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316519982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317612466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321005364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315874848 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3155974 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319867682 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316728557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32216052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314051107 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318874193 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315763936 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317851429 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315553078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317278589 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318034315 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315934779 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317035273 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316536758 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318342219 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318990544 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318268419 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315972829 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314867038 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319428034 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318374204 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316576021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321023193 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317235087 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318592252 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319896601 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315728512 seconds)
  done (took 88.114548985 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317810382 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318471976 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317306333 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314557576 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319494344 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316498045 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315129826 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316415857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317488942 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315854066 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321487009 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314448344 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316670442 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318844733 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319487487 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317532084 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317998884 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318493762 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317793778 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322704902 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318929213 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321367699 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319361573 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317576322 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320482333 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319903668 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316950282 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315528783 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319395782 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318438562 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321171354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321166767 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318438708 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.321053 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319795539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318012892 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317382512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318504503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319867237 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322289778 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31646403 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320496205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320908258 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318011365 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318957093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318107975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318957126 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321184053 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31760442 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320029645 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320638835 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32066748 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322714725 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319273526 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323189208 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320739285 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321823004 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319700206 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319582987 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322825353 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321470521 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320732912 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323989969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321237935 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323417049 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322246102 seconds)
  done (took 88.307300566 seconds)
done (took 1772.947607797 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.361990049 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.437092187 seconds)
  done (took 14.033169721 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485221083 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.437845105 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.31898321 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.347587975 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.317119167 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.330541414 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.332232834 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.320452308 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.324219564 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323541285 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321811428 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.510006417 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.31206324 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314874841 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.318873612 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41430928 seconds)
  done (took 42.970004338 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.351707025 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.327718127 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.447644186 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.350045172 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.352292421 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.526131872 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.381319873 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.325350347 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.518495518 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.374496607 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.104610552 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.355229438 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327489545 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.528108491 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.340834485 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.524110667 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.604007093 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.021993531 seconds)
  done (took 30.997775737 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.823717386 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.344212738 seconds)
  done (took 9.406082859 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.339238205 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.336422808 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.365191081 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.330171478 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.342686658 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.354771119 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.354611399 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.370634834 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.341884114 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.33382813 seconds)
  done (took 64.714540819 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.348065237 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.329165847 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328707136 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.326390828 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.318311836 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.317826461 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.327408289 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.323671859 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.359299543 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.469876685 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.349533548 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.33523103 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349159192 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.332474338 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.32824689 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.364527333 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486788222 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.34766238 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.32525246 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.33436959 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.33091908 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.417898784 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372670625 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.33172719 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.470133911 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.396356468 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335095794 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.336738651 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.468835922 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.35178062 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.331824064 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.33329567 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.331898712 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.935589534 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.847899286 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.342134116 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.370592523 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337041975 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.331123935 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.449116142 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.350922789 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335070505 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.320421199 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.812715703 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.491933555 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.453963814 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.781968196 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.334159114 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.330633209 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.39707364 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.333650298 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332608188 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361479618 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.135703781 seconds)
  done (took 112.439278915 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.348120136 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.807770036 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494218542 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.352319461 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.159154355 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.988878959 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343903018 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.650785024 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361829727 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319694201 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.674949484 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.867287412 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.350996999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.331189958 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.032285494 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.417878688 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327142272 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.126653704 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.343452571 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.325032395 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753454539 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.353015457 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.328059575 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.483536402 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.363156907 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.836069685 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.026290552 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.813126787 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.347102503 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.320362381 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825679256 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.34767806 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.33120445 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32579615 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.610665906 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.730352125 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.727031279 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.342419734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331524055 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320844029 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.350395944 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828643812 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.734669201 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.341750117 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.325614445 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.858716243 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.337195069 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.329537875 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.328313991 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533261458 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.319194235 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.329883548 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.015440926 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326020562 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.668470322 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.363614747 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389690597 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.866012098 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34155114 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.434775582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350072836 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.32629463 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323345168 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322200517 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327795877 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.703851017 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.881229427 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32706468 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.705714608 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839045328 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.357544831 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.876678819 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.22362865 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.348500115 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.394562829 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33660506 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.916922896 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.861368576 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.367092979 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327518662 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.687821928 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.34452671 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.660798631 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342987814 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325602724 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768880562 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.355862792 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.358571862 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.337763803 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.323728441 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.951763113 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332360942 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.630137561 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.40427174 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.326761787 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.331933813 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.36883111 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32500855 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.342519753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.331841743 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886834434 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.351219716 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.644617456 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346781735 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333632788 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.332508637 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.331532721 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.33331995 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553235808 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.763482368 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.328078997 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.333678455 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.329219791 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.34007262 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.474064069 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.333690248 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.666545823 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.344543873 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329956008 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.329036512 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.019317668 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.351791208 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326680858 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.331431592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.19610188 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.556009502 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.348537355 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.346040741 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.335003109 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.347199306 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.90117654 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336955973 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.355326883 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334568179 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070813819 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.394215742 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.362940077 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.984538884 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339361258 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.332815409 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337793495 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333947084 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.664074715 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.620104816 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788908971 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.329958548 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.331487688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044509309 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.397665841 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4728405 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.348612669 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.355583927 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531183002 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.8277081 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.332089528 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.914268579 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.331921249 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55486083 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.336310646 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.664157945 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.856090487 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.350152681 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.344968067 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.074117627 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.032685904 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.951853911 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.333841288 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.680020903 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.34865719 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.783766198 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.330588375 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33426127 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.770965904 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.339152217 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.334869053 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.334576732 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.336878697 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.475080194 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.511982547 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.195457377 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334262977 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827994276 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.361712871 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331979165 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.338029692 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.332604852 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.689433784 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.417467189 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.334041801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.371140166 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.336780277 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.333560687 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.838830707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.269224792 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.339940481 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494245198 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004136516 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.354133251 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333809647 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.913308726 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.577186276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8755866 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.369987369 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.67502082 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.358582606 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.37665841 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.105436578 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.371498937 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87749962 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.35172324 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.350174385 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961846988 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.354165411 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682290996 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.333442825 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.337615946 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890851778 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.349459178 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.336298384 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.921114913 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.337831202 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601168293 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.339214651 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.361455683 seconds)
  done (took 1115.531862719 seconds)
done (took 1391.324905633 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.334079509 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.334337627 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.323646016 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.340795627 seconds)
  done (took 26.588060432 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.353289128 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.347121272 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.35114924 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.349830071 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.351884726 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.347850589 seconds)
  done (took 9.360487667 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.520070858 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.335832483 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.342833306 seconds)
  done (took 19.456016524 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.591449876 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.714601988 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.74749331 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.76027034 seconds)
  done (took 11.073812077 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.350560716 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.348852561 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349955195 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.351200472 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.354159851 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.35349055 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.35126362 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.352540469 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.355115633 seconds)
  done (took 13.424464579 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.698939436 seconds)
done (took 86.852952223 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.85501634 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.359969447 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.382836956 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.077146245 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.326424856 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.04927058 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.460118202 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.414286263 seconds)
    (9/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.353007595 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.619328708 seconds)
    (11/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.437677807 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.387008463 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.344655372 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.402346647 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.324794635 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.850078463 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.39253573 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.342808195 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 5.400415871 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.379335558 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.511571622 seconds)
    (22/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.16786634 seconds)
    (23/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.722431885 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.838564909 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.781179586 seconds)
    (26/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.754162386 seconds)
    (27/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.027820224 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.113458981 seconds)
    (29/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.756812979 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.014984495 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.66883089 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.386665479 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.105498652 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.24419989 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.326461144 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.419458661 seconds)
    (37/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.430045116 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.338699097 seconds)
    (39/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.365915612 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.858087416 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.47499336 seconds)
    (42/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.333782618 seconds)
    (43/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.27197398 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.344048921 seconds)
    (45/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.361868621 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.857386334 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.345390996 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.54344178 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.366265862 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.066624221 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.457774533 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.36461594 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.628678787 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.414041472 seconds)
    (55/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.603709467 seconds)
    (56/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.360392243 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.342254887 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.909088931 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.411158392 seconds)
    (60/309) benchmarking ("sort", BigInt, false)...
    done (took 6.348913689 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405014783 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.461503682 seconds)
    (63/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.100231069 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.376266327 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.910819559 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.766443691 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.323558602 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.350957193 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.387817445 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.42957718 seconds)
    (71/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.299416734 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.65520745 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.265335241 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.349497888 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.732410328 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.228690699 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.30106011 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.376986501 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.745394052 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.711332375 seconds)
    (81/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.442003926 seconds)
    (82/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.540438479 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.021738416 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.056692066 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.350993349 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.627357508 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.411502303 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.01387498 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.452351465 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.995121925 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.370700206 seconds)
    (92/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.908213606 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.377754767 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.997572622 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.351670514 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.660896349 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.305139557 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.337670512 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.985322875 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.973761279 seconds)
    (101/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.349567717 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.749636796 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.326152365 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.417139796 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.36033494 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.352535598 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.349329953 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.129859847 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.524184944 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.316608193 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.557244021 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.358981148 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.378743099 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.911416423 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.86037988 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.369496138 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.490693448 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.612738216 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.363757422 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.002767632 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.346012713 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.252114151 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.314657006 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.359681185 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.357487413 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.438802725 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.391144505 seconds)
    (128/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.418341818 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.541085365 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.329557351 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.387101691 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.414562899 seconds)
    (133/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.630643002 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.67744788 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.602406648 seconds)
    (136/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.591438526 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 1.891725219 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.854714328 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.393681773 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.397662041 seconds)
    (141/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.360129831 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.158720667 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.99919545 seconds)
    (144/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.957734385 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.647970014 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.627791337 seconds)
    (147/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.759226431 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.236078143 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.438925901 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.599764549 seconds)
    (151/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.37457485 seconds)
    (152/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.242902235 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.362294364 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.480551207 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.34011439 seconds)
    (156/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.935415874 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.488029607 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.170620479 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.458872408 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.47897021 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.397670745 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.524979589 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.254462617 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.020057719 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.378554075 seconds)
    (166/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.268051512 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.967472417 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.426696649 seconds)
    (169/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.432181407 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.789374032 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.336446073 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.378051445 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.352266059 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.090344865 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.709774761 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.349702979 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.435606302 seconds)
    (178/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.030165037 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.33862137 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.787535355 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.369529572 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.347342981 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.788904461 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.733144868 seconds)
    (185/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.366527087 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.963877665 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.446402581 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.854174265 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.691536859 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.251074674 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.353249798 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.989421133 seconds)
    (193/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.543010545 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.375985121 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.428515431 seconds)
    (196/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.460282611 seconds)
    (197/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.478765263 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.308211826 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.666139028 seconds)
    (200/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.38976935 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.393590886 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.333227412 seconds)
    (203/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.85635227 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.356136763 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.639542113 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.968421301 seconds)
    (207/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.383739048 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.785795523 seconds)
    (209/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.964200557 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.373104867 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.20029663 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.591812636 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 4.39276012 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.101550457 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.463807489 seconds)
    (216/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380257351 seconds)
    (217/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.399899976 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.421319068 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.337113344 seconds)
    (220/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.442319062 seconds)
    (221/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.880322015 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.015307354 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.366509144 seconds)
    (224/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.062601818 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.054361797 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.335258202 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.083616275 seconds)
    (228/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.414476072 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.918826558 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.351600095 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.419261841 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.960508554 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.376625318 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.230079377 seconds)
    (235/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.553295034 seconds)
    (236/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.69393346 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.268107864 seconds)
    (238/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.57768631 seconds)
    (239/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.637412286 seconds)
    (240/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.259164154 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353884656 seconds)
    (242/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.020469026 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.351911077 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.421107301 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.840500701 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 5.74369007 seconds)
    (247/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.461344239 seconds)
    (248/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.381653351 seconds)
    (249/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.395206799 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.45948303 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.802397038 seconds)
    (252/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.749305436 seconds)
    (253/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.444202382 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.357501878 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.01918799 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.360060248 seconds)
    (257/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.415458697 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.361896858 seconds)
    (259/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.559251811 seconds)
    (260/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.697524709 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.926844085 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.360050473 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.882021321 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.380037467 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.801580855 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.696118292 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.407890072 seconds)
    (268/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.463084342 seconds)
    (269/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.481577309 seconds)
    (270/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.594666408 seconds)
    (271/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.183852869 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.369243423 seconds)
    (273/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.482677638 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.386085194 seconds)
    (275/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.356067534 seconds)
    (276/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.388688715 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.747856957 seconds)
    (278/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.392727694 seconds)
    (279/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.488760045 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.74543301 seconds)
    (281/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.048320576 seconds)
    (282/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.031944075 seconds)
    (283/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.038555724 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.37075634 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.38710874 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.446369941 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.444893308 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.479617675 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.597304886 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.404446631 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.204489763 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.380844843 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.404235437 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.341444553 seconds)
    (295/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.371855941 seconds)
    (296/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.049957546 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.38789999 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.990199168 seconds)
    (299/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.215674153 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.335637806 seconds)
    (301/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.562358779 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.009234718 seconds)
    (303/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.463660837 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.386885091 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.386951593 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.184663493 seconds)
    (307/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.855539023 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.444342249 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.249290161 seconds)
  done (took 950.45331987 seconds)
done (took 951.708834329 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.396155774 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387864517 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.373573881 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.391661125 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.485008357 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.39812684 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.385224148 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.378150495 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.420279263 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.422449837 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.373377359 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.396476428 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.376526098 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.374272436 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.37168779 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386443345 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.54122069 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.371699982 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.387342862 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.38057014 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.386796337 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.370359388 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.422854179 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.400403542 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.374142575 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.374541258 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.378324772 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.39368134 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.48529322 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.376895547 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374939468 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.386498312 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.563169473 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.3734048 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.366446297 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.393213598 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.3857807 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.383869922 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.376425025 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403819936 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.033527811 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.39211215 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.37687653 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.374981992 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.373577083 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.37765638 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.376294889 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380095436 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387639197 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387305438 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.981333015 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.403141461 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.37640687 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.37480556 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38723866 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.371978089 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.380532705 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393197412 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.393524189 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38984798 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.500824092 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.376142285 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.378913826 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.388847275 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.383833993 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.989212781 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382824906 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.382372921 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.956992395 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.393695557 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.980888473 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397683716 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.379223419 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.390992174 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40473734 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.508124323 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.370558605 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.373550631 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.384224489 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.376233546 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.383793103 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389092319 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.385579627 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.379143073 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394120889 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.407289163 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.388140903 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.382123743 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.389807508 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.396853 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.382671621 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.38415033 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37718819 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.37147203 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.388053937 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.378909206 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.381313381 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.381817291 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.381094147 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387184447 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.958587291 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406538828 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.373497318 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.375393457 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.37946578 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.393689938 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.957295515 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.391732014 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.400902885 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.428756661 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.382003725 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.501805532 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.380496946 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396381426 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.388593278 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.383821857 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.377128398 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.500454584 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.949209111 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.406239393 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.381317626 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.381751621 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396744594 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.383449694 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.3762224 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.516072527 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.378896877 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397008671 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.503777013 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.392575505 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.41471971 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.378283613 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.383828289 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.412387027 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39759757 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.41287274 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384215127 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396074733 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.397951103 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.38149697 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.395991242 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.392277677 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.382251323 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.388454416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.374038582 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.405880184 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39281188 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396113823 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.399677108 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.502718193 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.372179935 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.504385608 seconds)
done (took 234.278758908 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.438191645 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.376496572 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.460457265 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.375998242 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.480949886 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.481094023 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.373643343 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.375104344 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.376864046 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.778457783 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.375145777 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.373357851 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.36585292 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.37753062 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456556192 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.381017392 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.377132384 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.722057706 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.378262926 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.447537171 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.375822271 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.375051249 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.380067573 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.763104155 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.368381079 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.374772576 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.448420972 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.377210177 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.724877186 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.380203973 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.376183874 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.725813979 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.466705508 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.395026081 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.389295412 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.384040701 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.483228452 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.399014996 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461740385 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.463255929 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.461952755 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.416509945 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.378353759 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.37825994 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380162456 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.380444836 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.377107422 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.408705371 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.38086136 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.375533256 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.717014687 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.387619379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.385581201 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.377961798 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374764124 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.401123558 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.374546592 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.379557277 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.470620897 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.38033886 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.440260595 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.75842501 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.75432645 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37968951 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.381257092 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.380352227 seconds)
  done (took 151.450878414 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.44548994 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.449976802 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.502756189 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.396217235 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430137413 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.508137267 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.394927826 seconds)
  done (took 11.416457841 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.387159539 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.384098362 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430469644 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.433596841 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.384089969 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528907187 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3869042 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.397712673 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.380740829 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.436008385 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.388881491 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385288968 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.390862264 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.38194362 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.432262021 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.395238096 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.499339698 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.381534661 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.38605245 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.535507252 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383911107 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.393290138 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.434418415 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.396024439 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.386160763 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.392853027 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.953280794 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386304895 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378829791 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.384911053 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381718319 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.423698074 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383478683 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.382690376 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383305079 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49900561 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.384304399 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381507111 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.389819321 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.388353321 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.387791922 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.385534079 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.387644176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.384606545 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384161109 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.405591506 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.385063065 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.386966427 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.388076961 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383033428 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.438347609 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384860567 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.382591202 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.382583266 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.4373743 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393226024 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385120568 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.380609593 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386727198 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384962264 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.538232462 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.432042358 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.385658155 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.433459639 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389893534 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391326672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.383297115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.391156632 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43761529 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.387409024 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.432194277 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.382022498 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.541432947 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.409969128 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387963861 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.389596109 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.385588888 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384692102 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.379211478 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.39278471 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.385599717 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.384137539 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.393729087 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.384326224 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384539247 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.487055401 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.493665022 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384583945 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.400180052 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.392950249 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.384945356 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438816615 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.385936381 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.384586821 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440912362 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.501361854 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.442726185 seconds)
  done (took 158.268953367 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.389452541 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.396487938 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.389877256 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.408763288 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.38871345 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.386599599 seconds)
  done (took 9.654945682 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.389982225 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.389026026 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.389160616 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.388860805 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.383519819 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.389725563 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390683537 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389053581 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.395218888 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.387590611 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.392379426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.394353105 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.388473101 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.393863546 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.389059996 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.390161821 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.391288592 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385249591 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.390472233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391379167 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.494421188 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.390110533 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387659344 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.388222343 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.399701605 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.391967598 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.398548854 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.390965895 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.390036332 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.40100644 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.411193677 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.391692468 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.395963964 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.397968717 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.397688094 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.389796707 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396481656 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.39251793 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387426998 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.391661168 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.391847286 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391815418 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.391514722 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.392765906 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.393063065 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.394992808 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.39965429 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.399374062 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.393272429 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.392221319 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.393002822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.392519907 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.392584101 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.396036685 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393419998 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41536989 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.39910039 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.391975889 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.392413423 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.392166756 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.39830457 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.39274555 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39598109 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398804142 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.388237953 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.39680763 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.390849414 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397627991 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390460027 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.394844439 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.395066752 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.388205449 seconds)
  done (took 102.708564561 seconds)
done (took 434.779607093 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.568242075 seconds)
  done (took 7.867084334 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.695848877 seconds)
  done (took 7.998734721 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.954094789 seconds)
  done (took 24.262089336 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.434516407 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.469169426 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.398544389 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.388533015 seconds)
  done (took 26.992250933 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.493326748 seconds)
  done (took 7.795988929 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.386933143 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.382712526 seconds)
  done (took 14.072862211 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.655716376 seconds)
  done (took 7.960381927 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.40233954 seconds)
  done (took 7.711267224 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.404537752 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.415067781 seconds)
  done (took 14.139543172 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.372399494 seconds)
  done (took 7.670903055 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.648312494 seconds)
  done (took 8.950904987 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.392750533 seconds)
  done (took 7.694768485 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.446479875 seconds)
  done (took 7.750996731 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.177885006 seconds)
  done (took 10.481087563 seconds)
done (took 162.644754709 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.38144026 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.390018181 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.39026083 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.389710809 seconds)
  done (took 26.85121718 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.436263067 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.427382528 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.427935968 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.441683266 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.904296979 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.429655905 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.420527004 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.419944327 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438590594 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.429726041 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.429456512 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.431148317 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.427646565 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.420954906 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.429430229 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.431439923 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.436377772 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.433781791 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.426233591 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43031991 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.394230147 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.438996227 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.431890582 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.397779135 seconds)
  done (took 36.039224993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.915926962 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.465260858 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.545981926 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.444379225 seconds)
  done (took 7.674727991 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.443879773 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.447823057 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458283199 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.498304451 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.522580893 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.453190662 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.422879545 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.414911348 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402177918 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.451475697 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.525224431 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.467625962 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531329295 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.39914255 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.583952032 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393612163 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.398384584 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.448582449 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.500224209 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.525258124 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.396417274 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447086611 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.463306262 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.467708146 seconds)
  done (took 36.365304014 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.409952749 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.405201544 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.39420722 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.398498987 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.421695668 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.396818754 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.399407813 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.402237291 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.398071998 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.403744587 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.394822311 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.409942736 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.398046822 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.398521609 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401021491 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.397145741 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.404293283 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.399434218 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.402806067 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.40128117 seconds)
  done (took 29.342451371 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.390625495 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.24529252 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.737819963 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.647887034 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.391509244 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.394548818 seconds)
  done (took 28.112917441 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.472946229 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.642070424 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.395706878 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.821567928 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.927132328 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.420760921 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.40115254 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.665613408 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.041799414 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.034728263 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.468875095 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.475180876 seconds)
  done (took 21.074789554 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.392780565 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.389717693 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.406659228 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.411373318 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.466592117 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.422119058 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.402698649 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.398641609 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.467731993 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.485529225 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.421599015 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.463678985 seconds)
  done (took 38.437156518 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478675157 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448516892 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.57106619 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25208594 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.124356671 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602233177 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.307740799 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.854845704 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.400541147 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670761472 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405587856 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490287283 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652648399 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39458868 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39948637 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.501244194 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645394673 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938080152 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392259074 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.76905002 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424608401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398777817 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.970796432 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.433867632 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610283077 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.385071288 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.658688743 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.180001566 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721618156 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404753892 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412778183 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397439229 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676556497 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122013135 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517342928 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405628082 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28402106 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.946945961 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.400051579 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.862069391 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403492547 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401643229 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408049911 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395130164 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.334286867 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405653352 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86917651 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405735944 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.112786219 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40446713 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411313127 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494735483 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.405559473 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.973264102 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481516114 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.404878893 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.401932014 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407768056 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967089933 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.346153544 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404218392 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.335002008 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.894458444 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.875714152 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095229355 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.514874494 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.403714083 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404794443 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336828791 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.864367469 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416223828 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53803127 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.423849238 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06358124 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221369056 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423267181 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33537143 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002182105 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409254319 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.340220763 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625675657 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178298078 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33923358 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.349506134 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332249403 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196747157 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408399612 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.915345696 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410210821 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855758648 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.415658406 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424349378 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427043655 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625253118 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.279282065 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404662568 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.407096372 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521834084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420821052 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.865092752 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340856424 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.401538656 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663587496 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.610195512 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398212171 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.544553134 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652000814 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419571179 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.420017201 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410838726 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.414995562 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.049957128 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430244858 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353254495 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423204658 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.182876528 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240584556 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415774531 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.506538133 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.407795838 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684001365 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.264896557 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298223327 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46821916 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40679577 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404840062 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.891388621 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257401564 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.563133332 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.40280812 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409513597 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.4167898 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.405640673 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36103258 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.394933566 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400755419 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.189846632 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629021881 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399549252 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679254776 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339327991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540452236 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418654058 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625834118 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.774520739 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.424578795 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666686839 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41332474 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408737674 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435102936 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423434033 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502055601 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424033237 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.41949335 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662954481 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.404912418 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.412376417 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898431522 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.187196799 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406568639 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.405739447 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320237964 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056989345 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400809563 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412896805 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301528547 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.424263751 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474235796 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41311805 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.415024491 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.490640628 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.409019193 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.41268626 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.413570052 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633631608 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422244326 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.923951518 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494054986 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.631135633 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069796784 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441623839 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.344951429 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.116744449 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.097851115 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411297491 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.595883487 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405264076 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416089261 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417489908 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.080453909 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.06745469 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428365223 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.800620425 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.415197587 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420610725 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.413615158 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403820882 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.479700202 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402186822 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427371141 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.423269743 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54884435 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.422018821 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342440008 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.924210247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414987986 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404642916 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.181958366 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43939499 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.817030454 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916655268 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666808002 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.257625904 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423623533 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.938477268 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.448119644 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.420162771 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413806848 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417727542 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.436217239 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418966089 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.422296256 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.884174948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.861326379 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974411049 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20025964 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038910108 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51898936 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.420845104 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298814988 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8779418 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348214959 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069789285 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622367271 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896526418 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369659223 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629793457 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.788761641 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30641451 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422046697 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641797077 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486843804 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.421429314 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428239765 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622399189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445129542 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417145708 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.339878431 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.920546139 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665588541 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425575074 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493538905 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877719979 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41758211 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.210229158 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.410969921 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.930257145 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627082422 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.961674305 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.806080848 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417686343 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414852767 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921845807 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413764374 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.940874025 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094403582 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438507688 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.64002042 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35675998 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.421128141 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.417225599 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.409826723 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.001913561 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.416259519 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.673769888 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423622831 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351963068 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407548061 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018743122 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.288051308 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.422415158 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413689914 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297159023 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419697009 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739375639 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.429494647 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.484046824 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437139811 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.350003787 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345323453 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.106343891 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418697966 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382032028 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975476763 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.851010023 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.479315385 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434015986 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268265483 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674545586 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.424886084 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070228935 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655239551 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.378801094 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441064982 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.516776955 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427746868 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.400567129 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.315737942 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649227103 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324236791 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635716 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.615303896 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.321426843 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417041365 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631098927 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.32592959 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426285543 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695317732 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.145856004 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.428885795 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191873609 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455866219 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423634738 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.436011599 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.912000116 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424497438 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48380161 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424441098 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.427203304 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.425390508 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615994417 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419055726 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441159991 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.430904614 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510850152 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.423200316 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.491480358 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.19515705 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077567413 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238447084 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084566142 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445383957 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416282004 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41573918 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349452243 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563816984 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.949660062 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69389752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537300672 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.037782566 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445974573 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420116453 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421695501 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634163631 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696471313 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295236069 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424098687 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088157657 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.302806279 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433332563 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632874552 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989030734 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046364109 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541767152 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437157927 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88169522 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696626973 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51245679 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421609817 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015900821 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.439925253 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.94246041 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.448507922 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426855012 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573118494 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432533208 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153644955 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.456961103 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.579033545 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.193887064 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.855941219 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682814094 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.022150714 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.435051956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092692665 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242359679 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689578389 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49024534 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432904846 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.536384536 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563076917 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.426719881 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309090052 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424521858 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269688528 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.134457671 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.431952426 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077933541 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70024622 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.416060716 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.427440102 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449380965 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.435961814 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.649829174 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.26146505 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651784023 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438457629 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43026773 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000754598 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09359421 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459378572 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35918194 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.420743907 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700605434 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680533639 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447105119 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.872251559 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.132577319 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040406759 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.396709752 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449742934 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437851311 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232494434 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091414074 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.523736494 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999854857 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080697806 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436765413 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701989446 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.429687815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423607081 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704541866 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.428534123 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427467375 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440738582 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.101382266 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334096948 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.438935662 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.893272442 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.363662483 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654619561 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147204772 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367788166 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431686617 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.626313043 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428718354 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545559203 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433277575 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.431282281 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430551149 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181958025 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722996365 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.429002595 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.424516925 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.425410484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447155886 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436532467 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6887099 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430609477 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.10209787 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.781012258 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688918333 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.42337908 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.431301262 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.435222024 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431631026 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15644833 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402057249 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.108077302 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068322942 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.440301666 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.4438538 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432331014 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.648103316 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642843887 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.4324202 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445047658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433072635 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44707588 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.564807962 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214723859 seconds)
  done (took 1641.228068931 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.465060504 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.466994057 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.460687452 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.473918254 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.486572846 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.489678153 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.49323401 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.549552901 seconds)
  done (took 53.225462258 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.441109154 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.589325807 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.466889789 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.441531272 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.442349967 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.443443316 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.944252628 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.452996273 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.442500433 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.442985256 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.432314921 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.445805957 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.179172939 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.443737437 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.432597348 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.424528919 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.439239502 seconds)
  done (took 67.249252927 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.446369167 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.032592751 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.474076533 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.437272987 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.047171334 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.446522811 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.054836297 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.449137119 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.430474787 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.49820954 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.08405922 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.468820406 seconds)
  done (took 82.212315943 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.4406692 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.441601216 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.442873898 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.441148866 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.442033064 seconds)
  done (took 8.55117564 seconds)
done (took 2077.664979263 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.679136169 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.243652093 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.159291645 seconds)
  done (took 5.742615275 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.581345108 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.626428775 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.801598296 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.79771245 seconds)
  done (took 8.149361935 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.710985172 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.806926155 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.625169251 seconds)
  done (took 6.483518841 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.048441809 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.448910415 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.581496845 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.433693403 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.43038251 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.434965762 seconds)
  done (took 20.641929149 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.438176525 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.439862279 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.43667875 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.438685026 seconds)
  done (took 7.092779508 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.41452938 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.139883625 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.407950165 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.424003162 seconds)
  done (took 18.725557682 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.186384475 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.197649966 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.179452015 seconds)
  done (took 7.903445968 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.438057113 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.277867744 seconds)
  done (took 10.052508735 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.748474251 seconds)
  done (took 3.089917165 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.568842785 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.769402973 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.627529231 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.528490145 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.612565801 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.950687976 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.373508706 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.883158184 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.506992053 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.008147449 seconds)
  done (took 31.171341959 seconds)
done (took 133.147165925 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.706837499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.823844148 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.635286556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.67315483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.658128822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.641062708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.704812202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.638006402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.422397409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.173428327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.707104387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.657038445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.880044263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.826782764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.881826499 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.451707531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.660276811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.747757672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360505799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437963914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.70347385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.30959447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.539276756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.579451309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.664142134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.581768487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.886187049 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.45511454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.43910216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.161172717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.58576006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.438403585 seconds)
  done (took 201.374296913 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.443582122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.429503039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.448165793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451759233 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.432016662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.436594955 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.454673353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.4293341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.462346583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.431092111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.448847769 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.438181448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.431003318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.459655202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.430725392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434220725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.438894479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.431223553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.441456787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.439883521 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.432160524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.46079904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.432784864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.450855741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.454829009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.430609299 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.430775253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.430034854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.429294549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.462959084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.439582881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429703246 seconds)
  done (took 207.444481389 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.444438479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.439063945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.432976732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.452575144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.447308201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.439007596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.43281619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.459793975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.430490033 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.44007656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.446492679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432647131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.434089563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432130276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.461681993 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.433006194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434388194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.443799301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.442490829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.431380036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.434192182 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.469711172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433568116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.463473708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.438521383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.434544221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432518934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.434704834 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.450081053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.443705685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440162267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.474724406 seconds)
  done (took 207.508463223 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.637133745 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.447885845 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.45545309 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.390567867 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.450663262 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.447704051 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.447905598 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.673733681 seconds)
  done (took 15.300781334 seconds)
done (took 632.967788103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.929509401 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.666437712 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.660246456 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.466810899 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.361022037 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.485804423 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.464309905 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.662214096 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426875636 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664821522 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.816551107 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.475647299 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.962706661 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.460595188 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.744047149 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.572715484 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.394385756 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.538476669 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.812060131 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.132693324 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.755966283 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.103954529 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.680095062 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.43094809 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.051540499 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.103732041 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.32595043 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.382473138 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.478681019 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.820490329 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.378194721 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.585597662 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.538977576 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.53327627 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.589916636 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.576441877 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.567497829 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.535637639 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.684311451 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.858949669 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.074528448 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.228540378 seconds)
  done (took 99.331961961 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.431978166 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.429199374 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.428845013 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.432721134 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.429586813 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.432577193 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.430481635 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.430768342 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.431400186 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428880589 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.431569617 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.431164575 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.431667666 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.431255417 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.428556975 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.429991218 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.429322291 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.435811924 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.430704126 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.430846422 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.433820276 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.433094881 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.434154071 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.43170958 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.429837073 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.432618767 seconds)
  done (took 38.566014857 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.452978632 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.728659979 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.896720666 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.45367361 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.453126483 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.458350948 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.544015643 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.452780256 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.457627276 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.455122823 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.637002355 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.45175031 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.495518478 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.931644113 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.449311816 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.454594829 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.455482401 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.453309791 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.736670044 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.462735666 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.572031919 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.4515742 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.548501108 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.463527864 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.481828488 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.457414478 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.458255331 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.985925152 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.474485676 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.642858986 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.37511587 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.545287568 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.93467683 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.928376191 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.36595609 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.45845865 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.455926793 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.648451384 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.458043466 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.456086447 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.548755565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.454921498 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.914659828 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.097605177 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.470230763 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.460257142 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.014959381 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.662900523 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.748764401 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467311249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.933897302 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.45491012 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.4606518 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.457379911 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.746560343 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.466321978 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.456115286 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.017979366 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.476169076 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.546496848 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.461308742 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.459036138 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.740387374 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.458176856 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.730315252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.460842336 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.466173312 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.474666957 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.920606331 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453926512 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.134405458 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.477741579 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.459588038 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.640047835 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.728689802 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.048739027 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.478940204 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.742535768 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950654983 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.563772049 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.458906572 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.975346457 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.569319825 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.460373531 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.457818915 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.463749418 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.460395053 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508834517 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.550732173 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.059232555 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.13958308 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.053660307 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.572610735 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.470637809 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.460619928 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.028917078 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.474299174 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.459462642 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.917362489 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.138127457 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.480228343 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.467551496 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.138160581 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.482858453 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.551669865 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.465305439 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.929902482 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.463014365 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.511224225 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.459058723 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.465513195 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.482155037 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.560906966 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.466095385 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.461444076 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102140631 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.675757747 seconds)
  done (took 191.951946759 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.464042336 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.44671492 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.458747301 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.446548453 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.452626844 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.460529505 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.452980314 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.450839532 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.459393157 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.455476879 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.456991377 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.454930101 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.45508716 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.453097879 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.457564274 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.460958788 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.066376036 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.451972519 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.457409328 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.449507004 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.277703482 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.45972042 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.453209276 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.449357386 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.453861118 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.455387025 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.456681856 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.450755443 seconds)
  done (took 155.531895366 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.463370815 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.140865762 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.481762476 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.614802967 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482778081 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.460197105 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.613082956 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.530910165 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.47805223 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.45918878 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.458319985 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.812622464 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.458705244 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.085691399 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.684148834 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.629297089 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.087108051 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.48124717 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.461340247 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.458690659 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.615298911 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.466805474 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.825429379 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.143259261 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.481511484 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.140362994 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.448220075 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.463160574 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.460950009 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.147407479 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.478309397 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.83025661 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.553162122 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.535712699 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.160152785 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.103491568 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.103146438 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.634574312 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.45795071 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.461199898 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.460387788 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.445636813 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.146455467 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.485210519 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.463559058 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.135529257 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.4883973 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.464093808 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.46963666 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.462769192 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.533793276 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.550937105 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.844626134 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.154305809 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.575519013 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.486845783 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.620966782 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.872532385 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.46987305 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.090144504 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.446208639 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.15373609 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.484276244 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.448968151 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.463549336 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.471330011 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.640460659 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.625188826 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.092915899 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.478572106 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.067297666 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.656786213 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.466666704 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.467224485 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.466848509 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.153132456 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.080915444 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.655352509 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.627198256 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.691990156 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.451740794 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.46270293 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.450068413 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.554541728 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.468867599 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.153648336 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.108440962 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.486426092 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.466601882 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.468062492 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.465823839 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.671759069 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.173142811 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.579527876 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.084840997 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.854612373 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.837406436 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.468342106 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.537307732 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.482231235 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.836309626 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.469013621 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.532013078 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.942977479 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.834880407 seconds)
  done (took 176.921732715 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.740435191 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.849820255 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.569482542 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613133489 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.136335058 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.069794542 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.843021835 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.617153096 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.586158229 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.74934385 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.801918622 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.558357437 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.66754486 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.581621261 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.252970688 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.566917069 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.590142782 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.620644403 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.592706392 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.592993421 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.172850055 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.784741654 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.665100416 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.602043726 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.571568559 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.358065606 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.063635356 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.029380178 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.66590785 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.98008126 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.039664112 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.711250128 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.560772592 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.24660351 seconds)
  done (took 71.423755166 seconds)
done (took 735.073290733 seconds)
SAVING RESULT...
DONE!
