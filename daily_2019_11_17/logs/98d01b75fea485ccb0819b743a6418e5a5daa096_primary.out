cset: moving following pidspec: 26963
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.217001515 seconds)
loading group "string"... done (took 0.535641835 seconds)
loading group "linalg"... done (took 6.944374535 seconds)
loading group "parallel"... done (took 0.15170056 seconds)
loading group "find"... done (took 1.12525775 seconds)
loading group "tuple"... done (took 1.754740192 seconds)
loading group "dates"... done (took 1.28884171 seconds)
loading group "micro"... done (took 0.217039201 seconds)
loading group "io"... done (took 0.921654424 seconds)
loading group "scalar"... done (took 36.747370501 seconds)
loading group "sparse"... done (took 11.585938259 seconds)
loading group "broadcast"... done (took 0.900587202 seconds)
loading group "union"... done (took 11.895394149 seconds)
loading group "simd"... done (took 4.355538817 seconds)
loading group "random"... done (took 9.018308873 seconds)
loading group "problem"... done (took 1.853382169 seconds)
loading group "array"... done (took 20.263309556 seconds)
loading group "misc"... done (took 1.622927194 seconds)
loading group "sort"... done (took 3.194202942 seconds)
loading group "collection"... done (took 16.982050742 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481963258 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120265047 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.110481841 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114782165 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142173191 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.107148493 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119018539 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080259938 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.7734604 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144428064 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115691711 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409872767 seconds)
done (took 5.028040954 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.168089582 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.079334212 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077231261 seconds)
  done (took 1.297380874 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061889676 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.117250825 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063180012 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063743415 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06327708 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062692593 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062367265 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063057736 seconds)
  done (took 1.636348232 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069725707 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065553395 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065236645 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064943348 seconds)
  done (took 1.409507026 seconds)
done (took 5.725811096 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.748564433 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197893438 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.179192108 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39094508 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127482286 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157728514 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63927982 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.301892723 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180573648 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077879668 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.100816748 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.313150947 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104020773 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638097059 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073780956 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086764738 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.132368051 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443635233 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.063966517 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.078513098 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.085594475 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.124856944 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.081577235 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.070806466 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14063823 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.064451504 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131896481 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.077250206 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.063151121 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.203600321 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.16876904 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652812788 seconds)
  done (took 10.08246736 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092752273 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.093876007 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064823747 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119640437 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095587863 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068184458 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069431291 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065632989 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084291679 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124793462 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086580503 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097685038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062345908 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065476885 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.081058722 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201016616 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078898195 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079164259 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068897058 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073599303 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108383171 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07735148 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076504672 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076310652 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127601709 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179249266 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09613568 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095473797 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066443529 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079407218 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113092 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125528085 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064014391 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064780183 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123115422 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093385307 seconds)
  done (took 4.518308261 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.9472182 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136143266 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.086963305 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127986466 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.061510714 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.103369569 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06212836 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076958313 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.194954124 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.412331794 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.563774453 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10706265 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099799225 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064218941 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.064945609 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.063526057 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.324454712 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094204913 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100715459 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077960688 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.066074083 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.065724241 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340826364 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067105422 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06255143 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066670582 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.055118491 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120088928 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064727959 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105326289 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.907393109 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120667309 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063063949 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097133058 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165521561 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086753995 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273078435 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067193234 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062652209 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148277314 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.066488796 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061429645 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.062727477 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080088155 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099861 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11246861 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064047272 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064822354 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.156338358 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061385555 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07525791 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.615832629 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149982094 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075264874 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062616845 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.250895716 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084468397 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067507542 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06315291 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.215725116 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13243111 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060705501 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.063943898 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.062983129 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064396527 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.065778773 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.345544484 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.062362017 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.007295527 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.064343911 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073467969 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.065231773 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066026001 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072126472 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068868465 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.081444591 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060994365 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.062832566 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071863705 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062524727 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062832505 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063384661 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081147893 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35180908 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063552432 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064603606 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061358732 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.083023641 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093791438 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063319291 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.061757062 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096269342 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064880282 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.062886487 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101676689 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.062969359 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.080701487 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.065487049 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109505814 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.165031798 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.116282313 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064006804 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094299743 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070660084 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095464952 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07743617 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06488503 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.389374744 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061242375 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.061395998 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065110028 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.061897675 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.064222372 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.062929086 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.075728276 seconds)
  done (took 20.52616705 seconds)
done (took 37.21647735 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.227486516 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07157614 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074671184 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072010685 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.071627174 seconds)
  done (took 1.745626233 seconds)
done (took 2.954732039 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.115921806 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094441645 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.061455615 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091466247 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060453555 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096215964 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095056402 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077196155 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095337149 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.060652275 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092105437 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.060910294 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060450913 seconds)
  done (took 2.289465093 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079166805 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079643078 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066412637 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.078560197 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06030045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.078214494 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07706717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08491391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077567041 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069247313 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060613934 seconds)
  done (took 2.014304167 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.078195199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.080672186 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066402169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.078244968 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062773749 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.077720613 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077460603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.081898215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07778793 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069995212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060472259 seconds)
  done (took 2.016038963 seconds)
done (took 7.516763968 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.073584495 seconds)
  done (took 1.270039508 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582012047 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.051386761 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07775926 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108555805 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.179293794 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115741906 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271543434 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08321518 seconds)
  done (took 8.843379954 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085008405 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077610203 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067354763 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065579359 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068550382 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067773374 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066459217 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068388445 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064870893 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066107253 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065003695 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065542549 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067767431 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066371193 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068467947 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068672174 seconds)
  done (took 2.367747099 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.088348044 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.086896171 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070203522 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070957031 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068779335 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068549738 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070559035 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069945495 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067546584 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068330061 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071070654 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070012596 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068045389 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061448281 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070314891 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071992507 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067590135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070486916 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071365566 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071258751 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070916483 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060801547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067611693 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070033194 seconds)
  done (took 2.995173762 seconds)
done (took 16.680391354 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109974192 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067839408 seconds)
  done (took 1.380877871 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078363098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079725378 seconds)
  done (took 1.367794324 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08074379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062304163 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087541005 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075578045 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062621065 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06268236 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085452608 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062813275 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062375072 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062563152 seconds)
  done (took 1.914531954 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065100925 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075323727 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067588771 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078009669 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070582245 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060846262 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069127999 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064178075 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07484001 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059357581 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068523574 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078845023 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067907793 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080906906 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069496723 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065253507 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067654297 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064628482 seconds)
  done (took 2.461300287 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062647379 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063086769 seconds)
  done (took 1.341646993 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064039349 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060365205 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06331475 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06362132 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060106776 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059122417 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.05993795 seconds)
  done (took 1.64350997 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.365827369 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.105818346 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291704641 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06718873 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078203852 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244851808 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06180741 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066827371 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066830953 seconds)
  done (took 2.605051337 seconds)
done (took 13.932439278 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.074229532 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08137975 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.092066395 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.353518662 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087851036 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062295424 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110233413 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18587184 seconds)
done (took 2.273463523 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206580354 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.600917121 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.38360991 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192493143 seconds)
  done (took 2.393175836 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.320811284 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082663748 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.055596628 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064336915 seconds)
  done (took 1.748361006 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062485519 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065630316 seconds)
  done (took 1.350513805 seconds)
done (took 6.922104986 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06286262 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063097307 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.059976439 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062707872 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.060802409 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060004434 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081267807 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062683766 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062370812 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060217032 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065350722 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.062401025 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062813959 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060179331 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06008123 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062748197 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062465186 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06032577 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060363039 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060511589 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060130837 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062936788 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060568491 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060391247 seconds)
  done (took 2.753869858 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08008665 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063177233 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068439551 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067648179 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066686105 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067514316 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067611286 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062850165 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067616426 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065066956 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066408414 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066871369 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064757433 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066673462 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06505695 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066980541 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067954954 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062942143 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064895889 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067121994 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067591304 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06286098 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066416487 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067612258 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066133648 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067838695 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064918807 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063303068 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067856405 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066195782 seconds)
  done (took 3.227774007 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066341383 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060112754 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06065519 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067117299 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060058672 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060950998 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059858776 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060918056 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060850902 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.060609369 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061619355 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060038214 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060432077 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061404771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061001663 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063690353 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075161894 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060438085 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060475486 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06150935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063480959 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060020135 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.060289767 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060462438 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060227689 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059811719 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060485888 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.060304138 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.060979433 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.059989007 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063291263 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063404851 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.059807785 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066895177 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063795716 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060383961 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064097986 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059855324 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.060610939 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059884835 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059598805 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.059792964 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060235371 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066511291 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.060720591 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061787119 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060327812 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.061510341 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.060590013 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.062825152 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.060150979 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061595695 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064035155 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063179493 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066146226 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061687285 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062759873 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061807978 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062942462 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061876274 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061439704 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06125588 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064296962 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062465255 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07629453 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067485529 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060647116 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061587579 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061373236 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062406031 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062058571 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07347151 seconds)
  done (took 5.72191265 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086141422 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0830411 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061945293 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061908049 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058579473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061122526 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06456719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060873379 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061997847 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.066225192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061140355 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061968681 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174252077 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073505197 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061079939 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062002616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066382379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058749499 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060957478 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06401581 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060896979 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063810388 seconds)
  done (took 2.782086279 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14935183 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067239975 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101275094 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069785085 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064245395 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069644799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066151169 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066689937 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066615618 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065012009 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06498107 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066400234 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064237968 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064828792 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064688796 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064721602 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066705738 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064752971 seconds)
  done (took 2.548556579 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073867675 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062992877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082978446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062488534 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062746673 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064880124 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067902879 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070718953 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065595424 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062488698 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070599241 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064955789 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064925072 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062377162 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064597313 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062157805 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064977438 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062266142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070609818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067597961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066938476 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070339948 seconds)
  done (took 2.711682324 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076039352 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064868315 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078957222 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065716572 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058958816 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06129572 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06678527 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062380121 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066296675 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064180723 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062358556 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060712113 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065552144 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062371244 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06562212 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062588739 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063953373 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062893963 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06413261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05866502 seconds)
  done (took 2.53820725 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083455462 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063928959 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064385955 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072410719 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063797353 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064571872 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071856575 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064030308 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063859854 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083729992 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064574015 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063932912 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071680845 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068828215 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063681954 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071558194 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071749061 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071178486 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063743753 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064356012 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083451917 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063727921 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07141808 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063748969 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063688312 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063669198 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063698297 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068869405 seconds)
  done (took 3.159021368 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062656155 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062118947 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059940602 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060049534 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059798591 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059701675 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060117371 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059707827 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062140732 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059861462 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062168027 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062377015 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062569885 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062561243 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062531454 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062320079 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062188267 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.059816569 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059839748 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060183951 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062135863 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062226623 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062271707 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060323056 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.05981758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062243768 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059750482 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060039926 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062195351 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060108073 seconds)
  done (took 3.082839957 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072288552 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069480858 seconds)
  done (took 1.391871901 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059801404 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076286847 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059585455 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065865006 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067097377 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063431228 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069581951 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06589942 seconds)
  done (took 1.773491368 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.077648267 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.073551092 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064537017 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076025245 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.072935642 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.079185322 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127805739 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063599538 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.068976596 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060504067 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.075613304 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06199312 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068440376 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062802222 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068226651 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068719327 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060399169 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068578639 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064837851 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061436117 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063937858 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071294852 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064988394 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058305597 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063676738 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.083727447 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073164712 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062241346 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065502721 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.069738382 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068071175 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056864261 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062862397 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063143595 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060709232 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072153845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076900189 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065023351 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.070996977 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063447744 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073270918 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057839167 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067107879 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.068940974 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072638148 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063179608 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063075115 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058056019 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060295492 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.064614995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058475462 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062625837 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057794353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071883893 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06579717 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072964139 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061477377 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064326999 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065354636 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.065684516 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.06902544 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06455776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065110115 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062256265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071816432 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.066925557 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071283084 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058006737 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056825591 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060435328 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.071523952 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084125109 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.068443684 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063445555 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063400923 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06021632 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065388296 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063489712 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067909818 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.068505977 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062427655 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06817058 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069560956 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062540484 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064834265 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070734429 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06118409 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.065938204 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061405153 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078618598 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061743469 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061132438 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060827353 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073197186 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066244257 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062757741 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060785224 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069262399 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057365776 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063169503 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063473619 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06333828 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.072804896 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065928537 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06651991 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.069687571 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.069228027 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.061526564 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064060046 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058427851 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.062583612 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.0607027 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.068126526 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055825775 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063977251 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06216867 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062033905 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.069464949 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.059712407 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061523944 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.194825025 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069255721 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062368696 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05978387 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.065698092 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063298686 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066276937 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.070853247 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061916436 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.05860591 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058134212 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066444007 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063083915 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.066252152 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067300467 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066278551 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057800818 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06104837 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068153364 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072369472 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064014459 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.063606887 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0692465 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.063892884 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06305801 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.069046696 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065517195 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06242591 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.067994093 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064082767 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058577281 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065657311 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.065974608 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061776548 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.066350995 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065940367 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065127041 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063510131 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061569677 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070919409 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064143259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061936375 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063092413 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062432706 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.073326958 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064693664 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058567793 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060448611 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072023962 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061070388 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.062465123 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06193032 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064758152 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063581143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061737124 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061945164 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064041816 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073590123 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068003158 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064141576 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068040241 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.073321507 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062806954 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.064489273 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.062356194 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.063918063 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063594758 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071003943 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.067812407 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067323861 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064864638 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060079013 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067689897 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069082842 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061695773 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060349682 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061585378 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06718328 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.067743985 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067122748 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063286821 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060896706 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063266589 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065777119 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065062946 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062389814 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061661922 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069004157 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060844392 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069773563 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063417633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.072760321 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.065505482 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058031723 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065686264 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060843046 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.068513657 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058103415 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060571494 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062304676 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064067309 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061805291 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064798033 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057060984 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069191904 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069853702 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063070717 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061975152 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.062460991 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.068543323 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.062548596 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065145197 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064856847 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.067266203 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07125053 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061054062 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064840436 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.071469004 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061735683 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056333414 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.06677263 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.060474846 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060843946 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060674748 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.060017834 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.194126058 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074011307 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070300901 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057824491 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065720417 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062211554 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062071427 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058710364 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.067691015 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.066503767 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063912844 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.069468188 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064190903 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06396377 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.066831171 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063119338 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064078797 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064416748 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065677381 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064276742 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.064697759 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062728408 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066249757 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062097188 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061290302 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.064889336 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063715574 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.063387532 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068148979 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062256896 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063626287 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065346907 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06333181 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063701505 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063994536 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062054229 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065641602 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063651577 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063429823 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.064894076 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058155134 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070612171 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06278493 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070455684 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.062978244 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059683724 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070675685 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065641813 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069087976 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06433179 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064003411 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064779723 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.062208409 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.065637463 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069619802 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060860066 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073753759 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06992352 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063782519 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.065182675 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063635761 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064406528 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061447712 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063252518 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063951363 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063580201 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062473875 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067052287 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06538518 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063155187 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064265973 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063526615 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.062921081 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064203255 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057751036 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062473535 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062209955 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.062338631 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071776598 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063100806 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062396018 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061727597 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063504249 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061921479 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059518369 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0706259 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071879279 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.063178595 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.06916332 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061707923 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06415758 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073055397 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056943584 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.060708838 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060543773 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.060597274 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069523161 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063663817 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.071516178 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.062552865 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062075812 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059952004 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063565086 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.061669376 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057888785 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061016156 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066120925 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061489891 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061868247 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062982554 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065118637 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063414067 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071340478 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061358155 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062013986 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.061655763 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058806693 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060516572 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060470174 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.063831903 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062248385 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059368117 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058985417 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.061158572 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062336252 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.062785922 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061201138 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.062978119 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.203110954 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06327317 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066093287 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066943226 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058199811 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065651439 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062688801 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06322798 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062118134 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066900194 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066432447 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064360609 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07158374 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.062796356 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064582501 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063442737 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061217618 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063113481 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062944266 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063195473 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062667423 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065365881 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070321095 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061041275 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065696003 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063523128 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063699279 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069915761 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064196788 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066259166 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069677486 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063636225 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06450164 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070040802 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067370601 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066758001 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064065869 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065069477 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068227797 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06235692 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.069773417 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063355122 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063798481 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064157769 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06086663 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06303119 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062847653 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061575717 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069153433 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063886592 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062404472 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062128126 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061337751 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064413134 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06632682 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069860961 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065030466 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065673629 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058459282 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060245454 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064059025 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060960817 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064673877 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065204266 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068554647 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065861157 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063135431 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061747558 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.070865934 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068244257 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.066563835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061323213 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.066288938 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063875163 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065073222 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064302301 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063020425 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063718528 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.066399261 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064224964 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062108499 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069716225 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.065951263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063607722 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064139727 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063547923 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.062991674 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058234771 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063665136 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064553455 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067616863 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065012918 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062972529 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07325292 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060683034 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063435499 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066422785 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062896863 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.067528949 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058384949 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064504719 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064434018 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064044262 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058591838 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062267739 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06105853 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065524835 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062303169 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058602643 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072845448 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07146763 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065670768 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061700981 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061618637 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05833617 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057533553 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061320053 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.062533773 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.063143442 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.071497721 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060847032 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060539031 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.05678521 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061536936 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064582047 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.064620106 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059003096 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056922512 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060935197 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.19752627 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.068957662 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062349878 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063301034 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066373526 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065127546 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061382244 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066786715 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060820395 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067495558 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075692986 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06362287 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063834939 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069221531 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070564907 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06384373 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058686232 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064031884 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066352333 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063442034 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06405586 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063870293 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078160517 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066106302 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062152632 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062922037 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066293426 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063022685 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071329515 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064856048 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064369824 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067386154 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065104782 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072023158 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06569085 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070809013 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066685223 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066060533 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062312872 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063325844 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061298004 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062738496 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065020413 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063915671 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068510147 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072404987 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06247336 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073265113 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072012591 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065201049 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06008909 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063316921 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063305434 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059022185 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063944537 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061735741 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061398614 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061518058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062244875 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064523555 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067784373 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06458292 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063969558 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063799876 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057475316 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065039698 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065247416 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063877919 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059722468 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063090525 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063857067 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.066452173 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065841397 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060136798 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064192494 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064120232 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063357425 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057960556 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.06971497 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061845853 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064428861 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062183307 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062848048 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063853485 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.065720471 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067161745 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063964865 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064645735 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066205081 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065218812 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06018608 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060053572 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068012235 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06092178 seconds)
  done (took 40.384520753 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095575227 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.05908643 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058047567 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058286547 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070226785 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059454592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058372719 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059397961 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059721836 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061709682 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058254087 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058337489 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067345762 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074043916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07005526 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062868665 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058407921 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059409491 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058555733 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05936455 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067022517 seconds)
  done (took 2.679446638 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069984812 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.066040248 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069371984 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072313949 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063825638 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066797893 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068763424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066838227 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072517564 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063503206 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072348023 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067159746 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.063372548 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.063414646 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063297341 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067096657 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071948899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063752316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066879198 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068807687 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06702942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068631724 seconds)
  done (took 2.809923306 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063122787 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062311213 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064081312 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05769815 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062079494 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.058302911 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065573894 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.060278542 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073824495 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.061194854 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.061123612 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06107303 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064073499 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.057859221 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.062345597 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.060036739 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104188875 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065479775 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062323592 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063558347 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.058079143 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064418673 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058092462 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058136036 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061064453 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065687718 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063005203 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.060099167 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.061987702 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061218956 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062002291 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.0600194 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.0633104 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.062413503 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061013362 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06089768 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.061893276 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062014328 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057571257 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060091538 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.062420845 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.058115047 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062170894 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.063515107 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.060252703 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.05972529 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.063169279 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06173764 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057473395 seconds)
  done (took 4.392190521 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075773002 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104857303 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063651378 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084322778 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076344703 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071876186 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065350898 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085061249 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059773247 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060619115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077627912 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076011711 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062211311 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066395534 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065977122 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062019207 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063573079 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060960063 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065598133 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061740102 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065928999 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068342631 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075974769 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074620059 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065888285 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060986549 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061441366 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066217079 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074377655 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066456777 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066457037 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067616569 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076581242 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067664531 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061572365 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064164791 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077880688 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062492435 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06456981 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06012485 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06461658 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066557103 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068471152 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.0779783 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062740335 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06714621 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062094117 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059953742 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074191355 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064430853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069903771 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076243649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065546625 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0622252 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06612739 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076793031 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061959278 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060268301 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064957286 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074233874 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060048928 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065471352 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075305189 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063933538 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068737798 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075723729 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067104612 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06551196 seconds)
  done (took 6.111266944 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071825992 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.068329532 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07720886 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076092531 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068269654 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068519683 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06879661 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068433366 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068363942 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073401867 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068536263 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089342019 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063947224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071058763 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068775615 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0687129 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068785922 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068855238 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068903563 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068359013 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068874315 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075784497 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068387027 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076266079 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093794972 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064009416 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068531955 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068293657 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076278174 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068620895 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076107754 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068520373 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068668905 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076558707 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075873339 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068519014 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061726574 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068374878 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068691518 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068641158 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064238607 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076544202 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068382932 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064031678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068837363 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068359679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07672298 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075466971 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071491742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074822038 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070072471 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077620268 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068587022 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068840984 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076519432 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.101751662 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076583642 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076608108 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068574896 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076312412 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076366301 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08280217 seconds)
  done (took 5.8258605 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079985925 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071760056 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.072263187 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058337763 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060630377 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066308952 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060783966 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060944365 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07088539 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070937259 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073208453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066386558 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069623381 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073310733 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066258869 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070060872 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066248763 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066430707 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07102995 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066289119 seconds)
  done (took 2.714297282 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071073429 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079680841 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063489258 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068635298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065286043 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068224577 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064780942 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065751363 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063326574 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065938731 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07232223 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072529412 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063430794 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068171709 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072129963 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068136862 seconds)
  done (took 2.438866832 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.071633313 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069342427 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076746137 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062163515 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.060948968 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059417883 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062619074 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058130565 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059038031 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074119403 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06274167 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.065276428 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0621808 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06106489 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.05957842 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065167995 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058839996 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060364887 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062644116 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074727843 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07325552 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061334291 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063398689 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062459341 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062437866 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067612569 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061834325 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.060406551 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059730078 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063028325 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.062960639 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066125993 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059792774 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060877647 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060990238 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059834438 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062083125 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062884875 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064714413 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061885294 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060344718 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061704573 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061925535 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063154938 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058644335 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062775796 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058855105 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064556331 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060465602 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06286405 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062162551 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064272074 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062477655 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068528808 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065223312 seconds)
  done (took 4.828186404 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075585874 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06631768 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058538033 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060264374 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065459937 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065981637 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0639181 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064002295 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060956527 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064164962 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065197156 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064165315 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065879016 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064175817 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065780308 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05884784 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064204748 seconds)
  done (took 2.515092147 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.066897533 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062460375 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068985994 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062605819 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06286955 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06458486 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058812419 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060830069 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061067627 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062525147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062455791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064377907 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060990272 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065075326 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062234145 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062031012 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064631028 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060745392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062383698 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058617827 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064624514 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061239584 seconds)
  done (took 2.731622414 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088475982 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.077497351 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.133912754 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075204864 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.079238215 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067595119 seconds)
  done (took 1.874389127 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086363682 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075215937 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062606947 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083814879 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069778583 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063539482 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063537446 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063970082 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072216622 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072578098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063885852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072311357 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072283992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071824844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069964471 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06997789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06409514 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063785993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063021492 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080453728 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06429743 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072274012 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063973583 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063809827 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064205188 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071847831 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072299873 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072297708 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0638902 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072053118 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069652867 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064085701 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072665751 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072578143 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065408198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07242042 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064224364 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08012262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07007116 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071346372 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065228539 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069810455 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07252849 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068630568 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072409417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064372715 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068939305 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064512397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064615838 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082659642 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069875411 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071580716 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069990387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072569663 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072470635 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082530508 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072653713 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071924666 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070117646 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075122116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072260619 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069987444 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071813667 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073099079 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070219598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071889946 seconds)
  done (took 5.994804828 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078017684 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082056345 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064005847 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072722272 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071892972 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06421997 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064798375 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064233443 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064284218 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063919472 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104241673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064874493 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072273017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072034747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064648807 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064215735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064458609 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0724335 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064088465 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082383847 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064166615 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071778146 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071873328 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071805171 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072925719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069735521 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064350519 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064187846 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064203727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064044721 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068848651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064726845 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071762213 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063476448 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072126131 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064165495 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064088724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068845176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064134025 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069808515 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072133694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08070766 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06431541 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063992044 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072834054 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064422276 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064220877 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064030073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064433984 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064181615 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072914086 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07278727 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072774572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072249633 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0645121 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064636859 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064462753 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064641733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06466087 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069852333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072010985 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06414618 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082496412 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064294997 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064752873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072426647 seconds)
  done (took 5.916382298 seconds)
done (took 124.127885288 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181665521 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16227157 seconds)
  done (took 1.692795537 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066230191 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093064436 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07367237 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125685288 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.063479857 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096776961 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.096286185 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074485503 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.062590229 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.063062311 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.063090414 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065334622 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.128168382 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.062967709 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.063154429 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.065272325 seconds)
  done (took 2.624280913 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09337729 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.152900775 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.095836853 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.061341458 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093081792 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.069396044 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061557656 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.071642131 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067527136 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.061921372 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.069553856 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067359672 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.062085963 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.067157274 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067649254 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069217765 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.061457125 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.069515888 seconds)
  done (took 2.725994509 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097815118 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088116512 seconds)
  done (took 1.551488272 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154228094 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107384141 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140066165 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.338127309 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164096005 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.225249741 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12710885 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125420718 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112986516 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119989747 seconds)
  done (took 2.975626363 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.094440247 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147739801 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.249999015 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.111127721 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.068820317 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091367223 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.111925021 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.074383212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076933414 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077062979 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076356119 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072499052 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094495464 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.06977369 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.069648691 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072439365 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097901721 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.068749718 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070616658 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073027733 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095424843 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.062722174 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.069714643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.06916962 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074058539 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073754907 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.062098114 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06184659 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072945651 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070743404 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073123679 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089774343 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073792943 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103282148 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.066680875 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103909211 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072578463 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070007363 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071183473 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070299368 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075262686 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07514707 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.068399259 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072293341 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.062039745 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072822132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.061840667 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.062067522 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074664619 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.063537731 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074682058 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073558111 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103003224 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.063354125 seconds)
  done (took 5.768879928 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.097846286 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.100085992 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068188033 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107183681 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096670545 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068568685 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097202954 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089534279 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.099079612 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066378841 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064690732 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066712636 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079187635 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.07948851 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10943697 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100444654 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070078463 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067837323 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100140907 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.098798462 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065071067 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090640615 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.085628981 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.097992235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063853252 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066626639 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064520516 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06666512 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073487613 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075205361 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06633722 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076990411 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080965826 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074791066 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063373426 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064257691 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064437853 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076304348 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076107024 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07525432 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074194935 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064400159 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064154499 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06568767 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066086395 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064414118 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075185859 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07702547 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074923645 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065656043 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066351734 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064326068 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065789794 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076634722 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074173856 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077282286 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076448893 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06466621 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064970393 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068819012 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077074225 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075641981 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075501113 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065724518 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075322257 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064767331 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07691139 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080821987 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064789053 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066579603 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064887667 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065565812 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066160448 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074014843 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074524617 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065945815 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065957644 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064849419 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076400085 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07491469 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064207039 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073483133 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063579773 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064747281 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065917695 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066075179 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07409817 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076721057 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066439746 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064791131 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065948125 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064983473 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063460071 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073620891 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077021632 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074337501 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073731493 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064839211 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074040083 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074046908 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065696125 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074736999 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063595348 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065189657 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064614774 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073328475 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.201864514 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078440639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066200768 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065383478 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075035779 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077894556 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064879845 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07545212 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077511692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076356309 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065151293 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078210031 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065320362 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076577519 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066216212 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077175659 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065486216 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076500841 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066049879 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064940638 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065836865 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077327277 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066414318 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065161764 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066742177 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065898123 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076272771 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079173716 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067577468 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077835943 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074656086 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066761476 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07555064 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064634334 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076139869 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066260257 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066672209 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064172825 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07850099 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065623965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06504975 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065705704 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077297797 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064900805 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075975705 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074409118 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064296915 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077461968 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077443448 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074441489 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076833639 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066567874 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064933648 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064180981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066045238 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075117271 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076970658 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066818681 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065717199 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074855717 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075692509 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063599809 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075204097 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075780433 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075354606 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06512489 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065766595 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076134595 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07738383 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074741303 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074434793 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074818483 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064677094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074613302 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074689884 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066454285 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081453969 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064507708 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079684629 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075936584 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073706921 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075124927 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077133343 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076464061 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07709949 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079796787 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064555821 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064632459 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076642366 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064580762 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066011286 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074835163 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066254611 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066120751 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079793082 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065336433 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076250908 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064367928 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074748029 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062436965 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065586726 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078263325 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063462053 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064946937 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074329593 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064966275 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072448424 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075386695 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.205117496 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066142981 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067187371 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077166195 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07593858 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065921575 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06505653 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06672419 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074892387 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074603527 seconds)
  done (took 17.846860962 seconds)
done (took 36.557846414 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207420946 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147153901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176403798 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11585471 seconds)
  done (took 2.110657105 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11885281 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098062784 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092051367 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061971555 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098839817 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062143795 seconds)
  done (took 1.93150779 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309623563 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209167927 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179385838 seconds)
  done (took 2.097284879 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196998632 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183801473 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391272456 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252122477 seconds)
  done (took 2.531190109 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140421555 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086847379 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064210363 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080213695 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131465262 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158674768 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09881968 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122958967 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075075374 seconds)
  done (took 2.40978423 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143825498 seconds)
done (took 12.631274506 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.198827162 seconds)
    (2/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.155611284 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.090615013 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077716653 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.121499265 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087655638 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.170709368 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068598126 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097864015 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.204307128 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.074850168 seconds)
    (12/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.169459052 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.219450364 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070192618 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.196278927 seconds)
    (16/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.11714789 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109921892 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.090276678 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177934446 seconds)
    (20/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.104264077 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.048891399 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068859166 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.106881765 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10279573 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188738241 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.201351102 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072208282 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069999698 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.176946464 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068581615 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.062507508 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070449335 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.195011496 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076085986 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.058933523 seconds)
    (36/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165398722 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137212898 seconds)
    (38/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19031955 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.084392719 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.17757029 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076903727 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089403948 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062309279 seconds)
    (44/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.06970859 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069421509 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086273169 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065495031 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144460014 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.145015228 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087570249 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.216983082 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069469493 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.144995427 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.069222522 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071981166 seconds)
    (56/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.205826087 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084624808 seconds)
    (58/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072198322 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07127091 seconds)
    (60/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.061356406 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.103441607 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06407579 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068694738 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067905689 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.145700017 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.069509994 seconds)
    (67/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.097119769 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06820399 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.147011814 seconds)
    (70/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146432732 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.04833487 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072306298 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072286221 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.145977387 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071435504 seconds)
    (76/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08611066 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.097040357 seconds)
    (78/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065697695 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065120651 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.049530506 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068646785 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061617766 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.047963954 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.062792725 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062930585 seconds)
    (86/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.104186984 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.133224458 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075880557 seconds)
    (89/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07126559 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.219518936 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118755444 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162440785 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075945763 seconds)
    (94/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.156459694 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070174694 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.048845646 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.173246694 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.163842811 seconds)
    (99/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067714837 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069830155 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097851945 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132783851 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090033103 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069613109 seconds)
    (105/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107488859 seconds)
    (106/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.049115786 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085884763 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102365902 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079297595 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062688591 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.103812655 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070371281 seconds)
    (113/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.049826707 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.059008748 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.131391287 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085427877 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091410194 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.183854912 seconds)
    (119/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063567888 seconds)
    (120/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.049596974 seconds)
    (121/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.095595803 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083121045 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091293358 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.130888016 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071068658 seconds)
    (126/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.112206605 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.082650493 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.146505993 seconds)
    (129/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.057775882 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06381588 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06852162 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089575132 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068520548 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162581996 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063055628 seconds)
    (136/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.059494913 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088577296 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069209792 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062534403 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.089158568 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068520627 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.0592547 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06368561 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.090735983 seconds)
    (145/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.0752544 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.049171114 seconds)
    (147/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.154741607 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073115309 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.062149685 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068190955 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.068841639 seconds)
    (152/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.048884847 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.048161112 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.048131793 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.061634095 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190948431 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067328107 seconds)
    (158/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064630829 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070067118 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181618135 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.049417444 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.061923156 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131583924 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061949558 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062524016 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073370572 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.048318687 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.104675822 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.083955392 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.113976257 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069668731 seconds)
    (172/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.049106063 seconds)
    (173/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.084802834 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065157677 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.048366205 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063764476 seconds)
    (177/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10239374 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05041753 seconds)
    (179/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106303082 seconds)
    (180/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.048779368 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071440388 seconds)
    (182/309) benchmarking ("sort", Float32, false)...
    done (took 0.124079563 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.064687459 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.049881413 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069150146 seconds)
    (186/309) benchmarking ("sort", BigInt, false)...
    done (took 0.180987629 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078914328 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068610231 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.153718738 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070199248 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.06973485 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.061248792 seconds)
    (193/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.048337555 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131910325 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.068038894 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.060410198 seconds)
    (197/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.112180825 seconds)
    (198/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.049068147 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.168335488 seconds)
    (200/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.047777679 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.048974724 seconds)
    (202/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.057159517 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.04822858 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.047190144 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.411430735 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.166199128 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082232518 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.046970381 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.067813881 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.047097026 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.066150652 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.047636036 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069813958 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.059385266 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.095325282 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.173112145 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.047810775 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.084721171 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.060663822 seconds)
    (220/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.049465659 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068141899 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117201134 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.049503169 seconds)
    (224/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077535478 seconds)
    (225/309) benchmarking ("sort", Float64, false)...
    done (took 0.122742595 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07619535 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061967177 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063182629 seconds)
    (229/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.049959748 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.075753583 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.146291642 seconds)
    (232/309) benchmarking ("sort", Int8, false)...
    done (took 0.132618645 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.081749042 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.132394494 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070358838 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.126228047 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.049020948 seconds)
    (238/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.048267193 seconds)
    (239/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.050642979 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.152391386 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08076078 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061597879 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.048135426 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.060146 seconds)
    (245/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.046888808 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.082940392 seconds)
    (247/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.061787075 seconds)
    (248/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.066828591 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.126838821 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.047935537 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.060331615 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.048880676 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.16596915 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.060128558 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.046647976 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.060124664 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.063307627 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.060644571 seconds)
    (259/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.071467462 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.061383416 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.047342564 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.066476238 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.049664387 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122887677 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.05946714 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.067323369 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.069214943 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.092167981 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.046401843 seconds)
    (270/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.047853378 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.066666505 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.04728276 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060836855 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.067108929 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.049314237 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08268358 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.099648216 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.046798679 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.143140881 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.046686417 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.063215744 seconds)
    (282/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.065502986 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.105897434 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067846087 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.15855164 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.062062162 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.047876872 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.046622523 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.058984077 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062638161 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.060626467 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.059012868 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.060834061 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.067864348 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.062481178 seconds)
    (296/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.047707587 seconds)
    (297/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.046633979 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.060582304 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.06532514 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.04704743 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08409597 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.062548886 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.067472023 seconds)
    (304/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.05770966 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.080600894 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.066044948 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.046784092 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.046778963 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.059647094 seconds)
  done (took 29.085592406 seconds)
done (took 30.497850752 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087467589 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089217041 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071812027 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090030469 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078064079 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074375808 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070777328 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076587121 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078020083 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079892047 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076244106 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.052778189 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07210466 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071949164 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072501762 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088817454 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075707854 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070301447 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070877584 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06254354 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070750712 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063608821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065059361 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.052284823 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075928052 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069396207 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069817548 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071461702 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063322228 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063903009 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066834502 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070424545 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06285222 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075189975 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069660546 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070339465 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072319941 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073622262 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065062328 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063405441 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071470803 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063341821 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070160985 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070652714 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069233765 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068859922 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069856969 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074913687 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088065766 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064839893 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071641806 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072415234 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072839025 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069539223 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066346406 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069798679 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067942956 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087784134 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07012075 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064973168 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070914168 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070468788 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067748702 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069501504 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069624696 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071549688 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071727576 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067954438 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071256922 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068001497 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062347248 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069498113 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066133154 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062506632 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072374895 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073357091 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061301226 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068619816 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069393158 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.068055662 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062038823 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064331403 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063964121 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068714679 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064418466 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.051385959 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065995691 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068939736 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061790589 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070316173 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068762803 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069512902 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064147212 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.072390437 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062613763 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06777195 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062484594 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062470561 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064169056 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066324061 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062112169 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06453724 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071714384 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063851973 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06828127 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076010566 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062089366 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068666647 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061852171 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061742958 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076219261 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071766222 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062574018 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064917567 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06146563 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069760921 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06160216 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062391092 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062226606 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06242278 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068082251 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062127579 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064236353 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069086867 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074331476 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061936407 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065442629 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064047682 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061546487 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.066986775 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061979798 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061799474 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063656757 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.057812783 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064023383 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061935703 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068893811 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199788341 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070545778 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064364286 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070090035 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066794004 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06785365 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.066903874 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061424518 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.055071915 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065252604 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063980793 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064432832 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061996301 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063400089 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062300664 seconds)
done (took 12.178571137 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062939805 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139114304 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095770252 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091694935 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082328114 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06309409 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072706476 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098333454 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064349149 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098504066 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.083909113 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081242938 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108712748 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061336889 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06211992 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066064388 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063697011 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078225524 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097493455 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082529769 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111670851 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06202623 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090604943 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086559022 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083423063 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097651077 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063133727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066444023 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066123694 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087437172 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08247553 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066001598 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062885146 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097345621 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088755088 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079528542 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062721258 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078822082 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063038394 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06222303 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06418866 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.094586826 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.076321681 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076563936 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066694067 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065575203 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063542112 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.080269919 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084979158 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075423619 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083420522 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100324942 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067710816 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064515709 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063708108 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08514697 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064073798 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06786525 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064626928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066770991 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064432074 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068358321 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080948328 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081383833 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069032569 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079734896 seconds)
  done (took 6.654362011 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079747216 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08622736 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079305405 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079965064 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062157329 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062989922 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062493591 seconds)
  done (took 2.067132798 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063137947 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084991604 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085047218 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0850453 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080898987 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084710616 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073067274 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065155288 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080025702 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066398673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086626139 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102127814 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066509894 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071636002 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09077144 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064940459 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089747938 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065595299 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067502531 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085953059 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.064800734 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.07828206 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.066222069 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06329966 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078196174 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065463643 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112484987 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068547042 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064777959 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066152995 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.061929866 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105838425 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079702292 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074561273 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065296708 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07990547 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080466176 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064088793 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081748869 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070883952 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079072953 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065601641 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066115242 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063728515 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070088564 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075990962 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066106631 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066256226 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067850291 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085792427 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065754107 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07926084 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068741897 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068441865 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066576192 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069280079 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075387327 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066440676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085274858 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06653155 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082764726 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08199668 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079365046 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082273684 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067720907 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079531301 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07915241 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067940369 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066962144 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068923334 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082179702 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063738604 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066861413 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075784567 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066828148 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088799634 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089205062 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066660129 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07416692 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064947052 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065283166 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.064658646 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089016828 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068288884 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06563313 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070092229 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068522777 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063892517 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064457031 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068908512 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063406958 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067069455 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068283655 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067675132 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067727746 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082384411 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067583554 seconds)
  done (took 8.681925383 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065251425 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064969203 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066418442 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063971709 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064643829 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064722712 seconds)
  done (took 1.966948748 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089925103 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066443584 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076920546 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070189576 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102289004 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085109331 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086756885 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078232197 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083379948 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078020414 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086076752 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087837518 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09268218 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072001256 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086238514 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071439034 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0867597 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075091357 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077584001 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072272204 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085975094 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072407878 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073530539 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08173446 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075331631 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071938786 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066217246 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07853324 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078076114 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07845596 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072252124 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075265554 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070065081 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078319808 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08555051 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.067238838 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068330965 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073615444 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071481559 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074909209 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087341285 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071831366 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073416587 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07664982 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077558406 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069650546 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076024895 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074800464 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085591457 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076041648 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075089773 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070260259 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074459268 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076398794 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069854764 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077676656 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076653325 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086563537 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071636912 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06998102 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068577359 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075055167 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077587404 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07496338 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078615411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07676589 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070302224 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072284685 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071724183 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070443867 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075768308 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06719092 seconds)
  done (took 7.075033351 seconds)
done (took 27.9850208 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539401985 seconds)
  done (took 2.083248325 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596912054 seconds)
  done (took 2.165303913 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.609591118 seconds)
  done (took 8.175850916 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390581995 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.485117431 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.677846127 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126424925 seconds)
  done (took 3.284382631 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673508274 seconds)
  done (took 2.244605238 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.202595718 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.190848762 seconds)
  done (took 1.972996798 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.36945201 seconds)
  done (took 1.933282735 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.091194491 seconds)
  done (took 2.656092982 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256325671 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158639973 seconds)
  done (took 1.985167948 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451389837 seconds)
  done (took 2.021193315 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.801861434 seconds)
  done (took 6.373568903 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205337728 seconds)
  done (took 1.813003741 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233863709 seconds)
  done (took 1.800410586 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.701113008 seconds)
  done (took 3.268339324 seconds)
done (took 43.349489683 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076697874 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.078029356 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.077889881 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.074193371 seconds)
  done (took 1.861250022 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.073210426 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069631871 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07377053 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.06985038 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.073955913 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069758333 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071241389 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073275074 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069277598 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.069734282 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069501851 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069168449 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.071831413 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070999999 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067962233 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.071638448 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.072731227 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069304773 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072548926 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069575622 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067516572 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.071740544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.071679117 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068735071 seconds)
  done (took 3.267785732 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074254169 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069513258 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071379852 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068139762 seconds)
  done (took 1.863649246 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074447414 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089173048 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086149496 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.074356963 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089274238 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082875351 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.065751511 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065927565 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07039976 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.074094673 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064937851 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092564855 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.084608594 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07352749 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.075959491 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063257006 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065196623 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.083430185 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.074086182 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.074483294 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066776143 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07364422 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.065007143 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.084772532 seconds)
  done (took 3.391812271 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074382449 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.099660562 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074491844 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08510824 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086908363 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062169116 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071219217 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.086195471 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120028785 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.0623193 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.066991907 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062571163 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.0692653 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062117888 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.072876098 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.101814076 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.105422519 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.0655736 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092783269 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062269988 seconds)
  done (took 3.171416543 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.069880197 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066540037 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.062065793 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06521229 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073687974 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06919575 seconds)
  done (took 1.995083978 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064550387 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064254069 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063862548 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063909043 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068322414 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063462541 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063177492 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064163045 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06418164 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063687457 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063238416 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062871766 seconds)
  done (took 2.354865586 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.190660377 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065750458 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065844276 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.062492261 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06720508 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063171122 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076408923 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065772386 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089306625 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065684397 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065640494 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067790813 seconds)
  done (took 2.532023086 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201470338 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0729126 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234771929 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13430015 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108420611 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111941748 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100380816 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110207094 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139930173 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098894464 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164575885 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16197748 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104215843 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133717067 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086074008 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.094193641 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152200705 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158535708 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100246523 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164785423 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144927912 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125705211 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148524859 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100115963 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102773831 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119076798 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068013901 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076962089 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166744417 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129727215 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147007184 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11160943 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094052121 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17533472 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167785445 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139215906 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13145024 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081130216 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.09816084 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129647411 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195783531 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085289832 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160747671 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103991959 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217190687 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13370789 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117222575 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117364098 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104559569 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087185928 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142396099 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17885681 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135787154 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084332828 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109476996 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114728553 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1126608 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100793232 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177537201 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163674334 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124252662 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068457607 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095452146 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149098899 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129122231 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105504924 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125398151 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090386022 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130312615 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151344438 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115651884 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140472914 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126127688 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086049719 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116124559 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140368971 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129230066 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17190048 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125317265 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072914856 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125875967 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102345774 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079612238 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139423306 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07246279 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171776885 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096274406 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103390262 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10984461 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108459113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109693482 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162387603 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144685816 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103413405 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064446628 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246620714 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121712054 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148386677 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087356556 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10905876 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11774166 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07811858 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14017801 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075258867 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122003265 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.072108111 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121909221 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131944946 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074107983 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119296863 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098628376 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097158617 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130209701 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157459832 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08597879 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07947749 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163671256 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119475724 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10202929 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141497748 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15538204 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099074737 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104888672 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1506711 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181110984 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088854656 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159790226 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104195573 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081098595 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084262982 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120416559 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109635356 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120517711 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079070722 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115047102 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165050346 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072612214 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092149854 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129936294 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076062906 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077670039 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100646593 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097561065 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092066322 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09688091 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102553123 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133895421 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11958977 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101980323 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122275778 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094964695 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314293623 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088117707 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097994933 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101401633 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067198888 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133951785 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153592058 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077158931 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162190221 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12074267 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101725599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116164708 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080597834 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137037723 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075680937 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068148976 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140934487 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106862878 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106861884 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147838822 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101378203 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124905825 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115742743 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132001156 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130375844 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126236757 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10251729 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.084637909 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108254024 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122879425 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07035031 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088861103 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076831871 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100505055 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092386315 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080240959 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138640635 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121213079 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097727919 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109759048 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095234261 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144316179 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073409085 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125055142 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115826899 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091069247 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148849205 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149298805 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129926696 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098800292 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141924334 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067086681 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070399661 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089147881 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122753034 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08147607 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08184924 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260034595 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146025232 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126418647 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134760629 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10953323 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118515306 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152286156 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066439124 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112791446 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144887694 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117485361 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100357772 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087345811 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096128407 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13931209 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10542549 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179342683 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110523281 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123516115 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14974923 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097288133 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077395671 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099866213 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132132157 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101427947 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143037027 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098055365 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084964862 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106599813 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07112138 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097106517 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123880293 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116796331 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13208871 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111343561 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12941367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074199919 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113507236 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117356698 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119557497 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.060798623 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11706403 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15893281 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090844596 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115449485 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149398929 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076243136 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.120716794 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171295259 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140622524 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081131977 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252851065 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116853803 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125774147 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117185907 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1372506 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106387218 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132859868 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10650149 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083027263 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085300442 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09469416 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101615472 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.091831953 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105390901 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111232044 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092461846 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130115006 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100286561 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107133247 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116285039 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094133711 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.086569527 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093749011 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171396189 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115839844 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169755533 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09589825 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141993622 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163835204 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074817263 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076746605 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075336955 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136127928 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080230153 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126760694 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.094351994 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102598911 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120891574 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141525567 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091873782 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065712909 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105352441 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130793251 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109083404 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094764463 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101483722 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16017949 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097400811 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07708364 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11052825 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101705315 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098747837 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16821978 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0579522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094149847 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072617163 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077359533 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123918284 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294030078 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079033661 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099068362 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119051596 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107996864 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125036245 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098770533 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096790296 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111449343 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146720693 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125899697 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08679869 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110150935 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127171654 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153136169 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102260587 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093517037 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168847413 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148822986 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156893445 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085721861 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111440819 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110760902 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105417649 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135872486 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080501991 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163049032 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082275355 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135256307 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100635223 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086880679 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126588096 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095480662 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10264332 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144021658 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113889612 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079383082 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074666203 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114552862 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117120928 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10395794 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072536926 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13642637 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070775855 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12939531 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165452268 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078402137 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101080967 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092535682 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075992281 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103786037 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098485273 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086197535 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.234014695 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179541807 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087482893 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148260822 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138814618 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111268213 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133695469 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096494649 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633556981 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07494596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149384026 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114123231 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170970332 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094900303 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115551103 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107341157 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121377302 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143177544 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102425762 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17257021 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129226943 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113085561 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077400378 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099913731 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100268391 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086633564 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10371646 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114413989 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115563753 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090430769 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112361507 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119521063 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078522828 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091765013 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152283433 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113615995 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140499933 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136832762 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081983965 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114588933 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135866856 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077304116 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119421288 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149309725 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102709913 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094442758 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076613122 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098278155 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164724891 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070069524 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156984107 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261863896 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105919467 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110075014 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11132729 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128243314 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105092737 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118790009 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090923905 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107790616 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109525256 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080028953 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073834928 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102269532 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110460273 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094544331 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096594938 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094631493 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148436327 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068417828 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092448874 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100278252 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142487446 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172304252 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.085250231 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079926519 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116864794 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110416154 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11014648 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117058138 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076931383 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079088205 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078931552 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.074060097 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104945838 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108706562 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101012475 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107400106 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160266907 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080012075 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.217451815 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0919939 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101146541 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066455457 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075720493 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092294745 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093901639 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105107674 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097081255 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166844632 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091309183 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087114822 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089870369 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070155004 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079920782 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125121243 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108363209 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115305107 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093681323 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.05903952 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104989443 seconds)
  done (took 57.515519941 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107274271 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078814667 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09415062 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147342025 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119343633 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208660118 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154022666 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19603809 seconds)
  done (took 2.808897285 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064837981 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.090844518 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097125088 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078974693 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063792305 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065549769 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221158883 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077807481 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063394812 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.084962068 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076236189 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065965748 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414436027 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06297084 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064380449 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.059757959 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064095745 seconds)
  done (took 3.395915491 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365040895 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598660132 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369727493 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070255925 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.429414912 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088640273 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.040915924 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126565996 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07001689 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536589848 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706653667 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12042359 seconds)
  done (took 18.214127481 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072096791 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06646768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.080072944 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079931061 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.068916862 seconds)
  done (took 2.056050234 seconds)
done (took 106.051372771 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076148279 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.373242141 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050517638 seconds)
  done (took 2.139345826 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.079745206 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081314575 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081998806 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.079526448 seconds)
  done (took 2.017740854 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071793891 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073050613 seconds)
  done (took 1.83427733 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222126871 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15493687 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.083565929 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079240639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076304823 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075920986 seconds)
  done (took 1.930072945 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070339315 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072183158 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070255961 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073289245 seconds)
  done (took 1.980223465 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073281357 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.04974558 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052095839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05274852 seconds)
  done (took 1.922105001 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083375994 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.076049532 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075116582 seconds)
  done (took 1.930014664 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.097572808 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.081941062 seconds)
  done (took 1.874878594 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079462686 seconds)
  done (took 1.772310653 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095356158 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110221263 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127740623 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106731143 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135574598 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107639985 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082680679 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083339199 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073883418 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08398216 seconds)
  done (took 2.69962019 seconds)
done (took 22.324468481 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075162504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.358543809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358310456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086217018 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.663711524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35326994 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994555575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088943407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109916815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064903794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081298448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64552147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982622222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.315956794 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971840383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319702196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645901257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065190271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06448055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064569879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980148797 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064325891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064996472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065007215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648116854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368208672 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065124245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315056724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06491337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066493305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351519302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065299639 seconds)
  done (took 16.109178211 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067214884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114874769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070525639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081105808 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067975112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066662099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068226035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065837927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116443173 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065244081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081178018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064813965 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068496138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065448797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083943291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065188724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065406967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065429577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064748958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065334043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083201401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064332383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06489392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06511081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064684551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07662869 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064873977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064631474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06536392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066884167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067355213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065496066 seconds)
  done (took 3.994134011 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111701404 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121076279 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070755887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099457703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.108654755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066902278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139212199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089358689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124435034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064786412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081174392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064559524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0977123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065632035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084561444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065483038 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066206053 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065454639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065799573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065485525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083968688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064900382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06548561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065947187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065469158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078611857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065778735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065464071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065748594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06723961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068828313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066081075 seconds)
  done (took 4.249644302 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069244021 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07163698 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079651972 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080118491 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067031412 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069292006 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069606021 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066516772 seconds)
  done (took 2.283503507 seconds)
done (took 28.334467508 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075183141 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066170992 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069387192 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.077719241 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070404487 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.075558409 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064347519 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071215431 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068774143 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.06952781 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071652348 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064127546 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068023042 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064298851 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070590865 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064677364 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.075856066 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068480374 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.075347675 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07614141 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066843235 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069752274 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070996506 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.076289957 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07607297 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.076076462 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074061874 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069968163 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066608753 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067485975 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073626184 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08068176 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.065902196 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.076800567 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065347529 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065080314 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068827893 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064824287 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.076265251 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073863746 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066771614 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073501708 seconds)
  done (took 4.662360778 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084174372 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087727388 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08110852 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.057848502 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.063356356 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06153444 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085173726 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0566645 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.056130054 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.0843458 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.052928015 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05661954 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.059606071 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.051101111 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.056611095 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053602244 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058446482 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05311057 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.056282053 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.056409497 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084777676 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.051185252 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.073628039 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059319665 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055652294 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058508357 seconds)
  done (took 3.374470104 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070883015 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080775667 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.084957551 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122599158 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.099605231 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073797569 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076342344 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08996907 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08252772 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063903938 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068120065 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090888998 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084959388 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070564967 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.064468742 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081594561 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079171298 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066655351 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070614656 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089226896 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082719851 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081739605 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089714731 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.077887099 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063943935 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066683143 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068409322 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078176013 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069219998 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073619971 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068715341 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068203365 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066512903 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075933392 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068198341 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066740626 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087580508 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074012262 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075198121 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.065647121 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.067866165 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065264927 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088347986 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123571175 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063920588 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071368226 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072080579 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.073659121 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064574903 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082642965 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086443709 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064100531 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067697378 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063487071 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064497662 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077147239 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065996855 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066283547 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.072853169 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.067124313 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086802453 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068642169 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079832702 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06428735 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072016919 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063718418 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065396162 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063959631 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.08932876 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06614267 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10517228 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066553959 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067264293 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073819449 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072566547 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070397784 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064874429 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079207324 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074370217 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067934584 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.072883654 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067836191 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067235526 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.084576934 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066529127 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066012332 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065250504 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070596195 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067385862 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06567296 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077281647 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064441845 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067333916 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080795477 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064197119 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066003541 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070453046 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069916393 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063855488 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075341747 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069385092 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06499162 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073658316 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06488339 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06759558 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076048745 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070475975 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063524133 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068922545 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070473611 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065211746 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.065863052 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067029267 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066085888 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073216347 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070718868 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069006891 seconds)
  done (took 10.293517703 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156242018 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150355771 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06738989 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141692433 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07295949 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.075712653 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143919681 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.091085132 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064726028 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065378653 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066011228 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107341645 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102220075 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111808992 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075572562 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064690448 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.080146634 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110805415 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145578618 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139525898 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.080735419 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073743798 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06699913 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065588423 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067313161 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075529199 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081799027 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073499963 seconds)
  done (took 4.367191869 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077943842 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093443716 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070515137 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.085782589 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087760258 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064583658 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06733455 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066583594 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07748805 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076051049 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064950099 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070513536 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07187419 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068530292 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06591418 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071923496 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071898445 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066508599 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068188879 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069717188 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074788871 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088490667 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068479311 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06418556 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070215877 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064743947 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061455965 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081766144 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065287911 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088533533 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063068159 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072795045 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078708239 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065803732 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064680138 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064657687 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064664391 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064652962 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066437905 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063420749 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063489892 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054700166 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064118809 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076634715 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.070942788 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.053674898 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069602813 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070049851 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069682034 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062527364 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06746839 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066947061 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067816533 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071705422 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069384012 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069760754 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065629866 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070589307 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072557867 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064345429 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.061277235 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06315339 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069152802 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.062575621 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.072100691 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06884654 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06399966 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065481162 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.066274441 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.070378573 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064287099 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067512545 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062660084 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066586663 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069261248 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066042685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065802788 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063002156 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06406649 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064790061 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052528212 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064628459 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.050640316 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067480681 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062857287 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063184308 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064257617 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069204288 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076376676 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065805126 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070139729 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065209223 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063661589 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067056777 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.05697128 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067267053 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07924896 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07937223 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064523085 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06289422 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078658937 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069071966 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063743874 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05286739 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071749173 seconds)
  done (took 8.906723373 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085683942 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066989369 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080527133 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087669282 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.083777816 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072538275 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074010979 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066167008 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078803277 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070444439 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073236923 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065314769 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074084215 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073755372 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067046764 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073450708 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069220394 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079587794 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078832588 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065528277 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072735859 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077302704 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085701614 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.077185842 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.075236868 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077031884 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.086314645 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.06945248 seconds)
  done (took 3.867328983 seconds)
done (took 37.175478264 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.796575491 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.968851346 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.789965209 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.123249848 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.081914247 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.804326029 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.850404345 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.78377528 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.977651048 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.825950314 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.048395261 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.871341441 seconds)
done (took 65.650839621 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.867960227 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.926925311 seconds)
    (2/2) benchmarking "String"...
    done (took 2.056993693 seconds)
  done (took 5.71258664 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.126468153 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.440473732 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.018713556 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.784050628 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.790647442 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.019466006 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.579157709 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.321371914 seconds)
  done (took 30.682425563 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.934714332 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.026846968 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.47511105 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.512780498 seconds)
  done (took 15.726930607 seconds)
done (took 64.046742185 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.781205057 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.807880239 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.826055853 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.770476094 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.844447652 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.792972552 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.289691568 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.963105622 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.789744965 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.778865393 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.789177804 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.231202333 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.795365963 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.208407769 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.788000439 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.794153721 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.834734156 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.436633169 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.943310934 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.795498015 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.802955251 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.83853888 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.791546985 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.799456413 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.808931222 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.790503893 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.226469259 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.794198298 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.419096422 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.793100846 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.817552076 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.806824217 seconds)
  done (took 204.678804271 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.788859785 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.826456115 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.867574994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.824968312 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.255219272 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.971102393 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.901893382 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.287387639 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.793652622 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.806413344 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.135195554 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.788690482 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.15043558 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.734750624 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.826529848 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.894714074 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.050745939 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.105423227 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.829432885 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.958006679 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.792439925 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.979245774 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.90755823 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.041333597 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.811616687 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.796313106 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.790371704 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.818489921 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.142788691 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.011881141 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.801597435 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.794445334 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.010225563 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.66271793 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.789951821 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.795534513 seconds)
  done (took 171.477194271 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.166310136 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.789725935 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.788048391 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.788721388 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.801268219 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.790648938 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.909770578 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.914896757 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.25403833 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.160888083 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.842426339 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.636754869 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.791288562 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.857634103 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.80394915 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.790778627 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.80595907 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.816476312 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.792393913 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.789945459 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.912709052 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.802652147 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.000555002 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.798509756 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.791113813 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795440366 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.160981324 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.790865568 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795838245 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.790628286 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.051059979 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.791390224 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.790851898 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.695990482 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.173467798 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.880865479 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.793083136 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796476601 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.791249283 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.011385544 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.791500493 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.790650969 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.791595475 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.793945199 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.980026304 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.790797385 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.91325253 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.791447512 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.308476426 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.79164807 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.791524197 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.51387371 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.515506249 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.794911171 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.791551269 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.793914865 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.79150095 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.792121701 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.799002217 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.562288408 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.866810887 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.792531555 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.792647909 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.795775395 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798135568 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.792419814 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.863888478 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.792528933 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.828250708 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.848823807 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.008362701 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.913568511 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.79646638 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.86022866 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.886333134 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.793348387 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.791982428 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.793172838 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.792439595 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.792763979 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.874064052 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.792820066 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.92509857 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.800993471 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.794892337 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.844195559 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.862538761 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.793327821 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.707290556 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.795968017 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.793130633 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.130344788 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.86291107 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.793619512 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.793063619 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.794400049 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.921545813 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.916590927 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.593880747 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.796880466 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.692771912 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.797287415 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.934966371 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.795396162 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.000996555 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.798091935 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.875885421 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.798929389 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.796358377 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.794868058 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.826255809 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.795575313 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.859481488 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.794504135 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.166386973 seconds)
  done (took 405.090409802 seconds)
done (took 785.199190458 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.466292996 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.427829779 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.537117119 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.450259076 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.419927207 seconds)
  done (took 14.039592275 seconds)
done (took 15.77595682 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.880981511 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.886823423 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.82141326 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.884429718 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.816506419 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.884320486 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.866075663 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.821970433 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.851197606 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.823040284 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.853760758 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.820367426 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.807800928 seconds)
  done (took 25.756400867 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.024734076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.03317172 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.866973354 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.028881038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.844065877 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.031337322 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.957743993 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.952014667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.947763006 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.813467799 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.809932574 seconds)
  done (took 23.049860717 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.031697021 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.035181017 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.874304185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.032286509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.847417507 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.031073315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.957022751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.948518453 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.948706306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.814488792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.810977906 seconds)
  done (took 23.071383892 seconds)
done (took 73.615363924 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.80650782 seconds)
  done (took 3.545646425 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.829196715 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.964048895 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.811773233 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.810610593 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.806212795 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.807638477 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.811033985 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.805018708 seconds)
  done (took 16.386243416 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.803084052 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.805685489 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.805905705 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.802854652 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.80609272 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.80659921 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.803770146 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.805680328 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.802930259 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.803138988 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.803077984 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.802756756 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.80562122 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.803812317 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.806977211 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.807182661 seconds)
  done (took 30.615370677 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.804671649 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.805069863 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.803725803 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.804249438 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.803966719 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.804820457 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.805883901 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.80426389 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.80387119 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.804413656 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.80402354 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.803830646 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.804769324 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.80386502 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.804722045 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.805674195 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.805313274 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.80442891 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.810218675 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.804720988 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.805876304 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.805001974 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.806089156 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.805969124 seconds)
  done (took 45.062676404 seconds)
done (took 97.349267529 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.672128545 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.19518366 seconds)
  done (took 8.609904261 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.809247069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.808022168 seconds)
  done (took 5.392070395 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.807943005 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.808690958 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.8084887 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.807954924 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.809915622 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.813839728 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.81105103 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.810176986 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.811787139 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.811857704 seconds)
  done (took 19.844218228 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.811135673 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.808068894 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.806279787 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.808329037 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.807969564 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.805257525 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.808442162 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.808399352 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.808588827 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.806111326 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.809967129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.806568186 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.809428581 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.806709756 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.808816208 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.806812237 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.807130889 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.807456026 seconds)
  done (took 34.287911391 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.809148145 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.810385465 seconds)
  done (took 5.363472725 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.806739246 seconds)
    (2/7) benchmarking "second"...
    done (took 1.807600621 seconds)
    (3/7) benchmarking "month"...
    done (took 1.807508313 seconds)
    (4/7) benchmarking "year"...
    done (took 1.807127551 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.806976453 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.808555216 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.807851333 seconds)
  done (took 14.395921394 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.810265452 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.974355947 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.044893526 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.462762556 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.812228316 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.813061212 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.725506152 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.813990543 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.814790311 seconds)
  done (took 20.016550183 seconds)
done (took 109.652050485 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.634250064 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.807132657 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.16058762 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.918035221 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.824843634 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.147055938 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.829351545 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.03053603 seconds)
done (took 43.096648895 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.872394553 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.361520925 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.38251331 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.255187002 seconds)
  done (took 12.744133413 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.807284262 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.325892069 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.842443573 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.406249538 seconds)
  done (took 20.149214196 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.174003266 seconds)
    (2/2) benchmarking "read"...
    done (took 2.163403735 seconds)
  done (took 6.088172059 seconds)
done (took 47.599890972 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812772574 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.812698177 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.809420622 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.813018704 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.80958797 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.809613231 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.812975941 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.814067398 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.813064685 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.809546643 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.813040623 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.813085881 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813695733 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811791454 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811258371 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.813457946 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812909235 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.810947459 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811720559 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.810678416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811140599 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81311593 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.811290481 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.810727715 seconds)
  done (took 45.233402812 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.814460077 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.812457474 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.814200496 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.813489789 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.813033843 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.813711317 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.814117392 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811527513 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.814277686 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.814307308 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811531493 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.811905178 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.814239488 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.811602122 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814832698 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.811370675 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.814761942 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812068459 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814947323 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.812495401 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.814450059 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812319602 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.812955136 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815531047 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.813736166 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813064554 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.815947286 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.813759073 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815736237 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.813379719 seconds)
  done (took 56.154222641 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.820745917 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.823374591 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.814816023 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.815346034 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.815779026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.815455283 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.815703739 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.816042316 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.816323098 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.816075352 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.81610632 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.815576218 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.816391902 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.816718704 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.816448678 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.816189179 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.816639225 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.81607321 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.816413677 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.817044764 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.816290562 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.816957988 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.815845153 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.816989389 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.816915868 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.815727299 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.81638988 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.816992588 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.816230457 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.817191476 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.817157755 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.818037353 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.816761171 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.8177301 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.816822856 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.818330597 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.82238464 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.825741007 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.817106751 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.818071056 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.818457158 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.81796239 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.817428027 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.817247888 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.818127384 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.818082114 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.817528698 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.817568862 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.818608823 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.817204499 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.818371911 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.818490872 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.818118951 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.81715929 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.818699302 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.818939525 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.818754246 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.819256491 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.817879796 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.818486907 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.818884399 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.819601007 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.819383493 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.818709834 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.819390523 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.819137156 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.818773351 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.81903836 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.818983839 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.81924883 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.81834524 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.819225214 seconds)
  done (took 132.6301052 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.819057395 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816980323 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.816069806 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.816602467 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816504474 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.819285252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.817317406 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819134544 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816166517 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819768068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819936103 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.816603144 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816789533 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819827321 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819799375 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.817033255 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819570487 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817268632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.820955127 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.819673861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819662161 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817213847 seconds)
  done (took 41.754274708 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819632169 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819868322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.818031738 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820809241 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.816736116 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820283947 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.820987569 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820309688 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820307971 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819163594 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818349325 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82120811 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.817982256 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818071262 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818463792 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.818467504 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821832213 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818581272 seconds)
  done (took 34.504110977 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.818555969 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.818574597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.821082915 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.818796016 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.819231319 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.821846942 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818681736 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.820970272 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.821304413 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.818917311 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.821784894 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821532234 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.822710152 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818146915 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821649679 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.819330102 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.821974089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819642437 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.82170671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819453046 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.818892167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8209085 seconds)
  done (took 41.801442707 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821358805 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82214278 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.819737777 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819583021 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819450626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.822334377 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.822955881 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.820128554 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.822627877 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.822621659 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82055364 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822637639 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.820677584 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820327443 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.820505061 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820522035 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823161424 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821248054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824409676 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820435442 seconds)
  done (took 38.183707609 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824246 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824407487 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824070922 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82437735 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824036834 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.824025184 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824520361 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.824061698 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.823910297 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825130992 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824078759 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823656257 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824393122 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823936125 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82461001 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823623495 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825210506 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823340536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824374521 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823762843 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.826219067 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824596979 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824314582 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825126496 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826215924 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825022591 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823953596 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82442702 seconds)
  done (took 52.842599404 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824636518 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825600086 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.822755909 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.822595167 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.822169938 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.822607965 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.822354625 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.82239685 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.825344024 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.822771358 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.825114794 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.825269872 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.824951509 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.825271765 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825379895 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.825135788 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825856348 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.823815729 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824384559 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82322627 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.825420042 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825362995 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.827189682 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823098335 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824022728 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.825537019 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823475315 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.824177182 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826819808 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.82337359 seconds)
  done (took 56.489274543 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.843801877 seconds)
    (2/2) benchmarking "in"...
    done (took 1.844890752 seconds)
  done (took 5.44803081 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.82358511 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825898055 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.825508845 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.82357628 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.823982088 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.825953478 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.827060604 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824308797 seconds)
  done (took 16.360505415 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.82573826 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.828093441 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.827224665 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.827255284 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.827796766 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.826751525 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8319428 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.828105407 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.829319698 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.827318045 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.833908645 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.835857619 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.829582878 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827436656 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.827089535 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829151569 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.82703519 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.828767954 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.827524502 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.827815828 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827861634 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.828795992 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828841363 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.824574122 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.830348599 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.837215998 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.830689415 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.828217317 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828303759 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.831924941 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.828008268 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.825019724 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.828299472 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.829618263 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.82899253 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.829661639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.835197461 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828876656 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.833887735 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.829999149 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829548642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.827036703 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.830174984 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.830642075 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830134498 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.829821197 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.828832299 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.826072267 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.827969592 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.831685092 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.834723629 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828352915 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.826668905 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.832227033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.830147518 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.834868053 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.829817284 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.831789569 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.839224576 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.838796629 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.842971911 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.837758933 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831084227 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.829899728 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839668474 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.855607444 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.835280387 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.827788825 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.827266218 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.830355899 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.836306151 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842698151 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.83871719 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.830803593 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.831243515 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.831332684 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82959475 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.83090819 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.837078392 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.832476204 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.830318307 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.831273016 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840971972 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.855032614 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.830279736 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.83216792 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.83221174 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.832021661 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.832197831 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.841655183 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.832985202 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.831154979 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.831737994 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.831868403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.833420906 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.832386906 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.83050358 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.831686147 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.829219323 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.832043023 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832847247 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836104864 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.840244625 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.831773823 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.83253065 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.836802013 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.832750134 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831589782 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.838289512 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.832557047 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.833051584 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.833776788 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.838418441 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.830102049 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.835640716 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.841236838 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.833511555 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.834088024 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.83243594 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.833259623 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843638886 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.859892365 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.83324986 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.832936673 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.838865741 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.846509457 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.83427348 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.839016166 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.833309791 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.831173072 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.830108273 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.835394935 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.83357804 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.833738339 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.834115603 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.834662349 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.831600613 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.83378044 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.83464449 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.834161654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.835644259 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.834650442 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.834788909 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.836660523 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.835673988 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.835999219 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.839540799 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.834199536 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.835429658 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.835908344 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.832371911 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.835576398 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.835827967 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.835516221 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.835671497 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.835573432 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.835629026 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.835518713 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83524988 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.836029312 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83536429 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.837081239 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.838783158 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.835558797 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.838121913 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.835199459 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.833802861 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.83481026 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.835756006 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.835996732 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.835952194 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.834911196 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.839421366 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.845580202 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.836781188 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.837178045 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.838639896 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836100038 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837846202 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.839767609 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.843027223 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.848233184 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.840575714 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.844106913 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.839830454 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.838539013 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.840319918 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.83973727 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.837075034 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.837143608 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.840329292 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.844699279 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.850451012 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.84553666 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.838761557 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.8411433 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.837843294 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.840975036 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.840022799 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.83761674 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.837648509 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.839287837 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838131089 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.838119491 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.839644415 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.838113443 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.836954 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.838442002 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.837660286 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.839991313 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839039411 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.838748884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838283905 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.835315789 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.839082146 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.839044563 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.837951761 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.834745412 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.837815772 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.837397568 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.839026151 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.839037162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.845464177 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.83587264 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838516482 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.84050384 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.838118817 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.837569791 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.838908793 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840735262 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.838263228 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.844646637 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.840349094 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.839885538 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.844678972 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.839342284 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.839339225 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.841843935 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.840909615 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.837624924 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.843274114 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.848099725 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.838649697 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.840154737 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.840428892 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83995651 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.840151104 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.845922513 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.837773206 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.840548893 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.840603487 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.841623962 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.837617008 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.840646994 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.841801856 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.84202594 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.842082929 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840866159 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.841407047 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.840778842 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.84086115 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.8407096 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.842057099 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.844315903 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.848893181 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.844970692 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.840981342 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.842728391 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.841967844 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.846064735 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.842075399 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.841064417 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.840717692 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853963595 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.851278708 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847026086 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.842253112 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.84179828 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846771371 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.843292824 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.847272362 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841244467 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842620261 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.840367312 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.842291343 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.839855265 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842684323 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.842085436 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843031761 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.844001317 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.847003165 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.84312562 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.842223418 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.842519602 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.841934735 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.842161551 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.842273445 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.842460713 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.844403214 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.843676974 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.842361384 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.843056919 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.848142526 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.843693762 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.844537542 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.842707151 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.842777604 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.843128799 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.845104138 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.843901382 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.846534007 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.852360527 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.847459513 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.852914098 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.845358714 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853036296 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.844607597 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.847757427 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.852375468 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.841703874 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.843752953 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.843789923 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.843518635 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.849677923 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.844160172 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.844970359 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.849047296 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845281595 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.844342755 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.844297709 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.843100236 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.844386193 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.844586699 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850556001 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.846318323 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.848589733 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.846805942 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.842414151 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.845256727 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.845238012 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.84414927 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.848441201 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.844871359 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.845189702 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.844817036 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.845514374 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.845596588 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.84657311 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.846360836 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.844590429 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.845525758 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84992737 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.845391315 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849825051 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.84600535 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.852864309 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.847256737 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.851686951 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.846208761 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.847625464 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.847553854 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.846785156 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.848694519 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.846127692 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.848142175 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.847853767 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.847439144 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.850657879 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.846895017 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.847739998 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.84796713 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.847388947 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.846512036 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.856447787 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870742341 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.848429644 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.850855752 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.844486345 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.848331133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.852380669 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.847645909 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.846313019 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.851973894 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860656016 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.859832366 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.851410061 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.850115137 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.85151115 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.853780544 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.847837344 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.847738337 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.847962208 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.847474122 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.847976452 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.848482597 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.852175246 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.848377473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.848726524 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.849142267 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.849396364 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.857022595 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.84848835 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.848224626 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.84899369 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.848850089 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.849244995 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.84980125 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.849167942 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.849338495 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.84971628 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.85004346 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.856105793 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.855498928 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.851653774 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.848361708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.849219273 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.850478494 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.849593895 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849511824 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.849665084 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.850773929 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.850169105 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.850126495 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.850500154 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.848674632 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.848443814 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.851106611 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.850610329 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85244649 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.85695041 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850020046 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.846818631 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.850355156 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.851633717 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.848968446 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.850134242 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.85662868 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853689554 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.860724045 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.859534998 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.854947451 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.851178117 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853849166 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.858867118 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.849495769 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.851302684 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.851082449 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.851895508 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.851332748 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.854599597 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.851412404 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.857081761 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.851490201 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.850072979 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.858124885 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.851489273 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.851105651 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.852781172 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.855424136 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.850449633 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.850209217 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.851939591 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.851702288 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.856203277 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.852648882 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852265679 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.853530859 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.850604484 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.853465836 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.856995652 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.852524734 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.85317057 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.849974404 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.852672066 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.852559111 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.853756926 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.849661261 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.852889952 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.853029863 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.855999862 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.860157698 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.850365465 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.854241232 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.853398503 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.853421647 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853469742 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853589934 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.850293852 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.85130298 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.851901278 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.853246642 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.853636971 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.855027689 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.853215656 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.853946546 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.855603136 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.853936124 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.857176269 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.864672853 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.861160542 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.851573858 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.85149555 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.854747261 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.856113717 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.854086278 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.853848037 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853714663 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.855970978 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.853730543 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.854167626 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.854298412 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.857255372 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.869143434 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.854654091 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854444307 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.854701497 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.858038535 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.854136634 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.852550946 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.855587702 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.856897124 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.857140946 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.862939582 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.854242939 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.860848083 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.855337959 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.856402713 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.85988137 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.85899199 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.863907528 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.857573565 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.855973869 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.856386788 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.860192983 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.871958735 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.856338179 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866254819 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.885853811 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.855045485 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.856595668 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.85651514 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854441177 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.855828404 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.856992625 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.857539373 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.857436886 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.856260938 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.855494328 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.857181338 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.862593987 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.858960139 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.856828017 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.857330887 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.856987155 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.857461164 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.854081335 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.856141653 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.857649787 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.857519497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.857052512 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.857299351 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.857141329 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.869478172 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.867456506 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.857592583 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.857327378 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.854873413 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.860057269 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.860414411 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.868687834 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.866149688 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.857190083 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.858581714 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.859766008 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.858018693 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.855690113 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.857716332 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.858004408 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.856646545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.855940902 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.870125804 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868642371 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.862291158 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.859348509 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859193218 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.859236162 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.859832605 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.858275155 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.858968469 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.860675551 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.859396218 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.864666206 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.859793074 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.859338898 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.861322927 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.868389049 seconds)
  done (took 1101.234173651 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856587671 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856534838 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857484047 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.856313908 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856788501 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856168611 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857040851 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.856627229 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.85723677 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856245695 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856301992 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85737735 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.85708252 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.856586338 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857533723 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857824136 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856911676 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.857507567 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.858591704 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857863794 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.857153044 seconds)
  done (took 40.78949778 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.85975318 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.857202559 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.857485472 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.85976762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857556629 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.860645016 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.857332825 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860448607 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.86105576 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857698148 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.861983776 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860738421 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.858691643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.858352203 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858835513 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862467429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.859957604 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.856835607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.859685528 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.856229861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.860441643 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.856768504 seconds)
  done (took 42.693679155 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.859394022 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.860038282 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.859204317 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.863041515 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.859097107 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.856644846 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.860053023 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.859072703 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.861242884 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.859158796 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.857983714 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.85967441 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.866006207 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.864790846 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.861007038 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.857569294 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.001240363 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.857631744 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.857709916 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.855082017 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.848552163 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.85464192 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.848865121 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.848576444 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.851035551 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.853312025 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.854472166 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.85331989 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.852674465 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.854730054 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.859035743 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.852128316 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.852027332 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.855494609 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.852003814 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.855547922 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.855841582 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.853671093 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.851332529 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.853908235 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.864481812 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.873629836 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.852657488 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.856115388 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.854371754 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.851019964 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.857102332 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.862555153 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.850377963 seconds)
  done (took 92.912626068 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.853113143 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.853270826 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.851410052 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852566211 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.854231193 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.852188928 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.852127582 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853969155 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.850660821 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.848705496 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.851764743 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.851189069 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.85078911 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.853041118 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.853079687 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.850468092 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.8502452 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850916945 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.850724813 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850307287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851119612 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.85343697 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.854013665 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.852090082 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853327822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.85148723 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.85054936 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.854035154 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.851018815 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.851155759 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.854547372 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854313759 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.853421081 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.851308955 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.850636241 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.854130332 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.85512833 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.85230321 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.854025615 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.853028248 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.853121458 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853494858 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.854159904 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.854938453 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852330555 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.85138315 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851264414 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.851126669 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.851928833 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.85583716 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.854004012 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.852545904 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853805915 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.853186277 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854720708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.855980884 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.851740584 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.851395051 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.854142479 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.85222241 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.851883633 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856340395 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.85231148 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.854446332 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.855925103 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.853477656 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.853257836 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855187157 seconds)
  done (took 127.774761593 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.855546186 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.855347608 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855325802 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856010484 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855161968 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.85644343 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855010736 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.855985148 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.854884042 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.855257408 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855713107 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856073795 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.855961284 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856105634 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.855418291 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855771197 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856960434 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856277007 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.855384359 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856306488 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.854942773 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.85441681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.856156855 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.853985298 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855785592 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.853219482 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.853503233 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.855335686 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853592006 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.854754291 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854122872 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.85284622 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.85270265 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.853348126 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.853675136 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.854980152 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.853400399 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853242538 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.853600877 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.854216795 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.854578888 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852768725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852632112 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.853302181 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852317732 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.852862383 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.853673147 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.854569266 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.852826779 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852136363 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.851571666 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853069645 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852993349 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.853383876 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.852295107 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.853346139 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853065174 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85256866 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853286463 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.853287881 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853353549 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.852882603 seconds)
  done (took 116.753309288 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852926432 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.853346878 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.852313816 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.850473532 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.853027691 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849817928 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853434875 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.85294113 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.85155305 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.854513774 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854329323 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850750489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850334518 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854126311 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.850944538 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850961581 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850201371 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850447608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853340458 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850673146 seconds)
  done (took 38.828320733 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.851826722 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.854160939 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.851992394 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851122828 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.853899659 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.850800568 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.853435199 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853929276 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850963828 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854749565 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.855510856 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854298473 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852057114 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.851010359 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.852711358 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85173974 seconds)
  done (took 31.432439819 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.851037538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.854819022 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.854098799 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.85320342 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.850968095 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.850517866 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.852240573 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.850643815 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.848978668 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.854146339 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.852377187 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.852512307 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.852149241 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.852862703 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.849475535 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.852157296 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.848711701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.848687872 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.851419101 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.851837385 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.852686383 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.851268846 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.854494548 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.853964452 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.852572861 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.853561637 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.851808121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.851060995 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.85011836 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.852453385 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.846943752 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.849899268 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.846259303 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.847131724 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.849305082 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.847764824 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.848869747 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.849456036 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.850279375 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.849825086 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.850157681 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.848000659 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.849597903 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.84942437 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.846656498 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.848348933 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.847199444 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.847593429 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.842157611 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.8427936 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.844978098 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.846271101 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.845892489 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.846218374 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.845286116 seconds)
  done (took 103.531582069 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845633276 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.844660528 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.841545022 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.845278561 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.845565481 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.842167088 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.845499951 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.843240544 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842401608 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.845968721 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.843060409 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.844414504 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84163918 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846082985 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841837419 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844745425 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.841756906 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.841439659 seconds)
  done (took 34.966195248 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.843914566 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842799934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.84437693 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.842515864 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.842217523 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845129516 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841853645 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.844506228 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843871663 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.841844336 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843260864 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.845441555 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844436156 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.844734568 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.842918807 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841901712 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.846209819 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844716369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.842137768 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842801667 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.844704037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846621587 seconds)
  done (took 42.341876794 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.84366503 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.843374602 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.859270497 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.862944113 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.8661081 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.875659276 seconds)
  done (took 12.928921489 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843317859 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845392407 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843762552 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845522767 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844623957 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842394152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84385677 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842201398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843409426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841519378 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842329738 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84476522 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844934927 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842944305 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845251535 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843782371 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841781721 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841757889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843864369 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843641836 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842719486 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84356187 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843390638 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841344773 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844064304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84168483 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844055847 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842459217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841410773 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844639618 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844615093 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841883445 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845319707 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840997823 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844660189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84430784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840762585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845214154 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844289409 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841294444 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845789305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844557773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844257558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842284961 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84514343 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843625808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841774448 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840691118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842100067 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844523405 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844639663 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842547593 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843095199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844114505 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8438343 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846067618 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840374568 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841679726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842956489 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841403057 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841537181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843569252 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843931017 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841171051 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843408384 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841020418 seconds)
  done (took 123.433980366 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8426946 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84108824 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840594916 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843003884 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841148379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840057824 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841324104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840322319 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840266267 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841651008 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84351093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841450766 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840489521 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840764002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840496829 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841471306 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842098305 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841738023 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8410658 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844671864 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842030647 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8400311 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843528289 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840604088 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841745275 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843903762 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841224136 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843163419 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841881141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841164663 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841115219 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842152165 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842004507 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842802199 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841511204 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841032598 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841655623 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841178411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842628601 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843686593 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841792605 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84478695 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841722924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841946832 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841623947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841271416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840071121 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841939593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842218902 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841324149 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84089229 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840988316 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842577264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842469524 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84134139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841464194 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841844121 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84118844 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842300431 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84399405 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842105122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842392301 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845380423 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843489824 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841125164 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840965693 seconds)
  done (took 123.340973374 seconds)
done (took 2556.111086893 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.86788663 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.942609936 seconds)
  done (took 15.587941642 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.009661934 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.960127338 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.843456133 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.888491962 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.84380621 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.841638123 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.863010268 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.842559778 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.844753532 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.844560544 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.843551514 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.032107327 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.838400969 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.84302189 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.844309868 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.938326702 seconds)
  done (took 51.905383644 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.846420822 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.846925289 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.859216548 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.84919548 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.847692456 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.858664499 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.880303 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.849903412 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.88352016 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.858605987 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.919279116 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.857345389 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.845228276 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.897454799 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.858861971 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.863099026 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.932816612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.922617309 seconds)
  done (took 35.457998451 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.924965943 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.850271222 seconds)
  done (took 10.561316243 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.854873109 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.870568766 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.847660847 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.844753008 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.848592932 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.883529348 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.850177354 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863746209 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.86828838 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.875730952 seconds)
  done (took 70.389872684 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.85239033 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.848528124 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.847248449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.845734868 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.839322047 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.844561377 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.847495295 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.841548585 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.52857154 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.887245102 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.85463194 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.853329628 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.846258661 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.848784684 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.846219745 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.871506891 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.967125476 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.844443063 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.844736589 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.853267633 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.847931085 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.913991295 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.861354057 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.848644227 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.878781888 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.532064259 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.860659533 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.854224427 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.960619989 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.846318219 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.849579745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.848409523 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.849129301 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.240238447 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.176705682 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.84886489 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.858196849 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85787893 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.845714388 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.988062339 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.84816461 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.853775127 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.784861362 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.152779919 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.936363925 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.892268004 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.207681007 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.852776928 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.850540287 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.878838482 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.851860035 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.850425972 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.862275793 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.360952429 seconds)
  done (took 131.547608307 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.844533309 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.157516647 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998591812 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.845601155 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116800458 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05165448 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.846625423 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89497305 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.846285814 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.047398549 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06785786 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954121163 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844984174 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.845846861 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8461905 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843035679 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004822495 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913241334 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.846969554 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.843241857 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87340471 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052746256 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.974825265 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847231893 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.867110466 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.055380232 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.966499059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952361938 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.312753812 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.842606513 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910962344 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.846057282 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.84572926 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.844749232 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001553947 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942074095 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93588975 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.848810948 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843280377 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844000399 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.511624715 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041739902 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944457257 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.988496845 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.097392471 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050158509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492730178 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.843932686 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.484311317 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007968119 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.059866528 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.052713041 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.972031674 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.848151271 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.004963342 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84674595 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846056152 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084095447 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090380449 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950393906 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847701689 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.846201446 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844748213 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091109593 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.851159282 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944226753 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85066716 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.846665591 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.947484152 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952072414 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095039718 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061895676 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.881630008 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.14410715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.318500339 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.061012064 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.916052976 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08411138 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.849409292 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846176364 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93394235 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.608081802 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.04845961 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096717097 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.069456891 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883753511 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.471457283 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.846026737 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.042335401 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.034452822 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.042279351 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08922428 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.001578312 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.180911347 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847796817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.849256848 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.071340051 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985642345 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.85166595 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.209945739 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082910502 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.403239694 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881402839 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145121486 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98217901 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.215322294 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.473302605 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.849153827 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015964371 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.889399542 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.849880238 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848407562 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.040525258 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.656427001 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849171781 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.594587773 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.913307844 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854016022 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052031125 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85425824 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060424526 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853121164 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085357691 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.271698765 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.884385912 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.020652741 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.092178724 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.639283286 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097278794 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.094382977 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.968248506 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145936427 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.579607323 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.850751154 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.126066282 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.8524271 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.850311453 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.016341828 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.853207958 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084769957 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852997918 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080441722 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881150281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009386662 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853374434 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.084554314 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.88769643 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903778415 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85314284 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982633133 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852024026 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.793249467 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006523002 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.852077663 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850928924 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.268223735 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.851519512 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998953952 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.082365448 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876859438 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921015389 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.37782062 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849951367 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939947151 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881210565 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.275259418 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.851661218 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.070358192 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.819633521 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293533761 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.852510407 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.091425976 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108853515 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854141886 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850769364 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.594264695 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.534786053 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851376261 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.011006616 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.312175211 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.497171563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05567356 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855672902 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982341474 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855842239 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.931474423 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.200397549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852082897 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.852821667 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.851740088 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.852021603 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.853512721 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062549288 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.883756548 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.381284938 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.990199835 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070785173 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.163296973 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.073070321 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.900517169 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.856207768 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.120784655 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.856602452 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.91997008 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.855870277 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876750762 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087122782 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857494479 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.080865794 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.107470336 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.774586033 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90613564 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.858634338 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855867992 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.853523752 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.007136688 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946927815 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856526903 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.8542914 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.966415612 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983025661 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.047771257 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.445856475 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.024295013 seconds)
  done (took 895.931734436 seconds)
done (took 1213.158878915 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.85547617 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854853237 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.844236436 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.853240164 seconds)
  done (took 29.202582662 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.860288526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.857626538 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.860154578 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.857891033 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.858820461 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.858134226 seconds)
  done (took 12.942118287 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.915399314 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851243391 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.856022882 seconds)
  done (took 21.413783383 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.928096432 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.265159504 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.970964645 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.296390339 seconds)
  done (took 10.251523886 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.860128785 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858968877 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.858406347 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.8603793 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.861847135 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.862954822 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.859127302 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.860443536 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.861856904 seconds)
  done (took 18.535853372 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.279624962 seconds)
done (took 98.42093709 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.282265729 seconds)
    (2/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.846038394 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 9.318615823 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.944737335 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.181737377 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.216480492 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.936604736 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.088891665 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.163588705 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.368580498 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.909383871 seconds)
    (12/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.159715854 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388364008 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.896501633 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.385218169 seconds)
    (16/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.991350049 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.915880785 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.921795307 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.485212847 seconds)
    (20/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.146519253 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.371544934 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.208060015 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.652150802 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.859230527 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.166322467 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.94074394 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.896618993 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.944220343 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.233021017 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.964968402 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.861573721 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.052566733 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.201967052 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.334836941 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.01047195 seconds)
    (36/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.961318272 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.975065158 seconds)
    (38/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.861366151 seconds)
    (39/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.87354125 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.163430489 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.977412741 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.529463905 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.160764209 seconds)
    (44/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.877889654 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.888629165 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.197089986 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.933760063 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.885004361 seconds)
    (49/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.087510461 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.029262619 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.154128768 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.974042669 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.940628212 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12519972 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.991438947 seconds)
    (56/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.057689544 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.760797815 seconds)
    (58/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.957839274 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.911678359 seconds)
    (60/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.967954518 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.879877791 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.920627617 seconds)
    (63/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.878725075 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.078417453 seconds)
    (65/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.970625463 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.89288713 seconds)
    (67/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.998394405 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.035140054 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.120367781 seconds)
    (70/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.948431533 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.233414157 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.687545372 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.962638678 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.877960661 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.868075175 seconds)
    (76/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.952487803 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.679902235 seconds)
    (78/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.958895089 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.927877446 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160706065 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.381022303 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.242779058 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.979725712 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.571313467 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.702738885 seconds)
    (86/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.163753309 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.870577982 seconds)
    (88/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.547890079 seconds)
    (89/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.030796909 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.864370787 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.52426199 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.963123361 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.547278709 seconds)
    (94/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.489631604 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.893472232 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.935926628 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.174911716 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.772324643 seconds)
    (99/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.949067223 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.111704816 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.787897482 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.874591551 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.551670154 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.093055645 seconds)
    (105/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.011304105 seconds)
    (106/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.003342854 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.125418262 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.097774368 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.783064597 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.256896237 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.038618321 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.086892538 seconds)
    (113/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.340783436 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.149155862 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.868075333 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.838422817 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.875863087 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.54607212 seconds)
    (119/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.414254713 seconds)
    (120/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.458685511 seconds)
    (121/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.029189733 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.779139705 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.909575263 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.322590746 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.893803245 seconds)
    (126/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.851746352 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.174211635 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.164032865 seconds)
    (129/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.069339226 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.87378045 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.164117561 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.521264579 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.158886591 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.948771605 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.871096364 seconds)
    (136/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.093909289 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.379895834 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.998454232 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.165789396 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.933848389 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.991657346 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.393000883 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.967513841 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.87651567 seconds)
    (145/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.528783953 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.283409751 seconds)
    (147/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.446704183 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.895452555 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.091492467 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.272490469 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.896056813 seconds)
    (152/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.468480375 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.763792363 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.170538524 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.250476277 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.231849065 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.016934523 seconds)
    (158/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.93838456 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.891430739 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.854437519 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.099760077 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.276962344 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.871627695 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.016033709 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.874112233 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.267554873 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.481563973 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.377940263 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.96034782 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.989710288 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.896126388 seconds)
    (172/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.014867808 seconds)
    (173/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.956814999 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.531891703 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.040949452 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.982798522 seconds)
    (177/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.048886659 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.862266646 seconds)
    (179/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.871463326 seconds)
    (180/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.005965735 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.979512984 seconds)
    (182/309) benchmarking ("sort", Float32, false)...
    done (took 5.634318274 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.964069586 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.516237345 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.89690604 seconds)
    (186/309) benchmarking ("sort", BigInt, false)...
    done (took 6.869702817 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.698483007 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.910399793 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.05199007 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.902687476 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.912855451 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.159260217 seconds)
    (193/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.004525393 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.970014545 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.897561409 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.92760641 seconds)
    (197/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.871838877 seconds)
    (198/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.45728367 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.873063507 seconds)
    (200/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.222111777 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.245102301 seconds)
    (202/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.052883176 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.048634666 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.036355544 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.783312742 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.960654621 seconds)
    (207/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.645210985 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.081380806 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.095323506 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.97147481 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.902747769 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.163547008 seconds)
    (213/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.285801158 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.09693829 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.948743976 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.269092115 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.258545662 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.676518235 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.235842057 seconds)
    (220/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.837484667 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.96341584 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.950566876 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.05438309 seconds)
    (224/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.391576614 seconds)
    (225/309) benchmarking ("sort", Float64, false)...
    done (took 5.695754433 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.876589598 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.664179087 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.111549671 seconds)
    (229/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.210336192 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.001165468 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.972111264 seconds)
    (232/309) benchmarking ("sort", Int8, false)...
    done (took 4.84518382 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.840940167 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.881944907 seconds)
    (235/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.877890014 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.81363964 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.863491031 seconds)
    (238/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.92053343 seconds)
    (239/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.861890145 seconds)
    (240/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.434005054 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.897875017 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.974692164 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.933133503 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.267462935 seconds)
    (245/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.187637238 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.875754662 seconds)
    (247/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.04923778 seconds)
    (248/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.959935637 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.874211996 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.865209323 seconds)
    (251/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.552102602 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.962316811 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.235050314 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.117878165 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.079197914 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.972277172 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.898382312 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.204219429 seconds)
    (259/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.390265145 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.885754299 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.114134189 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.914237209 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.859807652 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.645450804 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.145881029 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.260962009 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.961050655 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.949766941 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.076373993 seconds)
    (270/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.258137886 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.90579469 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.220239981 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.966127796 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.902210496 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.860809815 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.247815792 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.864994744 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.922505123 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.984741746 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.890600641 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.946274201 seconds)
    (282/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.985711861 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.977234205 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.970738116 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.876075898 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.587985255 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.993128579 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.663989803 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.967023877 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.876823696 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.311911312 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.043255824 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.254330128 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.603480671 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.04116393 seconds)
    (296/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.230541605 seconds)
    (297/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.079039563 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.487988342 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.918962798 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.330487622 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.521717839 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.885284826 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.217972058 seconds)
    (304/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.09302803 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.813395939 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.915213643 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.182625143 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.164433786 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.97761686 seconds)
  done (took 1017.827855177 seconds)
done (took 1019.897244233 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.91221722 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906066726 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.889752025 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.911606784 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.001976883 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.925687434 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.900156483 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.891543598 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.938489982 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.938724669 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.888516009 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.925644002 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.892575914 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.891234819 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.889425275 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904022284 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.200528754 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.917120533 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.908900481 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.900535701 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.906310104 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.889833405 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.93977849 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.926189522 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.895321829 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.892913006 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.893548982 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.910443948 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.002340967 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.894614474 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.893729859 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.901515061 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.19960283 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.915610946 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.886808563 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.911264066 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.903038053 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.900793672 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.894869559 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.925040133 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.343007701 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.897236055 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.89239503 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.89030106 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.892640002 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.896159905 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.893087602 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.8964506 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904631521 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905174584 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.339621645 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.913136499 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.894632663 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.892752825 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.901545878 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.892899296 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.895922416 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908904466 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.912332881 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908282715 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.190715807 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.921440032 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.895389258 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.909951763 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.901111573 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.375062002 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.893587435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.896670939 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34192654 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.904842888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.375509523 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.908101796 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.894772202 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.907589303 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.925268452 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.206017279 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.913612257 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.89406226 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.901106785 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.892800043 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.90637109 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906707022 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.898566844 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.893885137 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907646501 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.931531379 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.904111897 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.89515741 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.902674298 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.913217877 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.907629265 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.905279237 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.898038527 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.889313595 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.903561607 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.897564142 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.90130577 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.89745206 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.898947803 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.905164817 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.341525245 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919095756 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.891051346 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.891349266 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89471133 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.908812598 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.340178382 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.902093179 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.915914506 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.942147385 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.896604706 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.194047357 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.923152668 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911501449 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.90460343 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.899768949 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.89309196 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.193874911 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.36530822 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.917335569 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.897721618 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.895256341 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912046087 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.897729094 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.89162795 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.204428229 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.921094397 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910806748 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.016499752 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.906039286 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.927978585 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.896019333 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.898676879 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.932713249 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913311783 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.928308807 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.899904237 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912412649 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.912502464 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.893533571 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.908234344 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.907380528 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.900126686 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.903501389 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.891390384 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.933158355 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910722232 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911194784 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.918906296 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.018827929 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.894941001 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.19677155 seconds)
done (took 297.73863029 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.963024738 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.888358485 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.991461803 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.893406886 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.976117396 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.978565391 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.891901352 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.892817588 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.890755154 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.268426585 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.892133722 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.89304893 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.888056848 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.894068801 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.975865596 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.894474581 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.891752368 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.232154327 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.894942401 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.966827021 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.887478177 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.893160707 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.894643214 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.338546816 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.890728504 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.886244485 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.968065348 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.894493991 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.239843821 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.894480949 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.894276645 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.243325981 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.984972483 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.914301521 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.904171455 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.901777812 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.979578864 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.897961321 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.97550401 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.976191475 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.993574586 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.936541665 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.895438376 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.893442572 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.899860177 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.89596269 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.892737377 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.926225353 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.896872861 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.897394608 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.233288534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.905595791 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.893733259 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.89429403 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.898052935 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.92648503 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.89353018 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.896515003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.985573364 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.896658475 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.960374233 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.286650594 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.271754413 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.895784267 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.893099579 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.893739545 seconds)
  done (took 186.09710973 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.964548633 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.96885124 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.962241816 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.899895856 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.945249188 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.969634751 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.899757653 seconds)
  done (took 15.437327299 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.902503276 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896363234 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.946256586 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.946514024 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.897936257 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.046628644 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.897115167 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.908089015 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.896074163 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.950646107 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.897637022 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897317614 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.905099377 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.89403334 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.945252134 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.907733021 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.012538394 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.89939948 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.899078148 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.049089357 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895896673 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.904732168 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.95311909 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.908810194 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.898935041 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.903437036 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.497123794 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.899181735 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895087815 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.898187132 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895992209 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.945263818 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.898949057 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.892534416 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895854115 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.014291467 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.898397029 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89534157 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.899402116 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.896446521 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.897892136 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.899258595 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.898428485 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.894989732 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.897534138 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.922273767 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.900482848 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.899981198 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.898966887 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.899116154 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.954486801 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.898865956 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.897461775 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.898365615 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.955042569 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.907499422 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.899841309 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.897941014 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.900282512 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.896875127 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.050985708 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.948697471 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.901772915 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.947289682 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.899940089 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.900290568 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.900425642 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.900040889 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.994535389 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.900371575 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.948915119 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.898226591 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.057947632 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.924922317 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.90078164 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.903494117 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.903515442 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901110992 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.901598815 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.908681667 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.89978369 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.901073483 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.907440895 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897927267 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.897665467 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.012500808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.011928521 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.898995262 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.91301435 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.908355038 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.898409687 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.955582833 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.901322064 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.898337661 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.955230975 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.016841531 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.956919581 seconds)
  done (took 208.753415351 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.90707581 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.909760328 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.902758718 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.917676087 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.901574163 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.901067877 seconds)
  done (took 13.272153021 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.903157688 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.904393655 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.902247667 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.902279668 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.902185876 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.902015054 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.902912892 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904200656 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.905420867 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.902566593 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.902660827 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.904489994 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.903782211 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.901824916 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.902937661 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.902833176 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.902825007 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.901515395 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.90332042 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902847915 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.05345389 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.902132498 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904288161 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.902973563 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.907315661 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.903521828 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.911108448 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.905379814 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.903057816 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.909404725 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.906759481 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.903855215 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.90428925 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.908989944 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.907069688 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.904172683 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907070177 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.904961545 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.901330853 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.904617532 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.905106366 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.903766591 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.903276026 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.907075929 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.905901575 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.908695045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.909008287 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.910847141 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.905447356 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.904859368 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.904344978 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.904293272 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.906266329 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.907536766 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.907168361 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908621667 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.910153758 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.904633663 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.905211915 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.90876407 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.906069594 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.906183287 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.907481558 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.909629636 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.903619727 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.907816041 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.905334035 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.910327576 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.90678461 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.90699885 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.905885314 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.902851544 seconds)
  done (took 140.16232103 seconds)
done (took 565.563597371 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.177801757 seconds)
  done (took 9.012971329 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.984937323 seconds)
  done (took 8.921877594 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.469707915 seconds)
  done (took 10.306270373 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.917162341 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.918749976 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.909249916 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.899948891 seconds)
  done (took 29.491056656 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.041602066 seconds)
  done (took 8.877632011 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.914714169 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.900173089 seconds)
  done (took 15.68443888 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.93782214 seconds)
  done (took 8.775703769 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.962836115 seconds)
  done (took 8.802038508 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.91482324 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.90604961 seconds)
  done (took 15.670907242 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.887098185 seconds)
  done (took 8.723628071 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.56262091 seconds)
  done (took 11.408199211 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.909510059 seconds)
  done (took 8.760265153 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.957384288 seconds)
  done (took 8.793754804 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.050517131 seconds)
  done (took 9.887560237 seconds)
done (took 164.95176093 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.902903552 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.905353793 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.904689433 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.904618322 seconds)
  done (took 29.455135445 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.942232407 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.940366293 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.942081708 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.952526502 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.943913064 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.941383188 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.934494788 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.933742452 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.95300223 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.944304861 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.942885023 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.943800944 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.941826699 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.932599012 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.944884617 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.942002211 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.953691865 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.942981616 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.934988404 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.945343358 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.908711632 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.952419116 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.944790535 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.910211393 seconds)
  done (took 48.408147314 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.10347303 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.978525727 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.061006893 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.961804859 seconds)
  done (took 9.944240937 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.959695378 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.962260371 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.97338387 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.01334545 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.041034439 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.972040979 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.93672618 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.932053798 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.917608635 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.963219459 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.036946983 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.979412854 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.045499282 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.910185603 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.096629375 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909310397 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.910331238 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.96138751 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.014372105 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.029625029 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.908811024 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.961505102 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.964878937 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.979078388 seconds)
  done (took 49.218793964 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.908160196 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.917437625 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.914882649 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.910431444 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.909162063 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.909960545 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.91475905 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.911294294 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.931060831 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.911015638 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.909212154 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.909364036 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.909553951 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.910240694 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.909348072 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.921275534 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.923525499 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.910425071 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.912412438 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.915727901 seconds)
  done (took 40.109782996 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.90365734 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.759178696 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.259338478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.165395244 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.905194795 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.905206205 seconds)
  done (took 31.739409296 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.923310279 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.915660661 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.91089005 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.966505716 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.047263612 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.917725263 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.912072822 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.921791588 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.955178724 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.976491058 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.929731279 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.940073647 seconds)
  done (took 25.158365865 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.906409877 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.907969849 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.908110553 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.924379611 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.921378211 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.918032397 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.919336991 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.904722474 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.925696608 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.930198131 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.919814628 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.92252044 seconds)
  done (took 44.853427449 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997975707 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.95290051 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.940409749 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617348761 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28394884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118641341 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419222216 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244262361 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.911653659 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181001523 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962308436 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013101212 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162129013 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376592039 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.940020381 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.361175904 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203311794 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122461276 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931453982 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.594309657 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972777003 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.066644966 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.666827135 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963621532 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119137426 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.036446245 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.168461098 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907859143 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039848185 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945702276 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918128925 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909351406 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182256483 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284158073 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01323743 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918592186 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.526851309 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.62145518 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.899766452 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.757388938 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.637602705 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.034513398 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919342576 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908585229 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843019612 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037845188 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286620767 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.914911969 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.620905958 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909113361 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919839922 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998721142 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.913650868 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.726733399 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827444273 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910743526 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.907859271 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916269838 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480990784 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025320447 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.068648149 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.883032839 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.000411887 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.611786772 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295404754 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.057041038 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.913335387 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912924857 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845127875 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.67041313 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964549101 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238909771 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.932003559 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560200364 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215199113 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.024587464 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855743983 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184171894 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409998523 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.882726082 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138614522 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910776862 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845463611 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.945589158 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.845612924 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169985306 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944656784 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.679527085 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948833152 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246907573 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923444629 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930861413 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93500983 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135371469 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.798524468 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912774545 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.724988009 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055611358 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934161554 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246435463 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846678564 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.915940647 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166783046 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.123973058 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.965950703 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.401645969 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066996663 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45520776 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.9637119 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.044008709 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958665903 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.178708766 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968725936 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.031908292 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966855515 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913938419 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208010565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477118454 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.047277407 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.981772706 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039998747 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.240766508 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939825807 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979875231 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92265951 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91384886 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.702533722 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.467032747 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.914176721 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.915169174 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960143711 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959938699 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.914449352 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862019442 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.538599301 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973449152 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.929821689 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.137060868 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.45252697 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224074604 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848643728 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261857494 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97026318 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.137663267 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.552241881 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.988760235 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175264918 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.965398193 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.991564131 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961510682 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934180396 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013256275 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93706395 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.04596058 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20639522 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.919622004 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.919143997 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.698841209 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950555458 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918602853 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.919545308 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665358359 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18652343 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937067129 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.92018702 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.805711534 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.929766187 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980984134 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921364539 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925938408 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.459334069 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643949035 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.922979162 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.502135423 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141939987 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926759671 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.673696745 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031155524 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.99738533 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188232266 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975038228 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.850843733 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.627720377 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.609695094 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916698881 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851179475 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917986511 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930440133 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931060929 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.115251064 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187091158 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959907661 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.605342312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.958690258 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928988508 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.922406047 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916858537 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.428507321 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.034572626 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085900993 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963179634 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060961397 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.930700551 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852736435 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.921330634 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923468336 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919492101 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.918184408 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952187626 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.606317307 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298620867 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180550954 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.529762924 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932514176 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.626332982 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.975526018 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.977384434 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.765886645 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069197523 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.956252744 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930473348 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.929965782 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.685848686 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.613611281 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489761507 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230783781 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219213711 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357091957 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.103118076 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947967178 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256366982 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853419865 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476080194 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978099255 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693939945 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864264443 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004027826 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.556979118 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263213784 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933152364 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146759424 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307918729 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.681468592 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065012485 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13261441 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955746238 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.055328904 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882582638 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.207928773 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061122338 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.625029042 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126224816 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255259557 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622885665 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.047536896 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.920568707 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.59985653 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015764037 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.634907607 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.03893853 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.090865627 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.884494285 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394836388 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.928027385 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147040644 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271931707 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.062595918 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.041467882 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859304334 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.933716123 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.933196484 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.922961516 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.920916223 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.792671569 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.17743199 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932201806 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856356208 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.005410793 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20913329 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.822597073 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.927427686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922660721 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21805629 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449441143 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087490915 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.989612775 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.44298153 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931228156 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857269108 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858195647 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.616071289 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.928980164 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899275995 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127598194 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.020955846 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836850162 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973110049 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005465098 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179856419 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.937405715 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.189802848 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197740759 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.638109186 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948954464 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.025135568 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.621232616 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.033253297 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924916683 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160173805 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.674650133 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.150316131 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970912416 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.880626651 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.923206238 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138351973 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926000937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.85016203 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155809484 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.647870038 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.947475576 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243178225 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999078 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.84606617 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972202698 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.014770323 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934837935 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004663056 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935061429 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.935996346 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936171546 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971921952 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853226554 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.049486368 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.938823346 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0170029 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054585529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.449726147 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.9338441 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200732848 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284695898 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249615498 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982916867 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927269387 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926198774 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860834783 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076132535 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.15274095 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199761436 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.058192317 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.042514785 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95086361 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.624267183 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.106915094 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170842332 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201230125 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.823637237 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419706958 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966019959 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.927976654 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937565504 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.138188226 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133181791 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220726803 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076782209 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.987629038 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295667722 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201767665 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.928777439 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927971751 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516660637 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.961108144 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.62695198 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.965650209 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.858919498 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204883851 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938300269 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308954081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951537872 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.088096172 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.445981462 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.655115595 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.218373671 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.909079014 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987913766 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198673129 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312821129 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238956803 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994724682 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940209561 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.030809586 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074281505 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.878567543 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930432119 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931081632 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977985294 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.638798458 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939991229 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206676526 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238683617 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.9264019 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.867040292 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955017136 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.937454041 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152028309 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195053211 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179405793 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938363505 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934294051 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.744617639 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200205356 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987106816 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863531696 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.933170345 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025946354 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177765483 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952932314 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.382481871 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.640301166 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196985148 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.926360277 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950819836 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.066831682 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289017884 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247855863 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.465035284 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13745898 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.51388611 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.482233985 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230784047 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.934973035 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.065604837 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23390793 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.934113181 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978962514 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97004952 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.196041395 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240710878 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.960519726 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.626176775 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.903463121 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277124383 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489294354 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873042859 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941885285 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.995712039 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.932188107 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.065748005 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944416101 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.853354142 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087286567 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.717532531 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212893741 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.938881155 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.92277434 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.681730577 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.201799437 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965264348 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077622137 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933656733 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.648715671 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.295149651 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189448884 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.008422021 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.939933721 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.93783826 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935056051 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920490964 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129959323 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.13189979 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203613332 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.033186011 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.969027415 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941205065 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.151952931 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14796591 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.846925136 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07597342 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99361259 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975000851 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.849496749 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.437492818 seconds)
  done (took 1698.375163599 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953689442 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.958210966 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.946810128 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.970935561 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.952191007 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.000027523 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.963601871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955361902 seconds)
  done (took 57.571123646 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.936463035 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.136268803 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.945384183 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.937100236 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.94526529 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.936244396 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.107681918 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.947242177 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.944799881 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.946439337 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.944559426 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.936550553 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.246662937 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.959324354 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.937686781 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.921260557 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.94678372 seconds)
  done (took 75.550749706 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.935587751 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.03709183 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.974021483 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.956373062 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.897730387 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.948290024 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.756112498 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.968977492 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.939049716 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.170774617 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.578429545 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.960506984 seconds)
  done (took 90.996935507 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.947113841 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.94314845 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.944393047 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.942724422 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.944230521 seconds)
  done (took 11.597976814 seconds)
done (took 2214.843492013 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.182533774 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157680462 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.176684161 seconds)
  done (took 6.207949015 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.087598173 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.134769293 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.255602135 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.260397905 seconds)
  done (took 10.614904412 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.222252937 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.324553204 seconds)
  done (took 6.421185146 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.330214927 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.941854483 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.321159539 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.936029996 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.937732965 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.939932129 seconds)
  done (took 22.693786816 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.942297263 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.946216442 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.943103934 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.945606618 seconds)
  done (took 9.651096745 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.924072373 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.610683143 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.925922522 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.938476359 seconds)
  done (took 21.273123179 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.692009724 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.701838683 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.686362426 seconds)
  done (took 9.955338814 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.475296715 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.910219841 seconds)
  done (took 9.259834734 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.194223547 seconds)
  done (took 4.069563792 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.075021995 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.25348022 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.458363603 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.470227579 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.560846786 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.671445576 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.258678006 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.186477807 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.345609544 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.380558644 seconds)
  done (took 25.536212493 seconds)
done (took 141.332653494 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.318499459 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.174490933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.139769324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.275943476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.160827929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.141299212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.159291456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.259639966 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.785297199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.78363143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.276117502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.16222299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.105365777 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.175002196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.105812831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.173684922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.160020758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.333537889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.972121772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.171986365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.161553965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.915119741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.116598567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.927802997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.163176404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.092539389 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.491335466 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.175401096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.126720423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.501045778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.095238562 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.322255465 seconds)
  done (took 174.800596453 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.710759017 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.941655453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941733018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.942283929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.535596148 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94317115 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.943424222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.94227689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.041987302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.038967819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.966468027 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.60361798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.967089 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943041798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957655852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.955967623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.166774449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.844498561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.974477517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973622516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.974655043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.50908572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.969141215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.552474686 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.174739304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.965862126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.943445379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.963420033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.947399236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.95801978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96434029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.944290162 seconds)
  done (took 211.081683904 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.942857208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.944598862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.951377451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.942934361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.95197705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945542449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.952112688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.943083089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.516845948 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.513858913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.954048075 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.964043448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956035677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943873463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.953942452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.945067922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.947665922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.949841572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946354927 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.949740634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.954177377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.749050544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.954682638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.7577836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.952034438 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.951221044 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.946446564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956444879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.960081994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.958462603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958179203 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.945615993 seconds)
  done (took 223.061713204 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147196318 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.952104134 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.952967505 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.906326919 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.953031032 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.95260211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.947284312 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.14303986 seconds)
  done (took 19.85598066 seconds)
done (took 630.686377081 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.406289783 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.247624242 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.127299207 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.976183578 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.211676474 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.010688158 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.97336451 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.034616404 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.710329732 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.037804447 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.61307319 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.988361366 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.704270551 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.994667691 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.104879589 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.028830026 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.50608352 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.598571417 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.151596279 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.028701809 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.147521246 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.941126124 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.044376987 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.728388961 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.72647338 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.974471004 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.139592028 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.511628956 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.9821236 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.14410853 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.707676561 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.346208341 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.981314864 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.969516506 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.023455866 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.005098869 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.303287459 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.979761994 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.093927062 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.74707797 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.028222891 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.588656686 seconds)
  done (took 106.451521249 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.94378488 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.942462009 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.941356381 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.943538877 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.942443734 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.942448036 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.942371139 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.942752927 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.94302278 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.942187768 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.944505114 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.944813475 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.943319496 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.944263813 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.94194154 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.94254284 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.943761848 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.946011348 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.943451282 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.942985848 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.943043416 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.942371121 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.956396452 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.943074998 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.944887781 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.944582143 seconds)
  done (took 52.43175284 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.956302998 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.097389975 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.176309211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.972557965 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.955383547 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.959184206 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.973108897 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.960608117 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.958685665 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.958364551 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.049294736 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.963095706 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.975049311 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.179368948 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.970432002 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.957817875 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.957479277 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.957372912 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.104244096 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971367484 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.975544186 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.961208943 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.975313074 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.969646599 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.959529965 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.9572442 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.962331105 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.430131325 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.964595836 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.047968361 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.998395349 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.977620504 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.397942189 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.188607025 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.00826026 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.96465051 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.958155812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.051648449 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.963715177 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.959234521 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.975873937 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.962606179 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.181221578 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.462356581 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.970745078 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.959011825 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.442662352 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.059741011 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.99817064 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.969447667 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.191955204 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.972199478 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.959619787 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.959603729 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.994290912 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.969055018 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.959098519 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.327003412 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.968179083 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.975112775 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.963427802 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.959880162 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111730628 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.966348868 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.099454074 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.966098758 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.965483474 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.959281583 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.181943449 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.973376714 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.467647278 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.971057288 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.960957556 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.050807871 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.103730446 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.464820751 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.971047671 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.113905113 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.412585091 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.981678341 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.966584443 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.422933843 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.986194303 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.96758235 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.962173473 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.963018102 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.960929208 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.0052593 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.97653721 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.403735451 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.471770828 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.339004616 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.983842988 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.975195251 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.961053041 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.328188512 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.967458366 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.961157493 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.176479682 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.479022626 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.97254919 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.968327773 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.452793321 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.973380256 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.979130534 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.967905061 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.185245581 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.973203142 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.006896254 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.962799648 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.967539265 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.964082521 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.978577602 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.968393323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.962741587 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.444461112 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.068450255 seconds)
  done (took 242.572607999 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.956393588 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.964987348 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.956440311 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.955498846 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.955907048 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.960102132 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.956100856 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.955562986 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.962720485 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.955634253 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.956186068 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.95946339 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.95588223 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.960945875 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.007163293 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.962554299 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.566653348 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.957890213 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.955514715 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.967821548 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.605254047 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.962738989 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.956228379 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.97510421 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.960057797 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.957381481 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.971747167 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.457032509 seconds)
  done (took 170.568502049 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.966263045 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.183864008 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.98461342 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.007586876 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.974643352 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.963464829 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.987549991 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.987166127 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.971189576 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.963874227 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.963322485 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.025906246 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.978892783 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.117036098 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.997783863 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.997352025 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.071529198 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.974784227 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.963819666 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.963811786 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.994417068 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.961181352 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.026267139 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.093836244 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.983286548 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.082779817 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.972127229 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.967310432 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.96591982 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083008948 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.984609405 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.027930852 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.996716836 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.983871772 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.084847179 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.085092654 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.074470861 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.996536529 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.971542038 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.965597813 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.965825061 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.956457981 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.082515713 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.988174551 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.96729484 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.075629557 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.985131191 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.968009885 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.975471871 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.966113655 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.980217052 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.985439976 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.033764171 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.102442342 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.003850018 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.992935894 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.991576671 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.263194656 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.977775437 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.069276744 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.961494926 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.085745999 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.987240204 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.956490457 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.967566653 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.973377725 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.996840555 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.998933796 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074249021 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.975461726 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.06958405 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.003485689 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.974017766 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.967013576 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.969594579 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.083695517 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.088687279 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.003689877 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.005525581 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.001048665 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.9653695 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.968432302 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.957717632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.987306996 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.973576478 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.085508545 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.086771922 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.977408086 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.971606484 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.97121423 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.971005425 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.994514448 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.092866578 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.005922239 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.070106114 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.037014379 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.045123632 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.985290388 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.981611885 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.971792954 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.03293046 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.984966461 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.981195959 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.311328879 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.042959605 seconds)
  done (took 213.17198295 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.435680267 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.027129506 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.025489369 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.261856455 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.403865456 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.867031435 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.019548665 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.019337018 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.043593893 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.196000139 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.077408768 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.035556559 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.006862851 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.993360998 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.020742624 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.039989336 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.023271503 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.322614502 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.149076465 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.103489276 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.003388545 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.28855284 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.345094455 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.392685001 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.054192983 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.353413896 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.702546592 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.268151273 seconds)
  done (took 64.384874762 seconds)
done (took 851.462277618 seconds)
SAVING RESULT...
DONE!
