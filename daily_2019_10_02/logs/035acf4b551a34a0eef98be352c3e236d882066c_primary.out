cset: moving following pidspec: 977
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.35089444 seconds)
loading group "string"... done (took 0.550329945 seconds)
loading group "linalg"... done (took 7.082676026 seconds)
loading group "parallel"... done (took 0.158242263 seconds)
loading group "find"... done (took 1.107052175 seconds)
loading group "tuple"... done (took 1.752010916 seconds)
loading group "dates"... done (took 1.194421599 seconds)
loading group "micro"... done (took 0.217492468 seconds)
loading group "io"... done (took 0.992376048 seconds)
loading group "scalar"... done (took 37.66150361 seconds)
loading group "sparse"... done (took 11.611450455 seconds)
loading group "broadcast"... done (took 0.946240401 seconds)
loading group "union"... done (took 12.435907627 seconds)
loading group "simd"... done (took 4.53715252 seconds)
loading group "random"... done (took 8.991361254 seconds)
loading group "problem"... done (took 1.880769614 seconds)
loading group "array"... done (took 19.923531261 seconds)
loading group "misc"... done (took 1.642092628 seconds)
loading group "sort"... done (took 3.265641502 seconds)
loading group "collection"... done (took 16.364884912 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486308281 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123288132 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114294263 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118368824 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146964129 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115234121 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123432248 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08407651 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.830157956 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148311592 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119340832 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416594098 seconds)
done (took 5.168633158 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176423885 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086078485 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082915487 seconds)
  done (took 1.335079726 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065613528 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124880164 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066620746 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066869018 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066774583 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066218923 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066231731 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06620699 seconds)
  done (took 1.689673794 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076098993 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069038472 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069099327 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068951323 seconds)
  done (took 1.44115551 seconds)
done (took 5.884547475 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.770893354 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201925866 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184100816 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.40373649 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132260857 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154108347 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64789686 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.306155645 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184454615 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081913227 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105279955 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319816128 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107861677 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628418759 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074552925 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090624172 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137795831 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.409056385 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068777796 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082708262 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089210426 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128839416 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085739426 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074717359 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14571232 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067975091 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131233417 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080737821 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06709299 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208639535 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172987932 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.648276742 seconds)
  done (took 10.185964666 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099864068 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099480948 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069123608 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137226559 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097890547 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069826608 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071617114 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067833669 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087307268 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128856035 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090635946 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102217478 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065923586 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069165202 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085070279 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204112744 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081211763 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081472794 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070814082 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07570625 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116902351 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078342176 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078666827 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078083123 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128795612 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180498556 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099518336 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098348254 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069684373 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083433235 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116130267 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132409773 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067697544 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067036663 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124719692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095451659 seconds)
  done (took 4.672004585 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.294616351 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141591831 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091071483 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132675298 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110680106 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064904139 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107612793 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066495128 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081708651 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201143482 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.302290083 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.584778467 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111993296 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104439199 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068018747 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068806149 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067668934 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354399991 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108312289 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104179236 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081000264 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069916419 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069356364 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35057527 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069707371 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065139853 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067941923 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058175831 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124615467 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068136543 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.937694475 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126245342 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067176379 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10101363 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161879583 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089721426 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.27675505 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068237256 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064630686 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149959127 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07048782 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066791451 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084425991 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103577553 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113951385 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066840261 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067254155 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162592221 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064771367 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079767132 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.981618727 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153438077 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079261474 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066920634 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249154188 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086026967 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070414277 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065630594 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184827818 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138604211 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068299151 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066719353 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068070658 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065368887 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069051706 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.351334687 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066019569 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.73387415 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070884908 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07812314 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069491677 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069732462 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073140636 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072871867 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085499341 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066589202 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075579623 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066753066 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066739019 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066955701 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064274385 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084361074 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358092368 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066492368 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071011622 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064638376 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086100753 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101564918 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06797893 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066785858 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10196679 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171295586 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067387153 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105685685 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067254353 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064679976 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085662821 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069860193 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113786678 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067585811 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089826327 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068324796 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100025641 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070461978 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09957375 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081905719 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068416061 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.401396923 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065558188 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066332778 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068610782 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066275153 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067878675 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066606792 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079748964 seconds)
  done (took 20.991126885 seconds)
done (took 38.30076206 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272364887 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079316024 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076110528 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076093279 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076351379 seconds)
  done (took 1.828611611 seconds)
done (took 3.067337388 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12065166 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099653917 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064656955 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095721282 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06471501 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100344514 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099681941 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081311455 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099462198 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064928055 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096127231 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064177015 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064648854 seconds)
  done (took 2.369788512 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085054068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085705471 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072093286 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085178122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06564185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085129674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082423858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09149332 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082923315 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074394739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06554107 seconds)
  done (took 2.103938778 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084257195 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085525964 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070213873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081425874 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064025303 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081995158 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081268301 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085545949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081219122 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073840483 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064200091 seconds)
  done (took 2.075142196 seconds)
done (took 7.772410892 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079680628 seconds)
  done (took 1.292964284 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.596951239 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.143230968 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082212074 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113600664 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185544588 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121412549 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.285155455 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08764691 seconds)
  done (took 9.014910845 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088589243 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083867785 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071768139 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071920721 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069361521 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07228676 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070178667 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071212755 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06964607 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069808909 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069328943 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070152196 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072125104 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071370774 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069538948 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071612361 seconds)
  done (took 2.450569572 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092715074 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091499388 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074083 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075386949 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072116453 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072742939 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074975936 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073626663 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071212084 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072461483 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075257389 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074004366 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072020169 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065698462 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074464363 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075836757 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07158845 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07465593 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075695742 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075767984 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074851965 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064833146 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071887721 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074459197 seconds)
  done (took 3.118770181 seconds)
done (took 17.102079829 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118462379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072179483 seconds)
  done (took 1.411018721 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085808659 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086847918 seconds)
  done (took 1.40175581 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087725228 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067067175 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09296685 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080001612 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067695492 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066030281 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091230915 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066635889 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06618313 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066488961 seconds)
  done (took 1.98106903 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072047846 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080013221 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071578521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082210287 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07506044 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065421713 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073384435 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068390898 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079124786 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063450975 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072224481 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083359273 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072203094 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085617916 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073175447 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069449522 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072373151 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06826885 seconds)
  done (took 2.564044669 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06868082 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067512684 seconds)
  done (took 1.378245606 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070198617 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064559028 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068311223 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068640744 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06463263 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063102125 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064241993 seconds)
  done (took 1.702884991 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389029123 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111342904 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.296301552 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070952456 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082485353 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250039487 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065845307 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070715477 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070621479 seconds)
  done (took 2.687555751 seconds)
done (took 14.365710026 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081253174 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087699304 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09712357 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364158699 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092143504 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066397165 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113905683 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19629718 seconds)
done (took 2.350690161 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217071503 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618222525 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387228627 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.198149662 seconds)
  done (took 2.440614574 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325527247 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087474298 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059477022 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067038813 seconds)
  done (took 1.791850495 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068504516 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068884943 seconds)
  done (took 1.385512481 seconds)
done (took 7.088056015 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068930472 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06630452 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063889617 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066458693 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082899084 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063499968 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063734722 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063673834 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066499066 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06630677 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069228624 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065768444 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066305559 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066417939 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064179452 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063863394 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065821522 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06359607 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063971839 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068902693 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063809934 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066044735 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064295386 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064088877 seconds)
  done (took 2.870210125 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.0866251 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067996658 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071854985 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072392734 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070790749 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071717091 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071761154 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066719237 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071835133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068352883 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070503165 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070584692 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068363025 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070743586 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0684502 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070791409 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071876646 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066617624 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068368303 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070095821 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071523605 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066848005 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070246797 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071432994 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070038137 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069926778 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068211999 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066861591 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071407068 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070160814 seconds)
  done (took 3.371077332 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073662719 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063985904 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064789195 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070963891 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064367522 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065385637 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064218224 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064524251 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064722587 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06439748 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065643391 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063735549 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064110844 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064908683 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064619974 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067507646 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079174842 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064220858 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063764341 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064901614 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067581781 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063736715 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06423109 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063994874 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.175939512 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063781199 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064252581 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063815997 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064716486 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063530289 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066738002 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066949947 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063469208 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070222466 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067375304 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063359523 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067484586 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0636128 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064106643 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063149889 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063404709 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063361799 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06355464 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07067844 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06371215 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065144294 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063919258 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064482544 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064262151 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066340648 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062870243 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063259955 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065754074 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064645611 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068010298 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063251223 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064889255 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063218501 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064726357 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063285181 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062935073 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063179024 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065993592 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064355034 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078261054 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070043904 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063240357 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065205542 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064679964 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065926524 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065138011 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07681361 seconds)
  done (took 6.097792457 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095460464 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088222349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067001243 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065577182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061999279 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064445585 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06809361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064854119 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06619785 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070097141 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064760044 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065413786 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065694102 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076997341 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064534669 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065643392 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070348419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062566161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064301009 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067607054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064856645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067948224 seconds)
  done (took 2.78274087 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158820546 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07102371 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109641444 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073891651 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068761272 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073885171 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070466372 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070267439 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070764897 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068554406 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068394364 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070142519 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06887096 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068195205 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068297299 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068473501 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070484773 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068243023 seconds)
  done (took 2.651437857 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07960572 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06805588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086714586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067406517 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066574624 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068594496 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071029243 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074722429 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06885058 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06609458 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074987344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068702228 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068616612 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066100438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068348101 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066977664 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068488587 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066095868 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074860823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071005659 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070668851 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074492438 seconds)
  done (took 2.822263283 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081851417 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069449422 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083214113 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068530575 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062315449 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064805302 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070289366 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066400238 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070468722 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067758908 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06642094 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06482081 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069759093 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066077952 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069277875 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066466761 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068441492 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066009321 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067537814 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06225132 seconds)
  done (took 2.63826346 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090101214 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068814884 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068212639 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076864102 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067495932 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067728505 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075767026 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067678447 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067983086 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087272434 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067894778 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067359143 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075411621 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072764406 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0672201 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075334937 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075489798 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075697113 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067622139 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067279965 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08708712 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067606993 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075110087 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067559469 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067643686 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067172697 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067269997 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072395985 seconds)
  done (took 3.288357726 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068926371 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066559852 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063381882 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063371645 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063351668 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064259752 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063782656 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063753536 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065824002 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063913273 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065845751 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066171913 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06610136 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066339838 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066018313 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066383464 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06626686 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063663099 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06356894 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064365543 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066005011 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066181039 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066431093 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063982596 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06411377 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065898193 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063390738 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063783775 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065675104 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063413941 seconds)
  done (took 3.219183256 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078162906 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074246189 seconds)
  done (took 1.42422174 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066105445 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080496224 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063932589 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070097695 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070165555 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066944972 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073587351 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070241131 seconds)
  done (took 1.82762883 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08444798 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077637472 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067405818 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080842021 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077367974 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083129596 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132519424 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067462052 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073189584 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064486886 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079858455 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06613814 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072986992 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066752418 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07218376 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072512125 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064467673 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072586697 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068395694 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064987166 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067849571 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075043566 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068535784 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062074812 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068019724 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088527908 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077213489 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066403441 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069489649 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073511653 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071762588 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06045794 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066006583 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066833733 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064344738 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076106355 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081230248 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069061417 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07511979 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067579163 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077518732 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061363566 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07070121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072787616 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076847982 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066486013 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067231999 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061198788 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064066917 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068665098 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061823088 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066748374 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061015513 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075511623 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069766751 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076609003 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064916269 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068230259 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069474763 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06985124 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073381198 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068281035 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068844912 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066060828 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076146861 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071152212 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075607145 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062068375 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060829289 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065031677 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075981994 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088625302 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072707145 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066758716 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067649233 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063939271 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069758944 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06750393 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071865104 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072692171 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066429672 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072328873 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073685699 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066964031 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068753769 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075170483 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064351812 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069335975 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063973047 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082957752 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065110747 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064394834 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064530113 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076648378 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070007847 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067211513 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06447963 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073686339 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060812703 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067117728 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067670493 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067152537 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077324496 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071573836 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071667502 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075130598 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073036649 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065943811 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068085133 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062500026 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066215042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064324525 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072404363 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059650364 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068283963 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066088526 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065603056 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202033435 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066258453 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067193892 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07516892 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072753379 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065778606 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063307802 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069846879 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066996178 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070115247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074979366 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065948977 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062278127 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062950289 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069984799 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067149059 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070702318 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071781814 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070207869 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061914995 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065187563 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072187162 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075795945 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067435939 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067405646 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073523687 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068452916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066392321 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073576114 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069574395 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066312211 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072845321 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067785347 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062736974 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070236946 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070440322 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065512335 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070082928 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070583148 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069174898 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067415922 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065495913 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074863102 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068241708 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065815785 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066671658 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065528501 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077714337 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068960207 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062164407 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063995831 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07615651 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06442522 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066170167 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065525593 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068939564 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067303477 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065371711 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066516475 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069313017 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077931127 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071731427 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067017295 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07205787 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078208452 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06663208 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069299528 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066248374 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068542906 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067535706 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075220709 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072350664 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071616051 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069102858 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063670576 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072047297 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07400894 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065503585 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064109653 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065477817 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070623124 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072018055 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070844978 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06727252 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06446506 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066843148 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069938482 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069266231 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066086317 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065777911 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073388441 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064991326 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073889115 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067244204 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076649637 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069641358 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061668674 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069518362 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064953987 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072365291 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061644069 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064599471 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066061835 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067783089 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065429738 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069160189 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060575266 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073288056 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073858216 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066863196 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065772838 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065972148 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072469644 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066838949 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069928851 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068461215 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071196751 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075389403 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065196572 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06886446 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.20622268 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06731912 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060607163 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07295878 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065618798 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066018461 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065982121 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064779868 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070543105 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076653464 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073192219 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060453307 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069738606 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065199748 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066084419 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06203528 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071591521 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070074467 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068453746 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073972124 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068032508 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06789862 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071436827 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066230443 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067458279 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068985593 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070332512 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067915933 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06963145 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066648544 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070315058 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066382546 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065014137 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069029317 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066815996 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067245746 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072755569 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066889789 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066360133 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069469894 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068113601 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067737997 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067263425 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066514804 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070347988 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067484357 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067054262 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069775299 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062239967 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074272894 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066889858 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074712663 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068136783 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063830842 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074949855 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069886463 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073123244 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068280787 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067725082 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068554819 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066969986 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070248515 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073761748 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064769496 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07779247 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074636146 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067494202 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069725145 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067737334 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068847616 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066182625 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067703306 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067746686 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066827423 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066877196 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071169502 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069153596 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066733171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068018489 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067200961 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066948251 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067660927 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061439526 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066231784 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065995856 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066596672 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076624437 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067585648 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066584089 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066063997 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067750919 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066195597 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063383416 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074816433 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075889172 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067273007 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073723853 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065860845 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067790127 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076858703 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06111671 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06439839 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064602122 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064514021 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07411582 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067453302 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075623642 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066519653 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066425432 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063575735 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067337867 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065184135 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061027602 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064173126 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069890919 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065187367 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064674147 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06558635 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067802424 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066772678 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075044425 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065029927 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066918593 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065980209 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.197063286 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066854348 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066644669 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070101992 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06806305 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064669147 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064561111 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067021438 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068233186 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068729725 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067710853 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069260346 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076375335 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066972382 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069784861 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07055865 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062603673 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070046248 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067115087 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066632399 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066206246 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070829095 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070714295 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06834604 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076657801 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067281152 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068670845 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067382964 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065345271 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066273808 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066780973 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066977584 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066960709 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068232256 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076262374 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065146464 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070298988 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066938575 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067060718 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07372017 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067920876 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069934435 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074616081 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067880353 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069115914 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075315049 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071266951 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070620624 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068167398 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06816398 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073674231 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066347376 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073120557 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067782628 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06807158 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068965242 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064792478 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066621266 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066325174 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066278995 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073079518 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068087121 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066496248 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066121848 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064758745 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068257613 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070432799 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074091355 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069363457 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070473367 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062002499 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064500133 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067742203 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064971932 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069324085 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068995654 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071994333 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068768626 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067082469 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065586859 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075285694 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072339993 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07000359 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06458979 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070233827 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06743966 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068582135 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067716591 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066869195 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067761953 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070455288 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06852251 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066078542 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073645671 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070260196 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067984091 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068431191 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068110266 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067171445 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062259834 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067393361 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069106134 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071822792 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068950885 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066826394 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077260805 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064805571 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067027372 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070074915 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066501979 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070843562 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061895695 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068092746 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06740782 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067504224 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061290393 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06550897 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063915359 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067966154 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064623404 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060722736 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075537915 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073867984 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068397287 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064917546 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.198381982 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062774237 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062664459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066496434 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068318965 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068977334 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076709918 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066342028 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065748032 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062143189 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067307432 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070363879 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070846637 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06447228 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062617189 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066097043 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069775866 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073642162 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065770951 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067099873 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070846693 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069241135 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064927323 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070155239 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063563843 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070997837 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080630312 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067781517 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068243936 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073919339 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074837925 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067833271 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062415494 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068148715 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070119107 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067944229 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068373048 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067995801 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08228366 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070114996 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066247219 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066081599 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069867294 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066030601 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074719632 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06846461 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067093528 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071169127 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069595013 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076916254 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069992276 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074958783 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070057643 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069708164 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065780159 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067113538 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065110027 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065470361 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067810287 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067906933 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073181371 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07589768 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065980703 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077156979 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076401614 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069244426 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063946549 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065878911 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066568171 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062354149 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067644523 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064990863 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065227695 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064999384 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065844594 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067401234 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072289841 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067704264 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067313639 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066195655 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060738952 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06875099 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06911173 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067564934 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063426635 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066485953 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067152164 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070837578 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069803573 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064323558 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068022409 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068439751 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067453863 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061992597 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072729032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06598068 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068678859 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066324976 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066729099 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067925158 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070335131 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071887418 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067959661 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069484911 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07092713 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069207894 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064146722 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0644185 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072164998 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064869917 seconds)
  done (took 42.82661201 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10386304 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064321658 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062478571 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062127812 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074305907 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062945702 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062305927 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063599113 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063611629 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065687527 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062579779 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062190975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07154819 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078472186 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074818483 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067226325 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062036698 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063529073 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062197786 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063697208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071902552 seconds)
  done (took 2.787080669 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077119472 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071185449 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073558919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076722174 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067383806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071032339 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072935212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071099799 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076519675 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067634202 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076496662 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079717802 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067211064 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067241365 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067251599 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071186319 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076549062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067751459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070808596 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073376658 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071188532 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072993764 seconds)
  done (took 2.9250109 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069420841 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066793781 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067846726 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061765855 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066479226 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062433706 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069911482 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064164833 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069863603 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065258786 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065029974 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065027987 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067656894 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061667236 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066430125 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064216839 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109561852 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069649322 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066314317 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066881024 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061960063 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067960632 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061733909 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062006579 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064970308 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06986971 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06687966 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06407297 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065724829 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064982566 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065883809 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063938729 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067551546 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066623568 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064971234 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064955945 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065578407 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066036068 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061493687 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064213021 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066437683 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062110119 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066355338 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067642803 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06394791 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063848153 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067403504 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06621543 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061690226 seconds)
  done (took 4.59463951 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083531525 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108668379 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068309258 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088666235 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080728094 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076013552 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069444428 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089930212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063397178 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06468249 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08205957 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080057471 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066254983 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071027878 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072908397 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066422398 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067154541 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064791193 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070319238 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065506536 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070052208 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072232864 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080711346 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079266057 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069890315 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065413243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065336201 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070183162 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078926305 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070680436 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070542328 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071556963 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08117258 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068046558 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065497759 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0683073 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082570422 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065993785 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068507706 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06392354 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067867867 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070066363 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072056864 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082710477 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066067437 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071564949 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065698604 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063132644 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078597754 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068078157 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073634091 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080827862 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069588298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066152604 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070545769 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080748017 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066076183 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064058825 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068857361 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078387404 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06360263 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069276716 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079603821 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067430032 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073197383 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080156078 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071384928 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070086676 seconds)
  done (took 6.405401931 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078888317 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073520837 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081819755 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08090714 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072836559 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073051339 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072744797 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073079172 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072500022 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07728774 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072959961 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093963837 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06810975 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075711877 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07274169 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073094105 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072753602 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073010511 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073312804 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07250748 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073149111 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080542926 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072919693 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08054186 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098698403 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067868378 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072539255 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072668448 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080901114 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072633758 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079967496 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072624866 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072781258 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080748694 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079895006 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072526348 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06534772 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072312552 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073127746 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072299367 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067931001 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0808439 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072429966 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067460606 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072415148 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072196953 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080394038 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079412145 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07493624 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077062468 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072765798 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081068608 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072844171 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072718675 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080577508 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105085118 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080411066 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080608342 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072842222 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080629889 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080782136 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086908849 seconds)
  done (took 6.10037984 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08712725 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076941159 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077206818 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061846054 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064381579 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070087546 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06476585 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064427967 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07501608 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074755893 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077809329 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070763309 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073566162 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077685667 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070323411 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07340219 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070332486 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069963929 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075008788 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07009984 seconds)
  done (took 2.815652181 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07703968 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084639478 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067817026 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072344838 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06906676 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072555191 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068653667 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069007366 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067191427 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068833317 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07637618 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076251097 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066964639 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072153601 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075968071 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072159333 seconds)
  done (took 2.519348359 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078349885 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073513596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08028112 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066525189 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064817872 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062771585 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066278385 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061807297 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062863993 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078434993 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066249027 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06879577 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066248399 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064988435 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063160768 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069117436 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062593515 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064344968 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066076437 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078557214 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07691658 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065092213 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066799678 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066237938 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066724526 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070978516 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065705407 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06371008 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063283696 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066116547 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066722806 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069385539 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063345569 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064060842 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064985022 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063946241 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065489777 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066056601 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06841349 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066008054 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063814149 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066174226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066131644 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066769617 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062216693 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066262246 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062627665 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067982578 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064383288 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066454504 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065974172 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068107813 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066777853 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073093147 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069335649 seconds)
  done (took 5.054951825 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082285776 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070430787 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062491936 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064291149 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069642244 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067704392 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069425778 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067936546 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068325248 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064061078 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068162912 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068566568 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067999555 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069862408 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068016223 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069685073 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062481017 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067629512 seconds)
  done (took 2.604785914 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07356779 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067329391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072897844 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0663835 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066333807 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068465002 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062471991 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0647804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06483404 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065902358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065873974 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068452755 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064747728 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068552919 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066096309 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066043046 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068355309 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065112925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066244314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062407531 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068297814 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064553147 seconds)
  done (took 2.835482675 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095528615 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083162073 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138424917 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07859413 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083621391 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071801002 seconds)
  done (took 1.92042822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093078432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081070448 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068423117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090106867 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0744386 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06775888 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067782619 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067979222 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077021469 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076370675 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067790291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07647763 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076645583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076186427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073815193 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073868302 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067741233 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067617521 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066414072 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084523669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067844498 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076183671 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067691724 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0673749 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067706492 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075754052 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07651374 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076252302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068074378 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076464484 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073363766 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067841216 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076625889 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076962012 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069414904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077171328 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068404115 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0851508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073871091 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076328879 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069250378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074304864 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076800741 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07317326 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076558697 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068447407 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073134087 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06826454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068449707 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087134285 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074114161 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075834339 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073944068 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077426191 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077161362 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087197156 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076940925 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076259434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074268727 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07944324 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076333492 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074061214 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075872213 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077376829 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074546467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076487589 seconds)
  done (took 6.295897854 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085232291 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086203968 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069376003 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077071874 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076567187 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06825518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068391626 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068575585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06787347 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067749525 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108979696 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069092593 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076713707 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076518446 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068693729 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068678859 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06826354 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076298653 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068027856 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087299915 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068435138 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076600404 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076752077 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076465363 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077028425 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074038564 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068508401 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068175643 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068150458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068235815 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073578254 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068460598 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076219368 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067884021 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076556799 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068349397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068141062 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073068756 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067927929 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074358945 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076216529 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084714959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068479248 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068084762 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077063239 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068085751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067999875 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067342764 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06786699 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067561514 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077318463 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076834925 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07672339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075873089 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068444005 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068251893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068214893 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06776412 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068330931 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073763693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076049031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067817606 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087560864 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067861623 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068034819 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076493459 seconds)
  done (took 6.209487987 seconds)
done (took 130.132390845 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188037313 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165909097 seconds)
  done (took 1.717659362 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071531483 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097608569 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077048395 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128400765 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067469988 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100345823 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09991067 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078576336 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066918466 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066431008 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066399682 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069069596 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132456327 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066861156 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06650635 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06918939 seconds)
  done (took 2.703178613 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100228504 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159342211 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100248899 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065542451 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097052461 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073398661 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065553584 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075642158 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072082185 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065421918 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073404112 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071292912 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065228098 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070909217 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071484048 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073316319 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064880225 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07355846 seconds)
  done (took 2.820656313 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105390836 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091467218 seconds)
  done (took 1.573117515 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158147781 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10558476 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150794682 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348526968 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169203214 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231083791 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12849304 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129915664 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118287421 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124404425 seconds)
  done (took 3.038550107 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102025958 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153113415 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256887827 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116278815 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072852094 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095755378 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117528352 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078673493 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081091352 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08132588 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080983416 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076666229 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099265488 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074082306 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073747084 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076726586 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102806732 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072602952 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07476524 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076973657 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099347756 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065753863 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074219635 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072286603 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077777035 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078069005 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065741253 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065792959 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077195233 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074764371 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077641105 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09477554 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077975854 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108777365 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070439437 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109298298 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077264643 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074418 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074921752 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074840127 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079171704 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079192383 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072572025 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076480788 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065364484 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077447921 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065826215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066030116 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078314678 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067045109 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079047346 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077371245 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10829418 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067374485 seconds)
  done (took 6.023996999 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105031 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104227659 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072257825 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112526521 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100541953 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071965839 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101760044 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093771598 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103791541 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070237802 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068881876 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070992939 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083114467 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083611744 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11262085 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105308165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074424344 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070941567 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104949744 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103808179 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069166292 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095750533 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090568938 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102595278 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067734641 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07078007 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068344119 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070887871 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078154818 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079039398 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0702213 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081454899 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085449338 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07894708 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067567467 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068632107 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068842668 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080100914 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080087229 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07979608 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078663198 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06958252 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068375636 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069895315 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070529557 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068334129 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079663691 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081528372 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080127406 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069986224 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071012373 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06868574 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070355731 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081437637 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078940163 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08175532 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080957451 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069248463 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068960322 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07183227 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081584977 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079716124 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08001161 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069936315 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07976583 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06892233 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080699588 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085349779 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068522535 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069845042 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068983658 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070017963 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069732029 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078398465 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078871855 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070076227 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069678636 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068383985 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080482356 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079012174 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069023217 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078313018 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067603312 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068867482 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070186895 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069954714 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078584745 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080507025 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070437704 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068628135 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0695288 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069267281 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067530113 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077622937 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081232071 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07984258 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079823525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069611248 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078742923 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078932602 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069500077 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079400973 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068031776 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200425439 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070823578 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080060739 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080112727 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081574454 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070424746 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068754745 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079728308 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082211903 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069566193 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080283387 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082215624 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080774395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068903182 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082837927 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069414223 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080882845 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070360965 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081137042 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070272011 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081114794 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070015986 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068641443 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069452894 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081367952 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070784169 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069625675 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070836271 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07014994 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081108638 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084202598 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071758827 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082928969 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080679238 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070742584 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08026082 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070142031 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080359979 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07002385 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070989899 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067926119 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082437186 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069718605 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069163662 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069772526 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081479989 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06869337 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081248735 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079933225 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068971003 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081860329 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081651871 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079280027 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080930544 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071245677 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069659687 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06865848 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070243418 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07901006 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08115172 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070889564 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069387678 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079543694 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080347033 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068207259 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079506809 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079452058 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079545075 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069066363 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069828589 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081706394 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081560191 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079298418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078846939 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079160948 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068796715 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078710804 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079137532 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06849304 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085898914 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068469651 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083301886 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079545912 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07765223 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079578399 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081530905 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08114016 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081016741 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083886354 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068351455 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068397996 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080601274 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068358393 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070079429 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079493537 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070986434 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070444333 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083888743 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069017532 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08043824 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068117515 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078388241 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067198164 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069582678 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082797796 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.201603214 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071747044 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081336674 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070167057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079587752 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082444431 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079266354 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069441564 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071291787 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081561716 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080370077 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069714988 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068773048 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071804211 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079799399 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078786206 seconds)
  done (took 18.846096658 seconds)
done (took 38.117139042 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210675711 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151280442 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180965271 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120931528 seconds)
  done (took 2.139876358 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.126684026 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108223588 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095815576 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065811348 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102739937 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065467078 seconds)
  done (took 1.979292669 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.323210767 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212800804 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183773251 seconds)
  done (took 2.13555465 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201014325 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189072212 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395760003 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255267229 seconds)
  done (took 2.564085241 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145315155 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090855475 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067181158 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083895578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136371784 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163678719 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102145812 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126999309 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078943533 seconds)
  done (took 2.466703069 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148517225 seconds)
done (took 12.847293866 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102068058 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.249593257 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.181654607 seconds)
    (4/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088299407 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.18230451 seconds)
    (6/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067292426 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162243152 seconds)
    (8/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077906587 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.083239385 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105577483 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071285072 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065768987 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077733878 seconds)
    (14/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074830539 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157368159 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.236627899 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073938147 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.174571415 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109693076 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171112393 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119619366 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074101487 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.171160136 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092669375 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090547929 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.206200665 seconds)
    (27/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.159380122 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.185970056 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166171346 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074140538 seconds)
    (31/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110830713 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072515665 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095083301 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072311501 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.111303149 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186250174 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177045706 seconds)
    (38/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.15519153 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08228284 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077211265 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072157875 seconds)
    (42/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075446834 seconds)
    (43/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159914531 seconds)
    (44/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.148563028 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173470033 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066815025 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089421572 seconds)
    (48/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069660355 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091137932 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075727095 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089837784 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051431839 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168709952 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078613912 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073081202 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107690491 seconds)
    (57/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075647836 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139684649 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072650281 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183471092 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07570211 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082262149 seconds)
    (63/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072350531 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054024573 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.173736762 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101801543 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174942659 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194666411 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090481211 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092724753 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067817018 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077116732 seconds)
    (73/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.157344802 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077904425 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065261504 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143740704 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051426565 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052686487 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051004423 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.193279276 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05214482 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080112713 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109263864 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.065982983 seconds)
    (85/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072306694 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.349565089 seconds)
    (87/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.196046199 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.371371604 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092135848 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127066553 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150122092 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074028304 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051316705 seconds)
    (94/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052747659 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07358328 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052995349 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080366491 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066322121 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07502798 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092135809 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053092297 seconds)
    (102/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111516199 seconds)
    (103/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109779555 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076546564 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072909065 seconds)
    (106/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.152821817 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147167961 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074808218 seconds)
    (109/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06807115 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088316741 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072938831 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051550906 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136279252 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08936183 seconds)
    (115/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065341593 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089411172 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063009119 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088302582 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169517945 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052235643 seconds)
    (121/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.144744624 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052352437 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.134177011 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074491171 seconds)
    (125/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052495449 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075310439 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0718035 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110680144 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107503766 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065144565 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053587416 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070827775 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051301333 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071754405 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090454278 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.195148694 seconds)
    (137/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052952477 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067181703 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073009315 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119568876 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065294774 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072374209 seconds)
    (143/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072523206 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.186083662 seconds)
    (145/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052055995 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064665991 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072046863 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065413499 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065108847 seconds)
    (150/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052673027 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073667847 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072726285 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174239711 seconds)
    (154/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086635502 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183877778 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05168698 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075073176 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 0.127463601 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.176132714 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05185003 seconds)
    (161/309) benchmarking ("sort", Int8, false)...
    done (took 0.140518236 seconds)
    (162/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158264429 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071376234 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072851983 seconds)
    (165/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099133479 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066383468 seconds)
    (167/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070185792 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092959165 seconds)
    (169/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099580978 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061774073 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052976313 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052983141 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072214994 seconds)
    (174/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099487233 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066158944 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061126292 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090136254 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086930256 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133346191 seconds)
    (180/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071636843 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150806068 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073633786 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06537371 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068999384 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071471763 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110605434 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067380688 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08972702 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065493907 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051332837 seconds)
    (191/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098057656 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134522589 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068616025 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.250132732 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070297727 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065430651 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07171087 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066905854 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054429273 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090011291 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052389611 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061759258 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072981522 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067362703 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05207463 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053289049 seconds)
    (207/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089292398 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099477269 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074546432 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073222205 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072403305 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140092952 seconds)
    (213/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091501925 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077605894 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072212958 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052799485 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068170813 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071987555 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176771284 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087430306 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139289045 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072044427 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066128303 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067606091 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116616434 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053399913 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090184854 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065000272 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054511705 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065115864 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052227718 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053312441 seconds)
    (233/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065799303 seconds)
    (234/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052118504 seconds)
    (235/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067792902 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108855011 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133037877 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052139809 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073879031 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065766144 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0662208 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128098804 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060889056 seconds)
    (244/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051679326 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076970446 seconds)
    (246/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099410511 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151701483 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094484939 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13839568 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06575263 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082058138 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108680325 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073442531 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065546275 seconds)
    (255/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080102029 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067290276 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072729486 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066667632 seconds)
    (259/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078299929 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065716508 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073481901 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053065528 seconds)
    (263/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185983852 seconds)
    (264/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053334273 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175551112 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085784225 seconds)
    (267/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052446391 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078930762 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053370307 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051523543 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062330321 seconds)
    (272/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062015776 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06666573 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066270588 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068473974 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052891188 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09031379 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054217462 seconds)
    (279/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051700159 seconds)
    (280/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063486334 seconds)
    (281/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05429227 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086576304 seconds)
    (283/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06804268 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073018855 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064699561 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068534119 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05254491 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064325226 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066889781 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06675267 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092717631 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051918689 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072807251 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065709096 seconds)
    (295/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061182054 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066028327 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089814335 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070951719 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052189033 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051552491 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 0.125979651 seconds)
    (302/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051866856 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165786056 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07134461 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065928722 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052239455 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052195325 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051663851 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065409882 seconds)
  done (took 30.567526779 seconds)
done (took 31.99592912 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087838135 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09353421 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075079079 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09323241 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081343212 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076717032 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07307796 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078634411 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080477887 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082005534 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078874525 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055171167 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074200073 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074345651 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074760519 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091693765 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078392432 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072666241 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073130144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065037564 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072914393 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065786967 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067434401 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055197565 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078626399 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072106789 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072487949 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074080775 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065665213 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065917048 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069556244 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073287004 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06623646 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078045848 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072921089 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072809018 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074834859 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076297597 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067459267 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066546247 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073958001 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066037274 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072781281 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07330375 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072324552 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071110025 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073187836 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078418527 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091456139 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067872517 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074459233 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075951808 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076843501 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072696925 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069429779 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073400668 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070739821 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09167614 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073953623 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068274883 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074369441 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073818046 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071039652 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073011197 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073192378 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075747244 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075648984 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071096389 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074775483 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0708718 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065326141 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073168378 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068829406 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066106415 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075672858 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076288587 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064456316 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071442649 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072193441 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071032262 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064994737 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067610899 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0671746 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07177195 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067282793 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054803003 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069158879 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071267899 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064608223 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073495997 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071596578 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072312119 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067244075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075218102 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065069557 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070469321 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065502696 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065955787 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067405317 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069397683 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065224866 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067528618 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074537807 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067077742 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071373694 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079086419 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065516346 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071537387 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064904375 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065031453 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079232232 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074586143 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06513651 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067757911 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064459952 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072378465 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064785153 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065574017 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065640007 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065122158 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071370355 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065214546 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06712536 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071689706 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076981647 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064625449 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067712997 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066490104 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064704728 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070033076 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064619223 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200845279 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067680351 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062135848 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06765251 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065939177 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073417151 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068352796 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073225745 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067120727 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074299536 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070356954 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071815892 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070605092 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065416373 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058869694 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069247632 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067553126 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067211608 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066154898 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068141759 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06602513 seconds)
done (took 12.489675689 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06965733 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144029592 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100130454 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09550469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086358717 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067091023 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076517648 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103181619 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068131573 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103381453 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087604777 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085185394 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113957803 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065351794 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06615018 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070127715 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067867998 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082589025 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101805589 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086753113 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116639651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065633269 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094852936 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09094803 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087456534 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102079708 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067279159 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069891085 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069532974 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091459719 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086634554 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069818833 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066849301 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100934044 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092700025 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08409905 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067230006 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082629187 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066830206 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066332961 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06771551 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098886388 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080226808 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080718478 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070744022 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069566195 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067410481 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084088021 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089367199 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078949404 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086626218 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103711341 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069021389 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06612998 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064762882 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08589935 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065435088 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069039926 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066771276 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06829316 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066554981 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069134564 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081537714 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082240989 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069926384 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080811377 seconds)
  done (took 6.843447421 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086095125 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090395611 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084085599 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084089076 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066286825 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066612211 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066725906 seconds)
  done (took 2.058473417 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069541161 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088772703 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089514809 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089171326 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085383976 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087664135 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075696596 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067039494 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081064858 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067901899 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088013128 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102121311 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067503753 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073376825 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091138933 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066588734 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090861718 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066632377 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070153077 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090285545 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068769373 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082413371 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069940011 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067355512 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080754686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067299756 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11384787 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07135711 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068408771 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069749724 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064868179 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107626649 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08036012 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075812263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066625207 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081057832 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08094717 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065334565 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083345649 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071365344 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080365966 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067060363 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067699378 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064575336 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071279494 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077771316 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067693079 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067075408 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06907997 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086729189 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06783869 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080238675 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070035566 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06926007 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06834156 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070806581 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076637078 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067550026 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08622167 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067645319 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083087267 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083009244 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080142003 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083072232 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069028209 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08020171 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08051709 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069079652 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068421096 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070262566 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082851457 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065250383 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068334274 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077143585 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068263325 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08928185 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089135676 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068564339 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075897566 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067590527 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066778963 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067023914 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089274447 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069840816 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067101808 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071244021 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069798736 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065304011 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066116404 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070660194 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064914819 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068439969 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069602089 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06986908 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069248294 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0831751 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068748753 seconds)
  done (took 8.808634809 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071638823 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06824282 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070364429 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068347125 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068603878 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069367358 seconds)
  done (took 1.955155572 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096821427 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070555152 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080751581 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073248404 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104929388 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08724365 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087732628 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07986781 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084038415 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079478525 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087205815 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089025546 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093263292 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07343805 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087328603 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072228023 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087313921 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076304327 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078622264 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073538904 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08751734 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073076882 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073808372 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08256367 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076090503 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072718122 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067374094 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079164746 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078795987 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079379528 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0729906 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075922994 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071348095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079216116 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087253526 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071009428 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072291578 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077405293 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072909093 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076207931 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088288124 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073444983 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07495206 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078082476 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079297912 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071298324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07771841 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076455002 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086602191 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077550521 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077729296 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071686828 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075998678 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077529365 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070800503 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078948549 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077438315 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087095378 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073034281 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070970159 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069524172 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075748248 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078807213 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07551071 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079282796 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.0774523 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071185194 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07264969 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073313287 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072521247 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077618159 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069386759 seconds)
  done (took 7.142188476 seconds)
done (took 28.311314117 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547590376 seconds)
  done (took 2.050005438 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606952047 seconds)
  done (took 2.139691502 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.096224017 seconds)
  done (took 8.619939513 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.409975194 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.489318884 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.700186708 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132552974 seconds)
  done (took 3.305581358 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.675569686 seconds)
  done (took 2.213467451 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216361024 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.199086723 seconds)
  done (took 1.963273715 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.383381879 seconds)
  done (took 1.912085023 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.111216715 seconds)
  done (took 2.642229786 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.270717201 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165493407 seconds)
  done (took 1.969361551 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.466192415 seconds)
  done (took 1.999175521 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.825665689 seconds)
  done (took 6.35875363 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210502113 seconds)
  done (took 1.793803871 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246808335 seconds)
  done (took 1.776823344 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.696869754 seconds)
  done (took 3.231408117 seconds)
done (took 43.514118315 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082615451 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082382544 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081391444 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078224879 seconds)
  done (took 1.839670785 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079963897 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074288098 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077088982 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072893544 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077046765 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072924374 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074458008 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077181806 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07258946 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07285651 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072738129 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072659957 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075118469 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074752393 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071093443 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075211419 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076186604 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07281416 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075744759 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072727242 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071296577 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075628564 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075401039 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072177165 seconds)
  done (took 3.317865741 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08053916 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07359341 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075039931 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072493654 seconds)
  done (took 1.842638247 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080675564 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092272415 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089899243 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077987069 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092777635 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086691767 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069723401 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069744018 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073510536 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077409564 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068565489 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096853029 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088181754 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076817682 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079121446 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066072207 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068238142 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087320696 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077824721 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077652605 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070326662 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077366443 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068067725 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089207381 seconds)
  done (took 3.437526011 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079263076 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104302522 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077990602 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088460136 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090563717 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065362508 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074815336 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089812579 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123071588 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065823435 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070632148 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065865675 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072425435 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065696365 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076530859 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105469813 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108100718 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068589959 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095940089 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06576734 seconds)
  done (took 3.201047111 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075947123 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070422664 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066311339 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069184204 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077790062 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073336624 seconds)
  done (took 1.981879894 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070558299 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06790097 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067439153 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066690233 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072100359 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06717679 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066093024 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067597438 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067680029 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067437364 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066831342 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065810986 seconds)
  done (took 2.356103046 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.425782114 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06895979 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0692632 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066132658 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071111964 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066448851 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080133753 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068452624 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090701617 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066760283 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066795702 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068813178 seconds)
  done (took 2.75487304 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211917216 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077422104 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239902758 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137885614 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112259328 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115993849 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104581054 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113230714 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144847265 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102455525 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169962433 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167279019 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107545586 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138165545 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08957761 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098129043 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15641932 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163879557 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104008252 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166771551 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14530523 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125367325 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148499261 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102526204 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106920848 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122532199 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071302074 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080372026 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17259439 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13262163 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147950841 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111637022 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094236243 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177999573 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172969178 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144130951 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135572914 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084214371 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102664925 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133461906 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199645397 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088462757 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164091314 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106762592 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079314136 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131300529 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117023459 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118038777 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103557071 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088036562 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142496931 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177879164 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135468087 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084935525 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109755375 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111899824 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112984777 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10107202 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177547862 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157528741 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124460462 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069827917 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097718235 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149486642 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12671797 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103913362 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120403435 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089640329 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127135127 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147457035 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113192057 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135299572 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122967184 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085040685 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114099628 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133366608 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121181122 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16037134 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11851467 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070292102 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118689845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098181695 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078835663 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.138744173 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072899681 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16717109 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094875897 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.101995771 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109515855 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105395599 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105411065 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15371985 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137633496 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.354493069 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067772086 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106563302 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123257384 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151406661 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089591389 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111696321 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119358346 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079303567 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14227948 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075717982 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124996835 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076803766 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128010223 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134623045 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07691224 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123436524 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102686214 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101734703 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135908623 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163226962 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089898998 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083261954 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170035073 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123655682 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106295117 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145819004 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15923839 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101233553 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10377792 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151607883 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182404137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089978897 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165176517 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107912351 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083759646 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08806975 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124832906 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113364793 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122856161 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08287682 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119265928 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170276915 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075224812 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095434087 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135267704 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079179946 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081181214 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104860501 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101187304 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094542137 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100526719 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104816071 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138429351 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12429353 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105584914 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271354032 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098833402 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171511542 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08923013 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101697559 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10478891 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070112713 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139150378 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159519658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080115074 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167185871 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124833688 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105716966 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120940299 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08343069 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141290204 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079001871 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070542382 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145121511 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112101601 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110590784 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151229975 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105119526 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12820365 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120133787 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135561792 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13366864 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129658715 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105985354 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088953243 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112543445 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127011351 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07386172 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092782333 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081019831 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104576279 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096730703 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083694627 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143923774 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126824756 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100881118 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11260294 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097529781 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148209447 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076755359 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130516731 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120740475 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095098293 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154068014 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152634577 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132450257 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099517896 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145918381 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070243812 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073886962 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.236504523 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125229229 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083695328 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083978073 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118677233 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148575536 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13123687 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140852828 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113240791 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121758707 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15622915 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070542644 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115941773 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150288621 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121782245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105765324 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090983758 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099231967 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143193296 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108985358 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183920187 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114858331 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127544619 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154608507 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100430446 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080423381 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103917553 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136656291 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11024607 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145822216 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100115175 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08843484 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111095613 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07450802 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101234125 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128286417 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121395423 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136578916 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115651001 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134996787 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077261422 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118327777 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121345105 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124156789 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064327608 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121090666 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162418565 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094025728 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119355691 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153758306 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079373747 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124873564 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321142001 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148057374 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084765497 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112041166 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120072016 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12931138 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122199025 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141231519 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110192136 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135851572 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110107629 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086181466 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088019256 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097782975 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106728032 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095271972 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109529524 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115898994 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09487273 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131977741 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10353611 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109643931 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118172142 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097292469 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089521955 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096867307 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176140076 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120314536 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173673322 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099185838 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147202937 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165979396 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075079206 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079692189 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078950953 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141024008 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084348829 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132197822 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098247519 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106031113 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125330575 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143487478 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095804631 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068948701 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109108188 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135854431 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113488047 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099270987 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105445612 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164666688 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100337939 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079611515 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113756589 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104836515 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103103948 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318427228 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062071649 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098075368 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076331401 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080864364 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129440971 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15551745 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081387453 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10342919 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121107848 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112193898 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130266112 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102796232 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100626685 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114857409 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151770792 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131458817 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090056314 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113475464 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130965587 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158394142 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105685535 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096114999 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172740273 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153106321 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178787365 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089090536 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115625249 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115359993 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109186393 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140859135 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083502878 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166092788 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0825008 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137363361 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105225259 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090969554 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131379288 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099472215 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088633968 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149324141 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118943719 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082914066 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078285856 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118574154 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121671474 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107505208 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075711117 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140520879 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07278473 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132490505 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170232556 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08141887 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249513533 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097947773 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081155652 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108837573 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103927723 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090239711 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099593168 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178573044 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089087466 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152201892 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142790989 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114749512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138879669 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100662548 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636078054 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078256343 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153019945 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117996893 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174378034 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097780037 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117986747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110098473 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124551826 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145545562 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106141701 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178179794 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133376147 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117024947 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079711172 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103582747 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103872613 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089691684 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105994092 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114569286 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117224377 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094270496 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117000682 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124776436 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082423651 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095765417 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157223209 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117846361 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145447884 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141615203 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085104238 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118544127 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139881716 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079648911 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1227091 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153118681 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106878321 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241997203 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082133982 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103219133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171764951 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073694174 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166461442 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121495597 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11167759 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115280966 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116159822 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133780096 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109166454 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122866288 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094524291 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112182258 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11471481 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081999052 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078652461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104595102 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11452968 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096983812 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099881595 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098164506 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152023518 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071612739 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09647031 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103565422 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146636803 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176514445 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088823799 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083102634 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120185971 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113291577 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11470291 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12161875 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079604298 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082499774 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082275632 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077326768 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10916508 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112776346 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104978168 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112489752 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166119418 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083010278 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225314641 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095893136 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105583919 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.0700667 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079436098 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096324248 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097956161 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10914358 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101373031 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172081813 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095047371 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089850432 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093077168 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073629863 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226976285 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129499023 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111835696 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120624624 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098399023 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062611958 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11131823 seconds)
  done (took 59.108745771 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111836716 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082596021 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096989313 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150775792 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12338253 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213042056 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157612592 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200023529 seconds)
  done (took 2.820070679 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071422709 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094340553 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099687826 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083608611 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066985726 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069297239 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226287959 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080763207 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066797377 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088800664 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080472072 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069288562 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424708909 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067685031 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068155922 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063175955 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067919399 seconds)
  done (took 3.466430735 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371352809 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599885438 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373170194 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073142843 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.871478014 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092817426 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.060987517 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130407747 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07372401 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537499089 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703306061 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123988156 seconds)
  done (took 18.698473288 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078643782 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069698423 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.0839867 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083615777 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072512351 seconds)
  done (took 2.070785796 seconds)
done (took 108.470427142 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083216009 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395216903 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05404195 seconds)
  done (took 2.162956082 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08627375 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084287437 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084818512 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08236381 seconds)
  done (took 2.02962397 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077340642 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076353415 seconds)
  done (took 1.838325473 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22455853 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139236597 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086908096 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084652313 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078709133 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078182897 seconds)
  done (took 1.935466708 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075024324 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075317778 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072191594 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076687865 seconds)
  done (took 1.985631306 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078465434 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052197978 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0548693 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056072557 seconds)
  done (took 1.928439239 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08837808 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078922557 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078348658 seconds)
  done (took 1.933647469 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104285632 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084808201 seconds)
  done (took 1.876808436 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084636378 seconds)
  done (took 1.773756444 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101021535 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114061551 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128583058 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110201575 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137268756 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109559843 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086636583 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087255912 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077639068 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087943845 seconds)
  done (took 2.727546016 seconds)
done (took 22.410566885 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081374538 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362820267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361315185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08890483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669161376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35572608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984591705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092621319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113820531 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068052514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084005699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649958226 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974836237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319743489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963486861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323802946 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648194782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068517197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067663912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068480338 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969979275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067894587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068047419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068481163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647552165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371779665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067958721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324642332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068094852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070056055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355195481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06864037 seconds)
  done (took 16.167768436 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073492087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118334133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073816347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084636702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070718464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069624571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071592725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069547844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120194115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068191322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084757399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068351585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072281628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068685412 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087161761 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068739369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068956518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068690037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068444704 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068672557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086435813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067834846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068280563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068430525 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067912509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079580851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068280341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068269432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068781174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070474835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070961133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068825363 seconds)
  done (took 4.105885623 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117574609 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125389034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07403839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102456677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112798015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070638932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143617891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093378222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128658517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068512448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085076665 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068116054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101288184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068747349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08813351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068885328 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069995581 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068951077 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068411083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068654161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087333668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068771254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06858634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068880822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06873609 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081783694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068555001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068807515 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068634914 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070311982 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07202642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069211825 seconds)
  done (took 4.360015135 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075190803 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074987315 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083622685 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083303497 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069964638 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072489938 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073072481 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069801282 seconds)
  done (took 2.311037 seconds)
done (took 28.641211669 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081548035 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068876638 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073085943 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081268715 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073295172 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078697742 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06774074 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074866495 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072356503 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073493981 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075158222 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067799982 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071368071 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067458147 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073668104 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067861489 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079994093 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071984917 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079518151 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079534484 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069768065 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073122527 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074253404 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079626444 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079378424 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079332782 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077568729 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072989995 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069202844 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070642446 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077023235 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084461996 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069152963 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079531245 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068237272 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068223042 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071564439 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067898264 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080001347 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07667296 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070028684 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076404301 seconds)
  done (took 4.79406966 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090108796 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091607871 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084994626 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061527599 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067379076 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065123732 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088339917 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059844769 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060040724 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088469713 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056171792 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.0600354 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062975956 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054393443 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059929813 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057643936 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061914736 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056369902 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059484435 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059615356 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058458387 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054425584 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060492119 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063000343 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059379608 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06237663 seconds)
  done (took 3.420445963 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078240152 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084662538 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08869327 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126979437 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105009978 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077418874 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078217071 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091975235 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085498733 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067390316 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071572983 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093460476 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088361799 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074045788 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068327893 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085131416 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082538523 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069627431 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073716784 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090890906 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083927841 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085078986 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092406097 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08100167 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066874605 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069824383 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071535337 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081057246 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072331377 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076897934 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072203473 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07115767 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069262616 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078969241 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071276589 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06892083 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090592132 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076766573 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077669798 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067951713 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070975679 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06813994 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089345253 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122471665 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067041317 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074357788 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075444623 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07675193 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067845427 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085895497 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07885326 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067255175 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071074909 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066686726 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067654572 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080878049 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069812453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069629841 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076973964 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070696993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085493451 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072019999 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082954814 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067223197 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07502845 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067121935 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068524017 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06649208 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092403992 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069429065 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108390958 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068817573 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068564138 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076446899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07505092 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073529343 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067892893 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082733919 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077895529 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071042946 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076165954 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07110449 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071058607 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087840912 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07008879 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069335838 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068457773 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073749327 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070629034 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069213512 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080613226 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067884096 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070694056 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084221146 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068118541 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069181894 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073693099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072804787 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067025957 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079189445 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07309954 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068601486 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077037886 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067753548 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070686557 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078406994 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074293281 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06689817 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07314732 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074013155 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069052343 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069819575 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07110579 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069632449 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076888564 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074619152 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072647646 seconds)
  done (took 10.649444895 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.174487378 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154284867 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070719041 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145032488 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076918778 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079324852 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148201476 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095259736 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068176793 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068904807 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069460758 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112512816 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107072288 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116033345 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079394904 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068189814 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083799347 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114390475 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150787254 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143484745 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084532607 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077057539 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070045492 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069157274 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070805679 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078566217 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08559209 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077125451 seconds)
  done (took 4.484672666 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084101114 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097987921 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074917931 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090133962 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091624403 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068374816 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070761871 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069961268 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08073441 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080103112 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067857253 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074171636 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075279771 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072020778 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069328038 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075026381 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075470901 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069952758 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071484348 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073703454 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078165252 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082008383 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.0720743 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067667377 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074784219 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067746331 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065393643 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085626839 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068530914 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090733617 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066172167 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075675162 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081659972 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069169141 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067931602 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06805943 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06780631 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067831668 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069987226 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067042278 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066896622 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058332171 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067136965 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080243138 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074312044 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057022112 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073340646 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073653948 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073461021 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065878974 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071191744 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070697117 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07261004 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075250403 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072846959 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073391925 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069105342 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066168353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076201776 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068588178 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06517832 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066757881 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072544498 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067087491 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076103916 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072860613 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066845775 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06772053 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069975175 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074010042 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068347443 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071188144 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065833947 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070405958 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072866742 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070100995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068985891 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.0667788 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067971281 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068648181 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056375438 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067923184 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054220052 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07147214 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066341626 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066651832 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067831335 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07274222 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080963417 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069329042 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073748399 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068983131 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066850751 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07074326 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060776057 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071451967 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082992687 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083610059 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067998322 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066306087 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08248356 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072759836 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067176317 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056989609 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075763865 seconds)
  done (took 9.268383905 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091565789 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07104318 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083969052 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091310567 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087316798 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075391568 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077374276 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069698633 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082199252 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073976821 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076827563 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068764094 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077531176 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077608452 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070565219 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077294321 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072172772 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08311899 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082108409 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068549696 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076385121 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080336508 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08948585 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08058392 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078759502 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08013844 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089773957 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072640029 seconds)
  done (took 3.96094234 seconds)
done (took 38.278558768 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.782587772 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.958290366 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.785463563 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.175118517 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.094924007 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.907762946 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.851004927 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.785866424 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.9212739 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.828123281 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.019788605 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.844561739 seconds)
done (took 65.67570627 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.80573672 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.921867689 seconds)
    (2/2) benchmarking "String"...
    done (took 2.09077683 seconds)
  done (took 5.730592923 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.079304933 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.386818801 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.027145776 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.77988128 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.784189371 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.087286428 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.587323847 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.324938961 seconds)
  done (took 30.696555693 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.995270466 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.006552016 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.489819096 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.523694582 seconds)
  done (took 15.788586625 seconds)
done (took 63.906263768 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.785836415 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.81612892 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.792170146 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.76511305 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.838974103 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.793679534 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.15879043 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.041196471 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.781173074 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.769081125 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.781800614 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.216733394 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.796375955 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.396359243 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.785950362 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.789858956 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.817646322 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.322490312 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.938563743 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.800711424 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.782648793 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.828202082 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.781540186 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.930143195 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.797592876 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.78325613 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.249258508 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.790295765 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.40757877 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.783683043 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.811190626 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.326388188 seconds)
  done (took 206.179085971 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.782442514 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.757984681 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.827585677 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.815578255 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.119743966 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.962998108 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.902468188 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.289089065 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.785604077 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.801367034 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.996495531 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.783686356 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.03645096 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.730531971 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.814181433 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.881739805 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.043136472 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.033007645 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.817919414 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.954169958 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.799505993 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.911868369 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.861189851 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.958654352 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.829791464 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.8488728 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.794701042 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.800372422 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.978943866 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.012336003 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.806043515 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.824569112 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.983115326 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.656343789 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.786315918 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.787282782 seconds)
  done (took 170.497805879 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.941645733 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.785410849 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.784841789 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.785399667 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.783120901 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.790628635 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.784432809 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.906391862 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.909802567 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.246233131 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.142791453 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.836281419 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612798758 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.783259777 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.853967537 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.797476987 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.785426302 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.800788162 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.811325317 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.78417552 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.785972034 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910870977 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.796042032 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.009038059 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.792602667 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.785592775 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791507858 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.154616751 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784468004 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79189078 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.030178768 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.784270155 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.78450729 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.690119551 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.424906816 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.873252311 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.78543784 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791882257 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.785970308 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.009031381 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.78605602 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.786462781 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.790827925 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968111977 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.784616281 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.910351204 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.787417835 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.285780883 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.783936263 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786494018 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.781693391 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.480781143 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.784303413 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.784684442 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.787854155 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.785057807 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.790161869 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.789777047 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.612516144 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.856648903 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.783354187 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.78547647 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788269061 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.781857484 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.782100656 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.839135568 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781196519 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.050784317 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.835708757 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.897759242 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.899803131 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778781725 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.850157206 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.87272461 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.7763307 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.779452101 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.779826526 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.782138132 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.860578841 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.776126921 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.778492355 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.902413209 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.784463408 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.779002139 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.829947752 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.849208188 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.776705079 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678771943 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.777967705 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.778660044 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.088094581 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.843984175 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.77616263 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.77841588 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778684573 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.779348945 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.902332272 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899321057 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.568532872 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.781080212 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.605226981 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.962576156 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.977212241 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777412238 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.043686492 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.778448727 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873235728 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782615388 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.781009725 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.780612368 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.818251179 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.780923525 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.839219392 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.780733971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.15147916 seconds)
  done (took 402.751773341 seconds)
done (took 783.149751917 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.449416016 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.413528583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.539184812 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.438066424 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.415628055 seconds)
  done (took 13.974087393 seconds)
done (took 15.693582704 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.874132779 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.873474955 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802600911 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.868152859 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798940061 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868438333 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.850740111 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.807451956 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.837828948 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.804206859 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.838189054 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803948162 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791960362 seconds)
  done (took 25.53702362 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.008513119 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.020653737 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.851804158 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.015434595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829445133 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.013394066 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.946620265 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.93357713 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936719143 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798417986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.793476569 seconds)
  done (took 22.867161471 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.016222154 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.021147956 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.852633138 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.013505318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.828333445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.014588325 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.941065724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.937761013 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.931322016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.797097504 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.793210847 seconds)
  done (took 22.862655574 seconds)
done (took 72.984860278 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.785732646 seconds)
  done (took 3.505254438 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.808213064 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.946334147 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.791815855 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.789970484 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.786096209 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.785030722 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.788649787 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.785000709 seconds)
  done (took 16.200004798 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.782487987 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.786073128 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.785615586 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.785499321 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.782206818 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.786529099 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.783052621 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.784669884 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.783825174 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.783237765 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.783666775 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.783392746 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.787044064 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.786133236 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.78352795 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.786248758 seconds)
  done (took 30.272439882 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.785186753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.783796719 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.78328227 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.784127155 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.783501219 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.785302304 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.783506675 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.783102843 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.783443858 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.784328585 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.785313058 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.782655898 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.783505075 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.783115677 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.783548885 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.784163289 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.78265786 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.78394434 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.788492228 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.783670489 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.784476026 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.783539024 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.785024139 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.784808218 seconds)
  done (took 44.540784283 seconds)
done (took 96.239011461 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.74900019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.211633234 seconds)
  done (took 8.679196609 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.787340716 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.786630302 seconds)
  done (took 5.331232654 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.786108768 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.786771846 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.786834731 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.786342061 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.786769464 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.787855681 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.785073622 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.784942772 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.785612996 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.78622799 seconds)
  done (took 19.582378776 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.785376176 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.785282787 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.782662026 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.786436409 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.786578467 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.786244108 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.785806779 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.785637826 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.786138498 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.783274214 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.787129813 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.782843003 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.785091053 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.783085002 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.784984747 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.783474183 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.78364238 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.782760675 seconds)
  done (took 33.845373132 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.784149258 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.78611995 seconds)
  done (took 5.287098268 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.783271606 seconds)
    (2/7) benchmarking "second"...
    done (took 1.781519482 seconds)
    (3/7) benchmarking "month"...
    done (took 1.781864503 seconds)
    (4/7) benchmarking "year"...
    done (took 1.780480115 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.782974353 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.783479706 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.78050982 seconds)
  done (took 14.191179964 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.784872992 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.940417576 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.006746841 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.446920414 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.783580311 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.786045567 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.719614882 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.787199581 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.78667346 seconds)
  done (took 19.757955399 seconds)
done (took 108.392565329 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.618303339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.781187012 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.157011046 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.841272904 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.835382206 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.075128546 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.784479085 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.996728882 seconds)
done (took 42.804203439 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.776828432 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.318792487 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.353186103 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.078428838 seconds)
  done (took 12.464581516 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.764120261 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296350857 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.816236544 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.364190759 seconds)
  done (took 19.977444775 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.144848976 seconds)
    (2/2) benchmarking "read"...
    done (took 2.139729483 seconds)
  done (took 6.002572098 seconds)
done (took 46.936724195 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779727592 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.781057009 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.778787577 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.780006249 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.77795388 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.778188115 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.777843799 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.779262217 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.78174629 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.780033816 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.780037183 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.780552573 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.780727856 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780999007 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777761379 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778056749 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779941638 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.777996043 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778595319 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.780916621 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778644482 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781460551 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.777668588 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.778787002 seconds)
  done (took 44.42096529 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.781494796 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.779563489 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.781170241 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.781153404 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.779575086 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.781250396 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.781097581 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.779449904 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.781149952 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.781056251 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777688501 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.779312098 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.780349899 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.777901003 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779759707 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.778264622 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.780986449 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778423974 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780073607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.778402698 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.780995615 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778458963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.778587706 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780014477 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.779172704 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777453494 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.780207793 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.778950679 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782437877 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.778291756 seconds)
  done (took 55.107524929 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.785263199 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.78762993 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.780826378 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.780942187 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.781409448 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.781590356 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.781000976 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.780981031 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.782199341 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.780447066 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.779737316 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.780755092 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.780993746 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.780286433 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.781547004 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.780609679 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.781372189 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.781720248 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.780828587 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.782285659 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.780879771 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.780558436 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.781205151 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.781856249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.779946011 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.780617628 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.781077056 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.780335779 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.780277899 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.780592795 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.781993951 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.781830737 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.781770607 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.780696108 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.781471548 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.7805992 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.786417678 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.787573513 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.779928021 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.78117892 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.781083468 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.781714672 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.781778556 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.781089833 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.780545709 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.78136253 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.780899526 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.782377643 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.781049416 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.781644376 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.780121843 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.780606225 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.780891541 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.781979184 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.781546052 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.7810771 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.780961404 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.78109898 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.781833863 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.782146388 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.780832214 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.781627688 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.780938517 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.781553464 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.782060379 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.781872565 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781073603 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.780996619 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.78062401 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.781364203 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.782318304 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.781677744 seconds)
  done (took 129.981878093 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.7815732 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.780774949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.780247818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.781576875 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779600183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.783301073 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.779502899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782800088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781203147 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.781741346 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781935723 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779093272 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778956246 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.782322607 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781955367 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.778645173 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.781022291 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779521748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.781793582 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.782918182 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781802668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.779518638 seconds)
  done (took 40.895620436 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781225639 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781566188 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.78067608 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781411261 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77809002 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.780790503 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.780966707 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781185871 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781590972 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778658582 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777850364 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781280049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778602635 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778469742 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778523474 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.778800289 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780950258 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.778909427 seconds)
  done (took 33.754488933 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.780408962 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.778909718 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.781484809 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777999723 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.779453669 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781495722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779845087 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782409555 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.78197265 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.779345602 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.782155928 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782717712 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.782545761 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77928546 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781469044 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.779342763 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.782107765 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780661146 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782261953 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779613798 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.779471201 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783612026 seconds)
  done (took 40.893520018 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781871828 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.783049633 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.780260139 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.780823708 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.779518941 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.782758953 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.782508166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.779670426 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.782633768 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.782779712 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780112378 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.783064722 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.780715117 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.781457189 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.780619678 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781283395 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783390463 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781798223 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784113746 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.78134331 seconds)
  done (took 37.349917644 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782966207 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784480344 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783325555 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783397005 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783064119 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78420459 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783690288 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.784410832 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784217477 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784499508 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784102649 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.784903358 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784932529 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.784882699 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784583314 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783889069 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784762122 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784076984 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785097317 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784662942 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784663591 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784469374 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78493156 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.785696847 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.784850196 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785316997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785385183 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786259876 seconds)
  done (took 51.683506546 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785447735 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786408199 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.782032231 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.782352581 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.782391552 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.781801117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.783241367 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.783589984 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786010834 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.782644692 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.78575123 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.786413223 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786173647 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.7858121 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786491233 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.786259168 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785649944 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.783946503 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783241333 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78380034 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.786918303 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78606361 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.787221025 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783023479 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784087137 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786167017 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78374978 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.78399213 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787086112 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784299944 seconds)
  done (took 55.260394697 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.804520346 seconds)
    (2/2) benchmarking "in"...
    done (took 1.805049198 seconds)
  done (took 5.328484447 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.784330308 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786374106 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.786303819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784182272 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.784614818 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.786446499 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786485431 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784405475 seconds)
  done (took 16.002983531 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.786305062 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.786515789 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.78775865 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.786598623 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787661604 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.786775992 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795809983 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788165783 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.788537547 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.786621571 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792768115 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.792621223 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.790643261 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787427986 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.786645495 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787851899 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.787463435 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.787459792 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.786979439 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.788756981 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787582252 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78971726 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790025571 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.785060672 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.788726799 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.798802927 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.792875622 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.787747267 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78822416 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.792815265 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.791324608 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.78950706 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791227277 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.788977492 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.787746503 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.789927345 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798123022 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789125502 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.79531433 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78903 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788725738 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.78684629 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789419563 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.792718711 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788325494 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.788985977 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.790069486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.787131777 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.787543504 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.790193084 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791978469 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787316403 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787795077 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794448305 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.790066791 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794965316 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.790952802 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.791493597 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.796783052 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.799334597 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802398141 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.794784271 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790304338 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.791077834 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797694403 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.807632476 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796950151 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.787334359 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.786792461 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.790667038 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.797578671 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803851529 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.797106673 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.790968036 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790813224 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.790682534 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790608646 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791062877 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798090714 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.792640919 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.790048053 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79164343 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798866139 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807841915 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.79060876 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.791984856 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.792973052 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.790672445 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.790909628 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800347518 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.792929658 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.792425208 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.79096975 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.790870167 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.793856358 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.792719652 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.789372766 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794439002 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.789001935 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.792160142 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791482326 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793908564 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.799565404 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791828152 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792176685 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.80002059 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.792482137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790799066 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.802530533 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.791767414 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793176574 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.792178325 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.79912579 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.790502454 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794300739 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.798785681 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.79268191 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.792321847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.792420707 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.795351168 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800638536 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.813734949 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.79307864 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.793456912 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.796420696 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.803816886 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793167505 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.794915693 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.792958405 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790415599 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791858147 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794198073 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.792789078 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.793983991 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79412417 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794660448 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.791595856 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.793119978 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.794297707 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.794940702 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.795893733 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.796668755 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794919881 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796320957 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.794221596 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794554995 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.801122619 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.796025932 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.795728524 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.794572407 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.792013572 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793832876 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.797247579 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.794638336 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.795331159 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794357032 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793023346 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793573984 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79660191 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.79498616 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794547018 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.794470726 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796697336 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.795042515 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.800453942 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.793663719 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.792696623 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.794097893 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.794821373 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.795293155 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.795660645 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.793113553 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.795739159 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.800593304 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.794839044 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.796235632 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.799390316 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795270405 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795314856 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79525026 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.79798315 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.800772284 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.795708973 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.803192717 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.796479084 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795561662 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.797047771 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.795395173 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.795309474 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795696993 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.797597625 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.804771149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810472317 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803904958 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.79582934 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.799790853 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.796630037 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.801539338 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.800988796 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.795678467 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.795787075 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796437924 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795614085 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798597594 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.798661237 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.796768981 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.795302884 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.797834666 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.799682025 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.796547069 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797476223 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.797350975 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798262622 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.793541492 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797835817 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796084269 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.795379833 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.79371569 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.796289786 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.79866355 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.796983313 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.796832415 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.807952261 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.794686891 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79718268 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799742953 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.797301198 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.794334507 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.797404183 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799015559 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79906168 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805164034 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.797572781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.798440609 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804888234 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.797735602 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.798107113 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.800678995 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.798880516 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.794901662 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.798586901 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.803152669 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.799465928 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798197065 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.799433238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79782824 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799007679 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.808349208 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.796378079 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.797420413 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.799312231 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.801125471 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.796363379 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.800559143 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.799720577 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.799555936 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800413058 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799040094 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.80079326 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801154413 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.798749265 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.799432338 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.799710451 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800372565 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.806647259 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.805529163 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.799321235 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.803975504 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.798722944 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.805869028 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.799898085 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799077022 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.798660643 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812451237 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.805835413 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809374255 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.803047809 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.799335942 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805496596 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.799665927 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.804577876 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800092077 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80061746 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.79957717 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799397196 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.796129686 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802420501 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.800415415 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799713354 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.799686688 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.803214906 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.799990834 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799853278 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800371569 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.799465159 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.800584115 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79937893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.802323346 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.804183924 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802066217 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.799288423 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.799576653 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807864063 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802946085 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.801582862 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.799375228 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.799850983 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799772179 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.803949985 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.801354041 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.803221394 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.806889486 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.802841759 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.809149073 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.802977065 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810610087 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.800268912 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.802035917 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.807882586 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.800926995 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.799590222 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.802632229 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.802246343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809271946 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.801202588 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.803527143 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.805133076 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801858593 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.801935044 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.80180549 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.804086868 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801667734 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.80246759 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811756915 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.802328396 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.804115298 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805393536 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.799833589 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.801906994 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.802637287 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.800671501 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809261445 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.80236628 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.803662397 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.801481005 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.802952118 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.801829148 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.804422478 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.801933693 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.800088565 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.802718109 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810594787 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.802609946 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809060448 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.80270413 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.812430683 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80292603 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810260426 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.806208347 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.803021346 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.80375071 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.803592359 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.805163438 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.802887323 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.808378453 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.805828974 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.803673333 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.80788492 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.803892864 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.8097949 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.804785721 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.805649213 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.804246539 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811777586 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822985317 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.805400849 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80839022 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.802174464 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.804708355 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.808111456 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.8062027 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.803443122 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.806536273 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81242988 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811867048 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.804635933 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.806732167 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805397685 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806011249 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.805391679 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.805612935 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.807915607 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.806156061 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.807599762 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.806733818 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811893904 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.80619425 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.808807478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808691077 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.805839462 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.816768968 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.807080922 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.809421372 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806651401 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.806677816 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.807013888 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.806896625 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.806777829 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809297649 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806770297 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.80673532 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811152142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.81105978 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.81150124 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.806790964 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.806360012 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.807691208 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.809461379 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808456295 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.808690312 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807945408 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.808888713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.808299133 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.809923832 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.806994801 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.808975 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808347864 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.807977998 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810311737 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.812808113 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809818323 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.806096792 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.808511078 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807941476 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.806954521 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.809658985 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.82006796 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811004469 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.816679238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.813494408 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.811350742 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.811468859 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810759202 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.815669453 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.807042953 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.809483102 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.809360209 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.812635556 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.808770392 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.811670114 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808794354 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.816647051 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.812004531 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.809089433 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819006634 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.810800659 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808452356 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.808487597 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.813441859 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.809610066 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.80651681 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.810388533 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.80830289 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819013301 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.812117875 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809248447 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810651188 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.807938377 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.809866058 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815591437 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811271708 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.810508196 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.807805491 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.810865883 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.812344097 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809424129 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.807123378 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.808740877 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.809415351 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.811642491 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.815306165 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.807430489 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811404294 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.809689522 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.810139151 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810874404 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811220789 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.808079703 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.806527369 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.81049576 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811072137 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.811050891 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.81253169 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.809821307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.810574953 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.812037625 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811992711 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813511831 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.817839587 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.81827388 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.808698352 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.809922152 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812645477 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.81450876 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811778045 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.811047049 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812323518 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.813604103 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.810762825 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811603973 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.811639709 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.813361439 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826597092 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.813172726 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812076466 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.812583022 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817662173 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.81209191 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.809893974 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.812400691 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.815627953 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.813184214 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.8194722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.813144074 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820151841 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812785281 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.812286965 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.817087183 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.813807258 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.820393823 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.815781199 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812384803 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.812540961 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.816354855 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.827903116 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815305689 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821873465 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841104803 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.813424796 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.813728868 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.816687883 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811915943 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.814233921 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.816014255 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.813299798 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.81343991 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.816083313 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.813375823 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.812660238 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818155391 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.815008195 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.814455624 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.813740082 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.813897748 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.81682597 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.811807625 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.81390478 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.814785112 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.813514914 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814277195 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.814933434 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.815092006 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82795347 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.823527636 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.81617722 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.81608244 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811409898 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.818827447 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.815675731 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82176154 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.820791873 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.814452916 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.815782041 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.816962288 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815875246 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.812989492 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815550896 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.81437614 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814227741 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.813714019 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.829223768 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.8231053 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.821550123 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.815856058 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81651767 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.815930184 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817393148 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81586403 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817103907 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.818929065 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.817423425 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818179424 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.815913811 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.815952405 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.8176108 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.822280881 seconds)
  done (took 1076.323704958 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813545661 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81362069 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813038803 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813127551 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814097274 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813591925 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813818029 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812921313 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813113142 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814892907 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81412011 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81422861 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814295593 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814680385 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813753743 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814410056 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814439238 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814503601 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814310543 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81447257 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814857682 seconds)
  done (took 39.842263715 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.817134424 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.815141889 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814974089 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816182917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816863592 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.817263238 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.81437242 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817406261 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.817372193 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815067077 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819864562 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817587687 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.81558373 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.815362448 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814511223 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818538517 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.818918811 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81553787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.818030365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.820097295 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821175406 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817988186 seconds)
  done (took 41.725895851 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.818237051 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.820226685 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817431945 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.816714867 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.81939127 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.817581941 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.819069593 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.818881596 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.819349836 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.821092049 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.818318336 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.819215806 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.823369844 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.82263608 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.821896949 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.820563899 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.96312083 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.819036868 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.818910244 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.819561797 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.817902102 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.824808201 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.817351458 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.816779877 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.817030774 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.818766358 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.819523352 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819604943 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.820198908 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.819952544 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.822970601 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.820647195 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.819574085 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.821548253 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.819631968 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.819949707 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.825114915 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.819988545 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.817267272 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.820072933 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.828737199 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.836410982 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.820674211 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.827362021 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.820410165 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.820915691 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.822046559 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.827084977 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.818479469 seconds)
  done (took 91.107033386 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821638589 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.82119579 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.817433037 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82128594 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.821757877 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.821979972 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.821974279 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822663225 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.819474549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.817972289 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.82153929 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.818675733 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818702888 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.821927187 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.820785122 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.818962658 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818535899 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817809435 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.816691945 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819627023 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.81679006 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.819842596 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.820094294 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.817194491 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821886387 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817730559 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817728438 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.819797136 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.817856946 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.817635773 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.821889872 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819684865 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.820291575 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.818801887 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.817390576 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.8206146 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.820956658 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.81783648 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821101302 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.817725428 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.820385171 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820824698 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.820408889 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.821496693 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818382002 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.81893572 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819838924 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.818824833 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.819278454 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821113173 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.821842244 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819377792 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822875263 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.81963922 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822023994 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.822238871 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.819342813 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.819370562 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.823769167 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821239912 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.820868237 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822927479 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.821260851 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.823454332 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.82374385 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820789307 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.821195158 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823046889 seconds)
  done (took 125.528016754 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823420266 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.823130831 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822973905 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823068306 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822376616 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.823199468 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823765539 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.823246694 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.823630539 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823267149 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823322871 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.822970639 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.82313453 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.823596475 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.82347928 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.823145555 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.823484809 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822631333 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.823383341 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82362028 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.82409889 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.823219217 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.822939369 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824285065 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.824943814 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.823317555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823902736 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.822845558 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823402559 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.823813082 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823874686 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.824126795 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.824115733 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.823665246 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.825218413 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.824035995 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824472874 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825148364 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.825326653 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.824847902 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824660019 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823934563 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825757476 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.824789456 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825901973 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.824978315 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.82461985 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.826069891 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.824866953 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.825676474 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.825102351 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825519694 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825018898 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.825524429 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825115014 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.826407432 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826105324 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826559733 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826685261 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.825236173 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82543962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.825929321 seconds)
  done (took 114.863806517 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825143399 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825771027 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.824158842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.823370408 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.826302657 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.824455526 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825846163 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.826152728 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825795715 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.827116128 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825280887 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823700627 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82362642 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826645539 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823852312 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824366114 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823621377 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.824009166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825503184 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.82506771 seconds)
  done (took 38.257579523 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.823705402 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827313195 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824794974 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.823848132 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.827197103 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824574722 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.827469072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827636516 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824358057 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827254098 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.828355512 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.826384261 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825091456 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825138202 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828650224 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.825651293 seconds)
  done (took 30.976771476 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.825326112 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.828230799 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.82807006 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829162003 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.826875417 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.827254682 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.829011726 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.825748649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.82596253 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.828272269 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828020053 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.828375499 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828611225 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.828012756 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.826125007 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829357315 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.825608433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.825536931 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.828523899 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.829924458 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.826860232 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.826753491 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.828496428 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.829188908 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.826175271 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.827115915 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.827044608 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.827062441 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.826242431 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.828642312 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.826551764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.827466783 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.826434075 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.826231111 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.829863575 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.827061497 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.829919181 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.829899909 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.829577875 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.829320536 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.830179593 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.827316298 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.830041325 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.829986885 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.826808175 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.82992932 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.827751169 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.827726057 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.826989199 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.827239185 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.830935806 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.83093082 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.830163981 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.830328588 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.83052322 seconds)
  done (took 102.306234268 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830836847 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.831010444 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.828811395 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83073466 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831421609 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.828697978 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.831509403 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828544656 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82881234 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831134126 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829108799 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83116494 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828286166 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831373037 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829057511 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831591464 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.828226512 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829462611 seconds)
  done (took 34.70144258 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.829166321 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.829616185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.831062329 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.829545379 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.828925273 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.831764649 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828674907 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.831490043 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830739682 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.830824344 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829012319 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.833112468 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832609923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.83194162 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.829847245 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829441227 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833335725 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831729545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.829241162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830561278 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.832511894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831930518 seconds)
  done (took 42.040554956 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.830056046 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.831142381 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.847866744 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.845494645 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.854712115 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.857914202 seconds)
  done (took 12.831036564 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832922986 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833690208 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831364677 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834413636 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833542116 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830382513 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831227773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831076604 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833951549 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831648862 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831632189 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83417865 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833647534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831524909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834647666 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83382752 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831782802 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831846139 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831638158 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833997607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832122084 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834919159 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831587518 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831808088 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831770634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831332896 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834675705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832203439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831031326 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833949013 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83564118 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832206197 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83524235 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831909684 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836373137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834952032 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83208244 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835312813 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83481792 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832408097 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835034321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835184773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835046292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832634093 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835087035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833104746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832912876 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833511144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832803804 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835377072 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835532112 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833395526 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835940097 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835908063 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836279538 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836205187 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833100787 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833626358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836197178 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834138608 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833429534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836210443 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83391785 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834301256 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837096369 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834370355 seconds)
  done (took 122.786390145 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833137643 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835653411 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835662653 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836320401 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83505904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835070814 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835650839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834990616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835947007 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835834959 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838398274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835249877 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835917037 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836148513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836183285 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835739819 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835794699 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83582537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836055272 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83884782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837158571 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835738089 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836812839 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836312422 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837456245 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838419606 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836532331 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836647335 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836689968 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836140751 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837296771 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837540516 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837549543 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837773032 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836606449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836373458 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837379236 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836904826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837775494 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840321998 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837920254 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840095221 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837147519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838466635 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838426788 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837792666 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837394612 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837934251 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83758661 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838244348 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838793611 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83836223 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839485745 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837807796 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838475496 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837854016 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838757023 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838299864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838383219 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841038183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838160343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837721426 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840515752 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838940735 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838529604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8391029 seconds)
  done (took 123.03298767 seconds)
done (took 2508.715880545 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.869815253 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.87001127 seconds)
  done (took 15.511571483 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.001095658 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.95413718 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.836971272 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.869833166 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.837825508 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.855209126 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.840071106 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.83782688 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.838872189 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.838512091 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.838659666 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.025335725 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.845526483 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.838918338 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.837981655 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.931005209 seconds)
  done (took 51.820425923 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.842654721 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.843625271 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.854236757 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.847894438 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.84310644 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.853827347 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.874612417 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.848050043 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.876346793 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.853340622 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.908914813 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.850017241 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.842340143 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.890653576 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.852943615 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.856611339 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.927911786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.915321801 seconds)
  done (took 35.356485734 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.91751792 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.843384232 seconds)
  done (took 10.539281831 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.843670879 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.83746343 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.84570568 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.854906988 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.839237736 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.865677861 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.852398516 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.841866579 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.840770836 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.851558199 seconds)
  done (took 70.250624736 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.849446213 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.844745438 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.84305818 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.841425375 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.834814999 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.840038121 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.842208766 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.840902031 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.517675784 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.876726145 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.848591941 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.84793623 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.842824042 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.844685319 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.842900284 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.866441759 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979780649 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.842045743 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.842388977 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.848292727 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.84506579 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.894417429 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.855929441 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.844362266 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.87192432 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.516408922 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.850546699 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.850125316 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.960198341 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.84238387 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.844978958 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.844601507 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.845806556 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.233619468 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.132982853 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.842429355 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.851813353 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.852601735 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843839035 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.973796927 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.845300196 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.850295577 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.833321257 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.113065996 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.927276741 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.884540765 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.20601709 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.847847311 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.846182144 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.874259484 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.847430083 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.84597213 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.857487981 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.354856784 seconds)
  done (took 131.24777046 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.841264361 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.128026494 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9928421 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839319175 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111694173 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04356445 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.780734833 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889714988 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.840481135 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.04194943 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055235174 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946999946 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84119595 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.841076068 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839351486 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838379347 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000412384 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907205178 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841754725 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.838768962 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86854899 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048825286 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.961013169 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.841545777 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.862778994 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050045989 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961831301 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946179101 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.326704062 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.839596485 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.905311664 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842013536 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.839507703 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.839273705 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.995643413 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942622752 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928883161 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.842053787 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84132071 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841620515 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.50310687 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03730566 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.937748642 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.982268921 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991017555 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044483416 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.488361904 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.841450901 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.484415895 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004703607 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.054140338 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.048166813 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.965634691 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.843547345 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.984288249 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.841515126 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841626153 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079257329 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985676035 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943054655 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843385734 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.842837335 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841702054 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083833539 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844483861 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939973282 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845643523 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843321888 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940943593 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945859628 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.983226135 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055146654 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876398893 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.567594023 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.060561175 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.056003607 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911257208 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079166919 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843957559 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842922104 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93001076 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.591380653 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042077259 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089287499 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063733407 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877091728 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.439141533 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.842463371 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.038419515 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027580695 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.038164741 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.988567589 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.992918233 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.160171863 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843974607 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.842832812 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.070143386 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.981732368 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.847052544 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20697975 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077224202 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.459456568 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.86830895 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138665348 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975912628 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.161407877 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.471321783 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843135132 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012873464 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.883314489 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.845049994 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843827999 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.035324953 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.651587301 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843896512 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.586650473 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.907989969 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847118289 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04807608 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.848138598 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054244141 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846180693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080894234 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.122547819 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.880480433 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.017113027 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.991606546 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.63912849 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092045044 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089383242 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964307278 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113728569 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.574136355 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.846934955 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120580157 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848203887 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.846797947 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.014081941 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848282474 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993875099 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85076973 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075020246 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876377396 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006628359 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849231973 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.079086339 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.884008727 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899051868 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852548266 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972516103 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848770112 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.7330237 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001982165 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849697292 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.849476623 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.261134891 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.850011713 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997673921 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077995526 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873961251 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917481937 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.375290554 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849717999 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93601177 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87442053 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.465824314 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.85103426 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.059142717 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.793421148 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.281777166 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.851455715 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.090222019 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08327129 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.848809234 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.849879105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.58947952 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.556586906 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849265698 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.008812301 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.356292423 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.50292254 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052035861 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853149331 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974997871 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.851818506 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.928280885 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.193287841 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849151931 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.849824586 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.85366576 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.851122775 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.851252079 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056707151 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.882747628 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.348419584 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.98731029 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06645402 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.159728986 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.071205605 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.899120238 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.853972607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.096101536 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854831685 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.917556635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.855507061 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874777974 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081377939 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852354184 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086750398 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.108754779 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.755395127 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901035329 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.851683727 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850627219 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.851991845 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.996612446 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94159309 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.853444566 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.84958216 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962242719 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971005845 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.042997024 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.445667087 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.970079951 seconds)
  done (took 893.258544993 seconds)
done (took 1209.757317673 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.849937908 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851354137 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.840829911 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.850047604 seconds)
  done (took 29.180883331 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.856960055 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.859022405 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.856364085 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.85310561 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.858549184 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.854411158 seconds)
  done (took 12.925093218 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.920581693 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.850124488 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.851531945 seconds)
  done (took 21.409437729 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.923127949 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.256096021 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.956060655 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.289114726 seconds)
  done (took 10.211952617 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.858649342 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858400869 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.857670308 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.859081044 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.858805534 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.859779764 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.858123134 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.859279528 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.860150371 seconds)
  done (took 18.518409939 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.296775685 seconds)
done (took 98.333163609 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.986134404 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.839048181 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.085562388 seconds)
    (4/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.95919708 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.143705978 seconds)
    (6/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.913714522 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.968811813 seconds)
    (8/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.850358552 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.11761717 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.098253206 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.016786171 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.150674004 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.895718514 seconds)
    (14/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.969657597 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.852560676 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.837941158 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.945224736 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.279646857 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.355822902 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.909423804 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.855056695 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.88060902 seconds)
    (23/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.058436543 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.855460554 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.658801598 seconds)
    (26/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.441559069 seconds)
    (27/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.007654527 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.713565431 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.852770238 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.938490234 seconds)
    (31/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.365361338 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.257452435 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.901217196 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.961204274 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.498561903 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.035475758 seconds)
    (37/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.151813595 seconds)
    (38/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.84217572 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.590038285 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.694582772 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.996556799 seconds)
    (42/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.94097984 seconds)
    (43/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.954345557 seconds)
    (44/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.9808398 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.280216245 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.855246592 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.763405638 seconds)
    (48/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.944186823 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.86906932 seconds)
    (50/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.879288432 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.93754424 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.219672019 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.046298494 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.858731264 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.035299617 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.894463077 seconds)
    (57/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.95163498 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.853694075 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.108243635 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.839831846 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.69710309 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.420594591 seconds)
    (63/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.972524138 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.839091369 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.041741001 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.929889794 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.856025842 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.840895421 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.741115284 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.511905373 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.915843239 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.941527488 seconds)
    (73/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.366186655 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.523465215 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.2379964 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.958284849 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.034659229 seconds)
    (78/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.376017707 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.201363647 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.44765825 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.936448275 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.43996587 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.939940731 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.547705276 seconds)
    (85/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.888805341 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.053836499 seconds)
    (87/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.46457872 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.476201693 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.644262811 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.966044848 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.999365085 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.871411723 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.10247924 seconds)
    (94/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.990405956 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.757578226 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.282723341 seconds)
    (97/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.986116173 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.514676042 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.935061386 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.640432292 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.235057843 seconds)
    (102/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.268927415 seconds)
    (103/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.062628215 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.95194434 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.095183354 seconds)
    (106/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.027623725 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.926093224 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.945144362 seconds)
    (109/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.012920044 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.863598002 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.894033277 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.948586358 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861797679 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.117706134 seconds)
    (115/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.257073607 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.867030228 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.399968183 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.004578936 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.949170877 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.937235704 seconds)
    (121/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.093306134 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.229013004 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.297821597 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.884151923 seconds)
    (125/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.991737093 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.924930013 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.11368916 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.034944134 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.942369453 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.158356566 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.735335754 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.077165877 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.154361738 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.127701447 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.015941507 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.847754947 seconds)
    (137/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.281257105 seconds)
    (138/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.961761259 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.961299371 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.882635825 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.448059335 seconds)
    (142/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.886532407 seconds)
    (143/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.886730096 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.156028692 seconds)
    (145/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.993924783 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.100629183 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.893939878 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.131559713 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.199172609 seconds)
    (150/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.461250636 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.883396372 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.011720652 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.960286068 seconds)
    (154/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.878183485 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.463260514 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.85964167 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.865957919 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 5.627838149 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145591168 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.09918661 seconds)
    (161/309) benchmarking ("sort", Int8, false)...
    done (took 4.873786711 seconds)
    (162/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.054734776 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.101729917 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.135283525 seconds)
    (165/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.008962812 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.869355354 seconds)
    (167/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.503886773 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.91152993 seconds)
    (169/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.032217086 seconds)
    (170/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.151155932 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.380432031 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.854596175 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.893057056 seconds)
    (174/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.992317357 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.984212454 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.162689861 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.204924001 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.780992 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.869369871 seconds)
    (180/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.891798561 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.957521508 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.909190752 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.95638789 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.92944823 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.002490914 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.943651861 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.288596906 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.780967719 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.213879122 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.150599459 seconds)
    (191/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.006793604 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.125127212 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.928345288 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.865785091 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.9310339 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.91977126 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.881940742 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.865122043 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.254876784 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.140816588 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.224994691 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.032068774 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.896397291 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.865810701 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.075622618 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.140756107 seconds)
    (207/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.97489096 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.993355072 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.406415403 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.071686148 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.996193881 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.885997146 seconds)
    (213/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.864146848 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.88566533 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.890992773 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.159244036 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.233803853 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.977612613 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.868320824 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.778064308 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.86973177 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.89335128 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.159161443 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.993943284 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.851493802 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.514438433 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.507197396 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.914119165 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.857599585 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.967242228 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.027660949 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.854096727 seconds)
    (233/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.959615905 seconds)
    (234/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.957941393 seconds)
    (235/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.994447514 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.794511825 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.856305357 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.744786099 seconds)
    (239/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.877555684 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.244962279 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.106601145 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.975816605 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.032876602 seconds)
    (244/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.0659997 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.866658375 seconds)
    (246/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.210413945 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.938577949 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.887905707 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.869168139 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.963698564 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.682773127 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.85885468 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.900773294 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.201555022 seconds)
    (255/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.77311705 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.893329124 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.897201477 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.966887877 seconds)
    (259/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.950763038 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.021871071 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.262928041 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.252598893 seconds)
    (263/309) benchmarking ("sort", BigInt, false)...
    done (took 6.870908933 seconds)
    (264/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.209057291 seconds)
    (265/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.870763711 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.888453631 seconds)
    (267/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.008925629 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.544286013 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.861792871 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.125475434 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.194138937 seconds)
    (272/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.154290722 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.988015362 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.116030666 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.026547484 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.241229071 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.247217217 seconds)
    (278/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.130103864 seconds)
    (279/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.056176057 seconds)
    (280/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.365756873 seconds)
    (281/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.950103681 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.246566569 seconds)
    (283/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.990851997 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.953337547 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953879484 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.890929007 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.94234394 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.986108226 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.893957336 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.876063162 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.961148523 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.166226835 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.025977639 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.258626695 seconds)
    (295/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.382495508 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.876124476 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.679938151 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.924149062 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.857144062 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.195833762 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 5.69856491 seconds)
    (302/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.235665761 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.809804703 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.899433895 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.249834732 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.753739871 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.15938491 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.064663372 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.090288313 seconds)
  done (took 1019.57771396 seconds)
done (took 1021.442582387 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.905631685 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899316391 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.884275592 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.907126429 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.995938773 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.916414132 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.897079405 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.889464986 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.931847156 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.935312305 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.881578002 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.914254607 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.885025387 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.884572831 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.887014124 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898619543 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.186058344 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.90273741 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.900499018 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.891227667 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.900679348 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.879432165 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.936328315 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.91269885 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.891070007 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.891176535 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.882692669 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.902468083 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996209822 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.885846048 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.889486792 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.897633107 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.182193617 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.906409727 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.880401863 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.905036758 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.895098458 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.892275611 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.890043798 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.917659313 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.311473025 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.890390436 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.887928388 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.888346192 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.885529095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.890734851 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.883940663 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.894841715 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898313083 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894908858 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.309053501 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.903675497 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.890250786 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.887961949 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.898406534 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.884228031 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.893895156 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901935173 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90332575 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900012314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.178394695 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.913473909 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.889644831 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.901466219 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895281143 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.34840115 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.889701372 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.891898571 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.314299818 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.898094984 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.346550128 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.900689639 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.891835397 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.901509108 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.914746111 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.187633304 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.90185198 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.891306225 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.893898001 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.887011603 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.900205142 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898197654 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.892869583 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.889592562 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898567053 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.918780185 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.900829989 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.889374625 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.897882137 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.908451184 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.892545933 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.898611326 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.892306595 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.883271802 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.899385897 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.893398436 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.889841814 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.890203255 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.892764284 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.896126476 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.31214303 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906854772 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.884384404 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.883588092 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.890377399 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.899528275 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.311077443 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.892766115 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.910110053 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.935974308 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.891965028 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.178097428 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.907493992 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902552762 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.899671836 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.89091866 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.888069368 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.181520374 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.334829949 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.904035641 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.895230085 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.886771294 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903857891 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.894937704 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.88458366 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.189773054 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.914514021 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903608481 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.008733299 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.903510747 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.918023796 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.887891457 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.894118328 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.924374243 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907534178 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.921340975 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.895370523 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907377619 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.906417061 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.889398837 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.898227338 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.899175105 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.894115531 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.898040386 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.884287093 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.920171573 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90238514 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898920119 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.914501513 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.012513472 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.888469624 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.184053092 seconds)
done (took 296.445338617 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.95568549 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.87858425 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.984213815 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.8866085 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.97230486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.981625748 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884945351 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.887944517 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.88436993 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.295030818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.884381652 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.887647312 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.885956411 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.884701453 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.971097775 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.884726251 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.886634619 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.26203846 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.890165181 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.959193788 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.878307753 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.886214777 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889956991 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.312480982 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.875222619 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.87997835 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.966578363 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.889973457 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.235995063 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.881148631 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.881637161 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.272310168 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.988600461 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.905965683 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.896582497 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.894446484 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.98343145 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.891029035 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978797461 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.971941426 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.986066699 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.929438175 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.886463644 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.890007875 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.889243753 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890725896 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.886420579 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.918577113 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.879135745 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.89011457 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.226319498 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.901910907 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.88952202 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.8846419 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.889080287 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.921604647 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.888739762 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.892383262 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.973739162 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.893977715 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.954561279 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.274727135 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.311753756 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.890608762 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.887644104 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888228326 seconds)
  done (took 185.800017126 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.953878624 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.96248287 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.955205218 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.890997154 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.93957406 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.964269605 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.300736225 seconds)
  done (took 15.785160085 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.895840869 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.890128317 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.938902927 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.940254013 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.889539751 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.042822717 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889632847 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.900334396 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.888548885 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.943012073 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.893021615 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894179864 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.90158219 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.888855283 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940597379 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.901151167 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.006547921 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.893827544 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895304691 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.047477598 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.890756237 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.89934677 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.947168668 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.904902045 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.89479006 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.900936397 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.471650297 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.895115988 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892676093 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.895385314 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892442751 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.933540285 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895350054 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.891299485 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889342218 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.010163214 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.894287326 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891381305 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.891442625 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.893646512 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.894259763 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.892452641 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.894274431 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.892801756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.895108032 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.916519538 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.893242788 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.895151934 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.893665576 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.896127626 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.945610155 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.894661167 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.890199895 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.894170939 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.950042151 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.902540019 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895731235 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.89201614 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.893917625 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893998926 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.05168508 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941580658 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.89562576 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.943028742 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.897252712 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.895514486 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.894301743 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.894904642 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.948966008 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.895396321 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944078226 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.89296861 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.053539733 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.916773969 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896557212 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.89901572 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.898768833 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.895778354 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.892791829 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.900236902 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.893149173 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.897608383 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.902646139 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892314908 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891046311 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.009065071 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.003158442 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.895059826 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.910481582 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.902742362 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.89517563 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.94809974 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.897027354 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.894635121 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.947149435 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.011911585 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.953964126 seconds)
  done (took 208.190362326 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.900560792 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.902642041 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.895378828 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.912593759 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.89566613 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.897393773 seconds)
  done (took 13.22780408 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.896536769 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.896080549 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.896105692 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.895751842 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.898182989 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.899868206 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.898745928 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.898122265 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.901601888 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.897296944 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.89724454 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.899536218 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.899478214 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.899380891 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.899512306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.896602463 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.89755395 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.894882959 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.898196098 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898592829 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.060468076 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.900936318 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897085846 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.901890315 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.901633069 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.899899811 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905589446 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.901156331 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.898466358 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.903984614 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.901573436 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.898317151 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.898679616 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.904230144 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.903472158 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.898260886 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903644766 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.900520232 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895100209 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.899825647 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.89913052 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.90210004 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.900072504 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.898044365 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.899703076 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.900737951 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.90411055 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.906484406 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.899762419 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.900096785 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.900769406 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.89890294 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.901079937 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.900555868 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.900483649 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904306986 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.900596629 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.900246449 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.90027426 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.900531439 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.900868001 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.90159771 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.902408734 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.901106386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.896212476 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.901621258 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.901767806 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.905066031 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901850475 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.901583028 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.900162966 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.898314799 seconds)
  done (took 139.791714522 seconds)
done (took 564.621434118 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.195930541 seconds)
  done (took 9.023378489 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.981535524 seconds)
  done (took 8.913637276 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.322193212 seconds)
  done (took 10.153025471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.905582772 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.92079902 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.901839668 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.904700999 seconds)
  done (took 29.471153029 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.910305597 seconds)
  done (took 8.740779661 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.906694812 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.894228553 seconds)
  done (took 15.663799743 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.949035471 seconds)
  done (took 8.778983678 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.927119347 seconds)
  done (took 8.759904908 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.910949755 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.919801375 seconds)
  done (took 15.672242371 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.878747842 seconds)
  done (took 8.709515829 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.497337248 seconds)
  done (took 11.337370808 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.904719657 seconds)
  done (took 8.746293479 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.969919526 seconds)
  done (took 8.804154992 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.968047309 seconds)
  done (took 9.799564099 seconds)
done (took 164.403789583 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.899084233 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.895656693 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.89590456 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.899179271 seconds)
  done (took 29.420217859 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.938564866 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.940300224 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.939825381 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.947969837 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.942323238 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.938437673 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.932768766 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.931400422 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.950067812 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.941403605 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.939721836 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.9377885 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.937673045 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.929330619 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.937595665 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.938958963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.95045026 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.941343584 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.93126641 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.942529767 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.905952196 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.953474073 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.941512001 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.907346514 seconds)
  done (took 48.330975338 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.10241734 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.978137455 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.058520214 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.955480046 seconds)
  done (took 9.927339489 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.956546044 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.962874062 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.971953434 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.009627225 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.036029609 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.967555734 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.933939524 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.931441284 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.913914217 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.961378852 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.03561454 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.976814619 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.049109196 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.906517487 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.088424336 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.908157073 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.907684621 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.963262918 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.013773704 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.02933673 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.907377091 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.957905392 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.964761962 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.97610168 seconds)
  done (took 49.163414251 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.905593125 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.914850111 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.912654622 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.905013597 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.907516538 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.903454248 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.911036721 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.908544816 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.926827634 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.908370887 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.905540666 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.905992221 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.904350766 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.906400592 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.9056303 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.918275102 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.921665499 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.904043194 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.911082693 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.914056169 seconds)
  done (took 40.03707837 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.898698857 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.841098326 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.249677242 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.157241427 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.899448351 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.900342801 seconds)
  done (took 31.782722476 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.918284781 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.908893815 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.905716939 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.958187234 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.040743616 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.911662041 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.907019701 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.916171494 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.949088595 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.968475175 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.923253032 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.931593889 seconds)
  done (took 25.075061609 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.902346576 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.90156911 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.905293229 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.916649163 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.918030095 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.912934895 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.915035043 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.901756626 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.91933173 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.923995164 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.913265441 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.914832189 seconds)
  done (took 44.785084316 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988905923 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.945139751 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.95061999 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584577712 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282031782 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113535067 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.507787359 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238666468 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.907777612 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177632548 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016652891 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004062422 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161634174 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269931302 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929801364 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.368098789 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19481289 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114514373 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928480965 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608810933 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965817239 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.949656623 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.670944276 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959198143 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114124649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.034998862 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.163184482 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902362357 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037442487 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93963529 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910841661 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900043819 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175204699 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29303756 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004899757 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909793365 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.521283709 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.622518342 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.895817582 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.692145726 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.653964623 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.026298246 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914809841 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90557833 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839460888 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922889478 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273941056 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.911462776 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.615044041 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906817035 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915917049 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000818109 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.908577913 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.723571515 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819263794 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.907503823 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.902223359 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911742683 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476535841 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.040658054 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.959712927 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.872516455 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.99431901 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609889851 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297123755 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.052982706 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.911657119 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91050911 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840692497 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.688767214 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962495155 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234962674 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.92815546 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557090354 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218599978 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.058940813 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847616997 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192380947 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.30675335 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.869531525 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130731457 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904894247 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839953385 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.845964217 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836596194 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166587732 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943022726 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.673494722 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94054996 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253275976 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918168917 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922428281 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927792062 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128592178 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.790335001 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906025053 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.7713627 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054293207 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930942898 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243784127 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842597406 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.911491071 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165794591 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.11983155 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.851811973 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.397262341 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067431189 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.330833577 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.953849547 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.932504063 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947988718 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.183075019 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965308043 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.045690284 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95845283 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908965666 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213851263 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370772755 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.038336305 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.034303773 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0340144 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.232248905 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935209023 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990826849 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919785883 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909519011 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.714021391 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459704441 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.908707669 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.910839424 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851354249 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946706657 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.910139725 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856304335 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.527256402 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018022777 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.921136343 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132003181 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.346053419 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210266998 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845165103 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236839707 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003375786 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.131175006 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.562163605 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.993691461 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172194111 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.855295847 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.876560814 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952878713 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93030488 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00919185 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931995165 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.930115725 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196109635 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.915272416 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.913343003 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.70400825 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945625958 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909143468 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.916056213 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.664442033 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183170202 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93373323 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917466178 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.801644691 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.927636434 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972886705 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917801371 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922614801 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.440366654 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637857629 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.918420271 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.493616389 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137002176 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92105528 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.610266991 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028644205 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.998574322 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185805799 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970421702 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.848125454 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.624837665 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.606616075 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912007081 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84814468 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915128813 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922408712 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925306873 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.106591747 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193592145 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956573981 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.615126162 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.953543534 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922099334 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.92033462 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913805757 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.419645966 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.053842208 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.969818391 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950684714 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057115349 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.925731412 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843942217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916075106 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918354427 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911318931 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.911548428 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947283884 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.621522716 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284995967 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171879081 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.520339659 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927171422 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.688201085 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.9701389 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.911853564 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.656933982 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089278334 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.951862994 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925327129 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.923640966 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.692494639 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.620851962 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483069151 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238036942 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215851674 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34974647 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.988011541 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.939184785 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251256414 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848188667 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.472661301 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970682839 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257087181 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856442753 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002372541 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.564334813 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264615962 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928438163 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141239559 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304728701 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.705962568 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058812022 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125700497 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949036738 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.931419602 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868526846 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.438047596 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058293543 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.630373976 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12439283 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26891921 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.648904044 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.039763399 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.915317853 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.611094361 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000195756 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.629692842 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088360583 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.960675548 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.911405874 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401610796 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920972083 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141372634 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264699297 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.944712437 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.036653759 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853787675 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929489953 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926817174 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.917369144 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.914093366 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.799314046 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.169942126 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926490695 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85029911 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.888568127 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213142232 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.815190919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.923627412 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918063936 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214627896 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330174376 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082519102 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.888134376 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.425084047 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926359127 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851576284 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853916979 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.609090117 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.923969445 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891434031 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126546432 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.015702504 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868887051 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.860330348 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991873056 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.173915085 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.931706867 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.189803317 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189681315 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.617886876 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943050818 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.01701537 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.636140393 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.028711875 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.91809092 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155338863 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.670726434 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.145614535 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970007125 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.875446853 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917943934 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131204126 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.920262164 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.878472736 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150401117 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.641144118 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.007752299 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242872375 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993531221 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.906456712 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96450183 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.008754289 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92915405 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00131806 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928989244 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.931129663 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929648123 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965537881 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928564129 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.042451156 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.93123569 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012363799 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.063403861 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.437371019 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.925975383 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19532228 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289875298 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246859685 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974925453 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921176902 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91979083 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85468224 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070461416 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.146455056 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196270865 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.048903709 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.035880248 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944574241 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642626327 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.986662173 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15683838 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195713374 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.817106682 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304879813 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957737308 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.920632377 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933407986 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.133203532 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133718914 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229672718 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064702941 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.866886208 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284135525 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196716523 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.921743928 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922653673 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513455097 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.018040543 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.622537664 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.96145535 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876949806 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197349047 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933228748 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302629402 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94197809 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.077654569 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.696083571 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.659320199 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210367573 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.915200181 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985254003 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194660496 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304094666 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23652783 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990186946 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936592025 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.035739854 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071724967 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.799772601 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925132877 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922651222 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970589894 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.634479254 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930746897 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203486649 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232092651 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.920636532 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.808936318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948206944 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.934720028 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147472629 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198144595 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174755627 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933638039 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927214879 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.738383855 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202969978 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979447175 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857020778 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.928578533 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023981294 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172110131 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944718873 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.377816948 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.633782705 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202521299 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.923681528 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948275864 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.946253481 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.28272574 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249734986 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.453082459 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13326751 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.510288363 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378625335 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219646786 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.929833806 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.94539254 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22628522 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.928199149 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.86442373 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960658052 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.194147026 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233480114 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.997807131 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630490248 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.893449295 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267644715 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48015608 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862132474 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935963021 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.983570111 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.926312048 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.054487716 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937939813 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.813829559 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.943341122 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.702337782 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197516212 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.932180091 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.913253853 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.676730898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.070351407 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955695898 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069596235 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928269329 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.601166724 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.276937373 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18355307 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.873899097 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.930809892 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.930657391 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926570318 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915810025 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.126381505 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.125005284 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203815644 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.902115392 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.96179235 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931790779 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.142493725 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139040753 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.87315808 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064961934 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873553457 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966039081 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.841610152 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.432463568 seconds)
  done (took 1692.795452416 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955822434 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.978906277 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.961865755 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.00873743 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958271216 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.049051179 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.000288814 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.981096168 seconds)
  done (took 57.757106741 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.930976322 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.133954511 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.93929285 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.927878035 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.937656682 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.928569496 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.095189184 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.938427037 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.936615705 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.939588461 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.930803589 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.92384456 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.230601516 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.944562802 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.929423462 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.908401939 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.931387292 seconds)
  done (took 75.379367479 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.931001664 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.985444683 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.951851539 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.941370021 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.876665436 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.934767583 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.716520881 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.923461052 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.920145572 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.139330558 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.55385147 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.971286571 seconds)
  done (took 90.706761284 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.93054818 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.925944607 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.927006294 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.926229233 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.926627404 seconds)
  done (took 11.493880831 seconds)
done (took 2208.509757272 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.177345406 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.13013481 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.145943674 seconds)
  done (took 6.130503395 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.070106541 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.118874831 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.237952298 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.258317032 seconds)
  done (took 10.544449474 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.212116012 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.303379478 seconds)
  done (took 6.371573024 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.315348433 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.93542166 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.303956737 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.92314718 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.927316155 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.926577589 seconds)
  done (took 22.64005135 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.92847249 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.929956012 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.928966848 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.930445223 seconds)
  done (took 9.574881162 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.908261262 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.651446625 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.914625043 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.923588511 seconds)
  done (took 21.255278825 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.675041256 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.691573033 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.671133708 seconds)
  done (took 9.895802863 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.420558507 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.820687872 seconds)
  done (took 9.099341856 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.19429891 seconds)
  done (took 4.05574278 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.063886804 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.239353055 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.407218105 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.437059164 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.526173253 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.590925996 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.233624084 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.162950344 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.367147633 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.352345828 seconds)
  done (took 25.24410598 seconds)
done (took 140.400052155 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.302826052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.163585081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.121538699 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.258877683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.154743193 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.128060168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.14664597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.242462753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.767339406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.7657584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.258880324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.152081843 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.100379586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.161308609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.099991167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.16285826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.150085522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.317449602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.957983133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.15444662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.151128178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.897966604 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.104427205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.908964555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16495046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.078010025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.474104666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.164357774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.111420135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.482487124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.079818556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.306621209 seconds)
  done (took 174.355934155 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.854928767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930492169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.9300692 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931785476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.277779168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.931325451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932800095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930048517 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.165662658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.139578785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931079683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.270704441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.932386152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.930968297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.936184084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.930198195 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.323437014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.930301265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946775663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.950520092 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955208691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.223659301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.957171351 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.284024233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.33785455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955793802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93088819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.959047816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.936479683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946835825 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952293954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930646153 seconds)
  done (took 210.342904827 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.93110143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935484059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.938062927 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.932922038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.937800948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.93208205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.94235028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932164856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.499241418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.497195094 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.942856181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.937461959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.363003321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936622413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.955492524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.936946854 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.945817397 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.941884608 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.947151701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.952271857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.957713599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.686369496 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.95909439 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.671026914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.946749989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.939561381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.937574571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.949587118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.950871215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.950255385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952864206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.936939417 seconds)
  done (took 223.065187329 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.141127093 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.945621667 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.946357715 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.893823959 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.944934695 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.944198409 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.940970663 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.142377206 seconds)
  done (took 19.787552513 seconds)
done (took 629.424204904 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.496664216 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.271441352 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.12853263 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.968471753 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.199992441 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.005648323 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.964958502 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.032077975 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.69651016 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.037881937 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.656887023 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.982766793 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.741067181 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.990793497 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.092778726 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.024393992 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.523869406 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.616524277 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.145554456 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.019924762 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.139310967 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.938900178 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.04240738 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.710068875 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.761782962 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.952004536 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.146661707 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.537131089 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.978065687 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.128916608 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.702242813 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.360266561 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.977439574 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.963034696 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.019600199 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.99975714 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.32246554 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.975374472 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.085662612 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.700845804 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.022433429 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.572042903 seconds)
  done (took 106.50575071 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.936254846 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.933730716 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.9326324 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.934851321 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.935784158 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.934167219 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.933063776 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.932804574 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.933575126 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.933068537 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.934527078 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.936236008 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.935108459 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.935123858 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.934716854 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.933894717 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.935140015 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.937714024 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.933505109 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.934188913 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.936365258 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.934124148 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.936496509 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.934324538 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.935017518 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.935945463 seconds)
  done (took 52.1863307 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.949495932 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.091715336 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.174901018 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.967519697 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.947972386 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.951051078 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.967449147 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.954094889 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.951360876 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.951203418 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.044652404 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.956480443 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.96780098 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.174894087 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.964726109 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.949846473 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.949949621 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.949689504 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.099187115 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964748327 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.969698474 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.954375218 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.968315021 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.961700689 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.950790699 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950114459 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.953968061 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.380980608 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.957810855 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.046088115 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.021221371 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.970987582 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.346145496 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183885059 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.009397869 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.958757637 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.950715824 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.051176379 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.956283164 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.950878074 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.967123328 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.955202181 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.174253843 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.443236634 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.964440295 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.951547957 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.39249237 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.057332048 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.992247075 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.960490105 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.178845104 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.967848175 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.954553523 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.952528248 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.986459885 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.962561079 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.949980999 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.254955953 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.961663669 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.969358564 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.957251993 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.951707496 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.109618653 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.959113112 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.093188716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.961267312 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.959203363 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.953640766 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.175894674 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.968062956 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.443922258 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.964443563 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.952326876 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.046651039 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.10037172 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.417531352 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.963845965 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.111936152 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.355020859 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.975051342 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.958504052 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.378857481 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.978437552 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.958523121 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.954815893 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.970442138 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.95341235 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.996167453 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.968417328 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.384323458 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.451314493 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.268057197 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.978545225 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.967226292 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.952487228 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.256994595 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.961738226 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.953786988 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.169633581 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.459885944 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.965728823 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.959703672 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.432640784 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.969203886 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.971562597 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.961814485 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.181910066 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.968807912 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.996706883 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.953352147 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.960360673 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.957447137 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.971337506 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.96102086 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.95405056 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.421388416 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.068832877 seconds)
  done (took 241.295639415 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.958822425 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.948637448 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.945664576 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.947909812 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.94703464 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.952562214 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.94639945 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.947532019 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.954013529 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.945918521 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.948683837 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.946573094 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.947506538 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.950940648 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.987979976 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.956323378 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.562827678 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.951270399 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.949369393 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.951401733 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.600179362 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.959866907 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.951697741 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.952698203 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.949785279 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.950171928 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.955839922 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.97929723 seconds)
  done (took 169.831176228 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.958563553 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.070635528 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.974552963 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.983664371 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.967643524 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.955341782 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.979331293 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.971683794 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.962885286 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.954915926 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.956149179 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.017528024 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.969364855 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.057735416 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.988592433 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.988239793 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.059524799 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.965288783 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.955864746 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.955740503 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.98541528 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.953048046 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.016429849 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.081631144 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.973883315 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.070950715 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.970507552 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.957726921 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.956196329 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.073332426 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.974581368 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.018637243 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.984286949 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.974091414 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075344599 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.074972742 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.074100684 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.987709911 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.961455083 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.956398641 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.956562548 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.950550726 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.073963771 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.977085985 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.958553763 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.064710185 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.979937062 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.960162876 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968274518 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.95673764 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.971591297 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.981371036 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.024765863 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.088507531 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.992771046 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.983715978 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.987089116 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.239040495 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.971180235 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.058904361 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.952377956 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.077888444 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.978478358 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.946574066 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.960313638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.963973703 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.987100543 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.990220914 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.063125285 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.966732735 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.05731514 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.995716657 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.964153837 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.95881456 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.9608416 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.075700749 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.075617159 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.99438339 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.995895012 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.988455763 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.954496308 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.958189109 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.947705072 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.976502381 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.962745637 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077249977 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.077338744 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.966746351 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.96207498 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.961438504 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.962348798 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.983298282 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.085204995 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.992391242 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.057124012 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.025354882 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.032419893 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.972312519 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.972572086 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.963074115 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.022472696 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.9878908 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.967836464 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.283330624 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.025803333 seconds)
  done (took 211.979953594 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.412786558 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.006570273 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.009423811 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.239188477 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382765516 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.721939501 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.999963392 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.004270835 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.027370071 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.166322439 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.06039161 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.017203334 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.989140215 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.975541927 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.004563829 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.022276205 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.00813732 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.272938433 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.127234696 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.107293554 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.981352656 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.275168807 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.321024033 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.411913978 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.037677531 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.319749895 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.677486083 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.244273254 seconds)
  done (took 63.71443147 seconds)
done (took 847.383720543 seconds)
SAVING RESULT...
DONE!
