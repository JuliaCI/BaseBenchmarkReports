cset: moving following pidspec: 3703
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.211735228 seconds)
loading group "string"... done (took 0.586147445 seconds)
loading group "linalg"... done (took 8.032936702 seconds)
loading group "parallel"... done (took 0.173294851 seconds)
loading group "find"... done (took 1.284305052 seconds)
loading group "tuple"... done (took 2.002795827 seconds)
loading group "dates"... done (took 1.332598882 seconds)
loading group "micro"... done (took 0.202678363 seconds)
loading group "io"... done (took 0.959149504 seconds)
loading group "scalar"... done (took 40.088229546 seconds)
loading group "sparse"... done (took 12.324276595 seconds)
loading group "broadcast"... done (took 1.004326668 seconds)
loading group "union"... done (took 13.885572714 seconds)
loading group "simd"... done (took 4.821977353 seconds)
loading group "random"... done (took 9.40008255 seconds)
loading group "problem"... done (took 1.715772045 seconds)
loading group "array"... done (took 21.245527239 seconds)
loading group "misc"... done (took 1.684463207 seconds)
loading group "sort"... done (took 3.396765718 seconds)
loading group "collection"... done (took 18.064630862 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.541725687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124372598 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137481124 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120405199 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149869392 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117598592 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125016114 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084325601 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.920774239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149151246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11387577 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414346555 seconds)
done (took 5.443895681 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175622283 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087778851 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079266478 seconds)
  done (took 1.284722914 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065497456 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128081544 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066763472 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067973965 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070936593 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06865246 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068419346 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06844183 seconds)
  done (took 1.65628808 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073495016 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069247962 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066428607 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068503614 seconds)
  done (took 1.395107119 seconds)
done (took 5.703267081 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.790091068 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210650602 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188813476 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408055016 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131739436 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180064223 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649699384 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324162835 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194258828 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094669753 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113204799 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391423269 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126063178 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653596848 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080937853 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095968791 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145045574 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.4444327 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070658162 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085335417 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092973499 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131413339 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.081746329 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077707538 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151906684 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071139594 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139007432 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083516222 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068796702 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250055216 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175745916 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665874818 seconds)
  done (took 10.52372639 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101355491 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099451608 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068948562 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12524118 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094216891 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070171286 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075547936 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068166776 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089112604 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124947622 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091107842 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107793566 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06700237 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070447041 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083816545 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197312935 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079897517 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08127172 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07175455 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080764351 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112184312 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078739177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080056981 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080116597 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129040259 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169350728 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096858489 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098495431 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066996431 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082021318 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11598793 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12696409 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066553847 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067265445 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120844644 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09486919 seconds)
  done (took 4.593534881 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.908113581 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151417187 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09054129 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13005419 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06578953 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109938156 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.118052016 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06666086 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084614479 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236070908 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.383911609 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.626770204 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122242905 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116994241 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104100211 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071037329 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072184969 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068458325 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207279003 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098090552 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102294925 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080949762 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072322802 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068931117 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06518395 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071786778 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064513661 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070901642 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087847173 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076485605 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.330009435 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121925312 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070539372 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.95966719 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168910122 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068932528 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105898243 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162863795 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0932662 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138953574 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065958726 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065054596 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162088304 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063855253 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.068053613 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.217903925 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084410498 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109354187 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120795726 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066298122 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067738379 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16733749 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065064917 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078900658 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.19459678 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152730735 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068713143 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298464355 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092943646 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069746768 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066188215 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181455142 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116405066 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068746734 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068057144 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067292753 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068770078 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36478088 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067354906 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.935374647 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07164384 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076719438 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068733234 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069593536 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078822949 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078957727 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091839818 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067538311 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074320649 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067433778 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06695073 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065324461 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067046796 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093334681 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.386669881 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067313954 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07226764 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065427414 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092694077 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098563218 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066908296 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069709855 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102365473 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064469238 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070612395 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066432213 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06817462 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119240123 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067820784 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112847754 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067273762 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16350287 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097381454 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070009367 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101530188 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078281925 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071614376 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.460963634 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066198667 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073412071 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06686322 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067895624 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067318911 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065104546 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078507148 seconds)
  done (took 21.75026551 seconds)
done (took 38.893007979 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.250633191 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083151318 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08373355 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086808682 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083267796 seconds)
  done (took 1.791345135 seconds)
done (took 2.97459314 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126498128 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099916149 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066282139 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100649854 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066588234 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106514574 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10318807 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086030203 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102645838 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066667843 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100127598 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066996264 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066834412 seconds)
  done (took 2.363139689 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082228218 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083559087 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0712042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083651393 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064160637 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083999392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082901195 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08991303 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082573411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074072 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063823186 seconds)
  done (took 2.043595403 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082203921 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083790276 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06990348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081896783 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064185638 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083597685 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082540448 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08709351 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08345325 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075055554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06410301 seconds)
  done (took 2.033887795 seconds)
done (took 7.61407259 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075985349 seconds)
  done (took 1.242336357 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.537251244 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.625789443 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078692346 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100171302 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192892873 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108763047 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236990457 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083706793 seconds)
  done (took 8.306779274 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09569052 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069356903 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081597225 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070451802 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070353985 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069726667 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070903412 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070462216 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069957488 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07103758 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07013375 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068930354 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069979437 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070141844 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07057186 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070882324 seconds)
  done (took 2.411854731 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097427209 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097000695 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073971761 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075456377 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072902012 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072380816 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.0754094 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074202704 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07172817 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072966209 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07599139 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073739472 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073494695 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06500972 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074888038 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07632835 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071535448 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074856621 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07546401 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075858358 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075995816 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06513119 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074059566 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074913401 seconds)
  done (took 3.087854826 seconds)
done (took 16.224007622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105541304 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068188151 seconds)
  done (took 1.348521445 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078496383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079379754 seconds)
  done (took 1.342429929 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077597142 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062541562 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083926721 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073799456 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063505831 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063265619 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082958518 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064458581 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064110452 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063876747 seconds)
  done (took 1.885256021 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065753784 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072954157 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069976114 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079486382 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07072303 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064951862 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069019762 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065694693 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073369226 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063717025 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068396009 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083625157 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06857552 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084807337 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068814051 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068170916 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070221744 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06710951 seconds)
  done (took 2.462425529 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063680511 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064149047 seconds)
  done (took 1.317730238 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066590757 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064118003 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067432405 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066214071 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063544811 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062845384 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063884751 seconds)
  done (took 1.639992475 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387984972 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121633463 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328119559 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070589581 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081068223 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.238722125 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0652834 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070019702 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070408858 seconds)
  done (took 2.661104722 seconds)
done (took 13.847800909 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081218606 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085814731 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097005722 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.39235457 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092807353 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068162102 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114153519 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179650521 seconds)
done (took 2.30869417 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219291139 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.802182346 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.489452525 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206521213 seconds)
  done (took 2.690924737 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333190912 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079127685 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077905119 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067018416 seconds)
  done (took 1.755408233 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065805833 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071614653 seconds)
  done (took 1.331595507 seconds)
done (took 7.191833377 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065538804 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08987475 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065111768 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064962354 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064455949 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.065200343 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.180854232 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.065170164 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065557255 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064899666 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064928099 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064723057 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064736418 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064602788 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064768154 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067056108 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066830473 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066462349 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066640484 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066848074 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066500814 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066349916 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066443195 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066441539 seconds)
  done (took 2.943042938 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082519399 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067980355 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069259756 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068499425 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069353381 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068685843 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068728042 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067724502 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06900451 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066922138 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069190056 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069681309 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068231542 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069455024 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066929643 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06912678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069179097 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067100262 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066834337 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069182256 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068841914 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067015283 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069151605 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068507025 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068863831 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069171495 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066579294 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067066821 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068541186 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069112466 seconds)
  done (took 3.273440192 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065393754 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061417072 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062543347 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070642133 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061105567 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061875934 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061129202 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061553034 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061995136 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061204261 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062495123 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061056326 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061734473 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06217191 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062130744 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065651319 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078732038 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061533338 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061167722 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06185336 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065312508 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061296493 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061786834 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061042099 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064187063 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061249192 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061647791 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.060980193 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061958487 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061242032 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065475132 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066165391 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061300599 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070352547 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065605206 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061536151 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065773486 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061413879 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062253798 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061642908 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061192335 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061264472 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061640639 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070298371 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061713177 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062835795 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061275657 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062442022 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062151037 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063836914 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061422005 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061236884 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063127637 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06255367 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06627065 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061010772 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061905931 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060895681 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062190271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061568846 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060970747 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061435094 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064367 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061687708 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078729343 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06997822 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061233073 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062684621 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061591538 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064587972 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062535489 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076592272 seconds)
  done (took 5.775817743 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085920688 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088081703 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066639882 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067262269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063644319 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06369385 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072137056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06315126 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067177618 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081649574 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062979125 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068526884 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067916444 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067396921 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062264839 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066722502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070982444 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062426329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061786061 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066252512 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062244179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070162205 seconds)
  done (took 2.73078473 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146213375 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068647483 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105725863 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072623492 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070692124 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072843699 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06798504 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067840879 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069665353 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070233789 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070472369 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069905505 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072246904 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069949693 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070200435 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070257502 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069611733 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070157221 seconds)
  done (took 2.586727277 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079250369 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067050204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087566489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068337993 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069230317 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068332336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073276634 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07388187 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069039932 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068789774 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072318661 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067455931 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067568022 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067472956 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066915345 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067585599 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067248547 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06729702 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072054932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071553557 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071189365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081361916 seconds)
  done (took 2.777209469 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078528403 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066155578 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082946666 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069620329 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06201521 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062231944 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067784704 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067119333 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067791993 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066033206 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067185619 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061928006 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069254581 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06707993 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069008394 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066821909 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066067842 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066826241 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066487666 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063211017 seconds)
  done (took 2.568071952 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083715244 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065375255 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065044924 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071354528 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064975822 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065201871 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071314896 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065350826 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065319741 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085729039 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065658195 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065691693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071274325 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069015299 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065650058 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071712486 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073988462 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071620158 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065349321 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065157162 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085770592 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065295733 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072065914 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065054734 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065520751 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065270561 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065073239 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069546093 seconds)
  done (took 3.157900053 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065147799 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064706571 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06451846 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065311774 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066211192 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066789255 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065737993 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066524949 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066198082 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066590843 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06447152 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064718777 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064714435 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064659041 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064895392 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06526138 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064771817 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065336271 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065137757 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06510074 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064742743 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064486126 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06446143 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064960438 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064759447 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064584993 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064992782 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064864741 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064664641 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065008079 seconds)
  done (took 3.174157774 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075944373 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074188244 seconds)
  done (took 1.36998275 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06374487 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079354822 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061336596 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072409365 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071322037 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065616647 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071644617 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071185447 seconds)
  done (took 1.772545291 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085541272 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075184211 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06477643 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076526748 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074962305 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085047428 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126106519 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064296552 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074459553 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064759361 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082808244 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066665506 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074419227 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069110558 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074796876 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077814476 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062157866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069134193 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064998204 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062215774 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064494837 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077255987 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073617337 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062283469 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06938362 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091270998 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080095716 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063102295 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070830675 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07613918 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074164113 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061535965 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063615218 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064109743 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06189766 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074888369 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081841525 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070640438 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076484346 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06462798 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071977418 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061887191 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073047643 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074773053 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079972786 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063797323 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064100073 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061554089 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06456441 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069533292 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061854907 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068028949 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06112248 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075736092 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071853675 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078868769 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062610082 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069431426 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069919623 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070476832 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074662468 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07002623 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073179969 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06313523 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078863106 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073100806 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075030923 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062134879 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060589931 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061784122 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077190506 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091840637 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073405409 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064161125 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064715019 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061705674 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070957423 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064061048 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072834488 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075541283 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063267258 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067975045 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075718122 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068430102 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07006717 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069777165 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062321297 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067014298 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064577794 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083828705 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062228287 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061655433 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064700339 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0784797 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072703147 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063152111 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064525533 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074680585 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060417238 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063225862 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064134564 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069020948 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076518892 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067302893 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068165745 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076652076 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072079497 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068696457 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070514833 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060779514 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065130988 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065947061 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074735365 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060585585 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070864925 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067904835 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063700915 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075348303 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061978538 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062784344 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075517995 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074216991 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061533751 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06042628 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069848402 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062612944 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065587665 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076432992 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061221279 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061095663 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061116244 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070139442 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.061864189 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070668214 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065934929 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069315976 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.1889768 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063209946 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068675934 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076202671 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067431309 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069455034 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073692173 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070392199 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06294419 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076962427 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071242366 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066594265 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07348864 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068582775 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062417583 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06660483 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07048914 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062999872 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071465724 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065910142 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071499665 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063772492 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06245881 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069315307 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063854337 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065855121 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06872845 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062858772 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079411534 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070753347 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061675536 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061582465 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071412575 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067045801 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06522048 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067876664 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07257967 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065722952 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063401263 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065165542 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071302501 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072793548 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066356823 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064719978 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073533066 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081110681 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06361968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071284504 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063595088 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064372862 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064526497 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07772519 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073848788 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06797906 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070296135 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06084083 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0726387 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076218506 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066056915 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061840873 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066376434 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067321958 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075426231 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067340104 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064308734 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062547493 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069734676 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067653354 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070956583 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063081764 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066289349 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068613522 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062308435 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069745152 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064190594 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078175333 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071592641 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062177867 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066053732 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062624597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075085971 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061839267 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065144986 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066583423 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064380905 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062973266 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070517819 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06112061 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076181009 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076118859 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069605831 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066233297 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063719361 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076025397 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06952252 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071778117 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071084801 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073607478 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079600429 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066218761 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071038124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080221719 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064512277 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061074182 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072985683 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064963209 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0625695 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063189858 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06247774 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070762278 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071007935 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074095528 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060902851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070541204 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062034693 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066007856 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062169951 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072053795 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070897119 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0678503 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075632806 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065276094 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06423788 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071172982 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063639703 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063595489 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063951718 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070578507 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063125674 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069153482 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065435943 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068472153 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064612767 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060790607 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068463132 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062531744 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068295482 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071214118 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061848036 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068268436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068916348 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.193983474 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072083791 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068182406 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066532535 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071895412 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069468107 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068503404 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071932987 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063857901 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076977657 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064990223 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076779006 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070555733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062517107 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071370696 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071169218 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069778094 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064584088 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064651728 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069419049 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06415229 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070870073 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076369535 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065356058 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079417841 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075249385 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069488002 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071071846 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069018124 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069003706 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065980756 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068354371 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065433647 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070114947 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063931007 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072592028 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071635549 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069709685 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069945033 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064095644 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069509018 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064973148 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061935339 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067319882 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06650198 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063705362 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076631475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064007811 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067038592 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064004378 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066433037 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065357991 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062727371 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07240202 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07341377 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065078368 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075362299 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0661617 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069762837 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079577096 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06146493 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062447677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061887143 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065321119 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076070749 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06427165 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077461858 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068988964 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066926863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061724163 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06437777 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063357196 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061752192 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062889121 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072447265 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066243965 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063179798 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063916919 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070890722 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064495547 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076665972 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063823659 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068023382 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063903926 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061446673 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066602007 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066167557 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070695225 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064382698 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065299144 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061571031 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063697274 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067948452 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070008919 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063585259 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0696724 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075999327 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063581192 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070626919 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065957733 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061798714 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070466824 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063289662 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063501052 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06641752 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071386911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07111182 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064041428 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077572123 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063237468 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072225647 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06347577 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061889514 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06290993 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063206593 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063982652 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06567239 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064564092 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076489815 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06146878 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069551162 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06878217 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067612638 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073482506 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064193702 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069556728 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069121492 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065250393 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069493993 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075996832 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066619402 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07028198 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063560975 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068364041 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072690457 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065230187 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074266121 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067991626 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06305685 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068453783 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064313461 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06230741 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06236597 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061613433 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.207490984 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065682094 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067028371 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067771184 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062888159 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067985371 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066240948 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077737761 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070682955 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071607847 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062593753 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061347886 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064434842 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064974749 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070004488 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070914576 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073813859 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070964495 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067727486 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063966442 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078903612 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07424082 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072127179 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065872332 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072184662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064786182 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071358227 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068477277 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068708955 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064601489 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073054301 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072355277 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069200729 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076992946 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073528861 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066833371 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071386109 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072211196 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070781739 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063992919 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065685907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072633493 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075230089 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072915612 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066116234 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08165079 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066775054 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070699212 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067663921 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065058334 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074135793 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063972527 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072328288 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066183482 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066120226 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063555452 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06779191 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066584763 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072762578 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067693838 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063534367 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08149774 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080140531 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071950481 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065140281 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064430286 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063865848 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063692051 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068665783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066547934 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071524655 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080863569 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068136878 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068420446 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064183833 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065779047 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073230585 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073810326 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063914683 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064408097 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068643064 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072350628 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077964854 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064408515 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065473271 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073018332 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071887278 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063815595 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06850096 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062768893 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073908178 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083180606 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066235296 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071511138 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075771977 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078611343 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065699616 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063706836 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065758687 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072006359 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070274114 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064789152 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064347287 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082918264 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070992974 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066539949 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062819216 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070327964 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066597337 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07979641 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066837519 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065938251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07441686 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074753743 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072971975 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075303461 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078744804 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072407528 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07181981 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064901968 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070699435 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063633181 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066483784 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06572914 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064397488 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067956421 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070954067 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066391363 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07916218 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077296615 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065881146 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060918951 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066317462 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067493749 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061997379 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064187759 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061459076 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061849289 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061825096 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061988879 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068500847 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07159757 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067168214 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062589599 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.196773314 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062339154 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074560283 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071212751 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070495703 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063102582 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065387142 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066331903 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073919178 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067381043 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06567288 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070195724 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070023298 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070755238 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061879646 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075522237 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063739836 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070272771 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066922157 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064299686 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065499035 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071420865 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068412951 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065837789 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071026235 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070635883 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065463818 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062200818 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062109288 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073645637 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062377309 seconds)
  done (took 42.639252554 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100747826 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064722478 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06402054 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064113125 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074835211 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065710076 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064303046 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065428774 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065548764 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067399497 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0643426 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063885149 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072001737 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079736807 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074527894 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069216926 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064154758 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065828493 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064227023 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065310093 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073037512 seconds)
  done (took 2.744905353 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070593158 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078125871 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077987631 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08184044 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073057416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069504913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077894351 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069303528 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076688449 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073061747 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075326427 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068053293 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072835659 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072891912 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072836653 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067557305 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075367099 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071530787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067673574 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074937361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067486479 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075047632 seconds)
  done (took 2.891879628 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064267768 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063323703 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07071137 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062171937 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06339593 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061968212 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066026969 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061783601 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066796411 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066323285 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066117962 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.0661211 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070231911 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061720931 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066585512 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061340376 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108492135 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066439357 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063761116 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064666705 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061909273 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070752179 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062111427 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062612945 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066007899 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0660777 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064833158 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061893471 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063713931 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065864601 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063787458 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061732475 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070035944 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069410482 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06638434 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065508436 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063459848 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063847007 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062088601 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062354077 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069443484 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062704259 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066693951 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070197564 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062049798 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061794933 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070069659 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063450445 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061741492 seconds)
  done (took 4.509454797 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075131942 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110666494 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068479107 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091405139 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07659604 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069531621 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068070738 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092184464 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063755156 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064660585 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077832429 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07880728 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06617989 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067534112 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070420187 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065450391 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066572436 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065046127 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068641646 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065695961 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069123695 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070307405 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079640124 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07941545 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068452897 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066904077 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066914095 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069757988 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078826907 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071246787 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069774923 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070560462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077930766 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070456596 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064804382 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065404379 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078330025 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066163647 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065182339 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063553785 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06496656 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066905215 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070010107 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078094583 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065691819 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070671645 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066355497 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063372924 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076719226 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065082833 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070525418 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077945605 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066244276 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066265081 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067341057 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077149151 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066187992 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063916924 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066304668 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077151474 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064210938 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066787482 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077822131 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064916703 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069515129 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078146257 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070994723 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066468207 seconds)
  done (took 6.256342909 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07336793 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095436227 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07968446 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08082627 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089558967 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073332206 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073696849 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073756651 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073214723 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077324433 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073460372 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113556307 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06920408 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075066219 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073094209 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073320335 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073373786 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073637422 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073281088 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073276502 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073199467 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07948609 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073657949 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07944568 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076774203 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069044428 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073689249 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073386591 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079875916 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073254152 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077216774 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073902856 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073423659 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079810034 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07683894 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073945064 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063348878 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072971336 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073369306 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073173149 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069429292 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079664463 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072983764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068804914 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073621884 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073186824 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079260335 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076600818 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075025892 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077147543 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07349757 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079420607 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073094609 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073234131 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080042396 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081784094 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079156867 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079279328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073239006 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079353394 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079486461 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082474693 seconds)
  done (took 6.04646308 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078440506 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070864571 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081676756 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062639172 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061981329 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072450791 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061984006 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061815964 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070562804 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073554605 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072525645 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072415027 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0747707 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072484209 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07204569 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074860294 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072722799 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072417216 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07059256 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072231592 seconds)
  done (took 2.756988688 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07621013 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081805182 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067875164 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072285868 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06805874 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072139023 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067833404 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068060361 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069608827 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068257933 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073927149 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073981409 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068844199 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072667783 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073415195 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072233284 seconds)
  done (took 2.463863281 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084255197 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071260914 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077936756 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063883152 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067459976 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06323887 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063597806 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062301666 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062734421 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076348947 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063675869 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074843126 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063727002 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062670958 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063152839 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069260568 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063285388 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063434762 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063548644 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076717444 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070412698 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06492185 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067613128 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063479651 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069047076 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071059071 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06513043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067867324 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065337422 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065713414 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071214119 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072525911 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06496722 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065943235 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064132418 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065100699 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06517317 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065665122 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090090855 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064976842 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063526383 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070300201 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065559481 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066036053 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064196316 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065649203 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064689161 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071764783 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065425824 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070752677 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064912646 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067338167 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066380233 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072217663 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065934414 seconds)
  done (took 5.040355329 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079368466 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068219961 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061783484 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061691497 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067089647 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068267581 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067569358 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068175958 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068563219 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062120956 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068269964 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067667359 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068555511 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068152268 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068543545 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067679449 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061902799 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06755171 seconds)
  done (took 2.543628927 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072754621 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06737415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071661038 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067760057 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067652048 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067867182 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062824904 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062318617 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062160338 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067014353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06734745 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066967741 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062498478 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066408357 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067433744 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0669743 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066620776 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062067546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067034222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06221661 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066468008 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062873001 seconds)
  done (took 2.777402102 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095752124 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083641913 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.129932467 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079557269 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086339189 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071971835 seconds)
  done (took 1.871017513 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092686318 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098114929 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067364593 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068661006 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073738013 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071973418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072373295 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071614419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075793937 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076164649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071033003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076072072 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075394229 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077455382 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072984454 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07323711 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070854069 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073933042 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06824471 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082358075 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072765794 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077154787 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072881422 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072709308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072555978 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079260346 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077834954 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077710865 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073481148 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077167445 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075043291 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073347071 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076480058 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075708901 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067849439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075030614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070892915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082784078 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075069881 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07809323 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067643741 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072790626 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075135176 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074533417 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075328147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070605738 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074402531 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070859875 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071078294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081670058 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073145575 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077111061 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07298842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075239681 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074995907 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081800509 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075440399 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076961405 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073161431 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075599833 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076853012 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072451717 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076552103 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075183137 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072805993 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076553858 seconds)
  done (took 6.279528061 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104329653 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068527207 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070996029 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075677097 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076797038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071216948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071129309 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071514387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071116265 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06851884 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106121325 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071547171 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077470824 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077539212 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0711158 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071479291 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07092074 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077312421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06801109 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081883481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071328639 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076845059 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076831966 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076988126 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075601155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073107618 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071212709 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070944362 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071854529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072907197 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076806873 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072226481 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077660887 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067927361 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07697529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071016279 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070626972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074584985 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070926997 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072929792 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077082003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082410216 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072148433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072831072 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07760009 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072407444 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072914337 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069283738 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072800346 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069333396 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077164748 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078086321 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076665214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077371092 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07238783 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072194089 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072934824 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072342262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072424907 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074740734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078456486 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07414628 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082991947 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071089174 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070919388 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076755248 seconds)
  done (took 6.278221432 seconds)
done (took 128.423729526 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208080925 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184620862 seconds)
  done (took 1.70350061 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073454154 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10337709 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083392337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133381957 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071298177 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104860424 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103758942 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083415502 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071684973 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071106526 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071505974 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073370786 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136222428 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071656537 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071243069 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073591837 seconds)
  done (took 2.725907189 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104080246 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166632728 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108596361 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069200218 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104101814 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077140133 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069714228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082052097 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075965965 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071222356 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077295856 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075993938 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070932242 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077613039 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07590693 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076944995 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070950623 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077760126 seconds)
  done (took 2.864643219 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103987605 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095460387 seconds)
  done (took 1.535388444 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.170972217 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133845519 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.196002108 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33959047 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.149225969 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.413737722 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138683413 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139894633 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113948245 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135508637 seconds)
  done (took 3.262779727 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103624011 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168493111 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296727829 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120358623 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075720715 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091236046 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121521787 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081786825 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084047007 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083467002 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083130281 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078329996 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102429723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076636788 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075773124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078329829 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105967442 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07457802 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075530945 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078960162 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106168179 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069902645 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076704348 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074628505 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081875871 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080647829 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070975429 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069653918 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078100463 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075367124 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079267205 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087488006 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080482072 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10595784 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07382699 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106989683 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075735535 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076444339 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075528111 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076034518 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079767107 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079764271 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07787732 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07761251 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07052279 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075951713 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070926069 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07006353 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080251622 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070990423 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07987572 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078757389 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1056845 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070615113 seconds)
  done (took 6.122960373 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109196389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10695424 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071354505 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112480559 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103511761 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070475689 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105729724 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098646287 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107018779 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070611557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069368361 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07125085 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079508202 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081178315 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116148062 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108141004 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073154702 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07026209 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107696746 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107098957 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069460137 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101324728 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097977146 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106949033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069096278 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070724047 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069248244 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07084224 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078187677 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08006403 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071233989 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081584263 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086757399 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077126121 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06808978 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068872435 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069036203 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078371422 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078880407 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078304821 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07619469 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06848621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068919976 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070088275 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069439376 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06797012 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077021485 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078344664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077030055 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06871329 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070292409 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068828022 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070038387 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078190927 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075845237 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078647066 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078201773 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069230218 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069219325 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07226183 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078995857 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07781114 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07806976 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070344812 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078129672 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068916006 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078820221 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082248171 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068794464 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072701524 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06887815 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068821408 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070385553 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076186644 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076220499 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070394212 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068920236 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068576468 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07805667 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076512541 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068683975 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075821088 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068129711 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068770867 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070157647 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069874921 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07590573 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07798492 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070335126 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068990756 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068994161 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068573804 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067864473 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075247065 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077739574 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07712514 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077228342 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069872397 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077719733 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07652774 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070207494 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077298799 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068640596 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070458317 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070075209 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076627797 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075819941 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077600256 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068117676 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068420004 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075708812 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078461894 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068706315 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075458039 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076831246 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075635724 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067203209 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078083609 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068019516 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076630741 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068132054 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212429502 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069939978 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078850704 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070122764 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068333392 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069340563 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078408095 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071583288 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069512512 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071214167 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069188355 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.0782896 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08112826 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070970263 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077578454 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07713263 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070895811 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0778215 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070350082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078009075 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069009039 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070994963 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068181152 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080013065 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069769723 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069019927 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069131044 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079316311 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069121164 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078792078 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076149199 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068391759 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080901938 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080050456 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075810283 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079265593 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07067586 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069310172 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069146037 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069419223 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076265708 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07830691 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070831507 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069093498 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076463388 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079055299 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068474467 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076968391 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076795605 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077186989 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069710327 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069463917 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079684651 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07986446 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07728293 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076891507 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077332751 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069686675 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076600972 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077205265 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069095052 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083063052 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069284052 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081009266 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077599065 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075655081 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077814311 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078734696 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078734223 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078941083 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081517701 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068587478 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069081265 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07745573 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068734055 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068970931 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077027057 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070710484 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070719301 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081530933 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069495793 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078951027 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068139333 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077442186 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068469024 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07001147 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081739011 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069229477 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070776843 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077591848 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069284307 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076714907 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079165435 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077127891 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068955401 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072790935 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077742253 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078071212 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068882299 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068822006 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070462919 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07653724 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076324221 seconds)
  done (took 18.462152676 seconds)
done (took 38.022484031 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204440975 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152511087 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18254976 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113919998 seconds)
  done (took 2.085054585 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107225125 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098173364 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087212371 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065750233 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093363815 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065472094 seconds)
  done (took 1.88454231 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280825257 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194543967 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177208957 seconds)
  done (took 2.015982349 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207990195 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18860337 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446270584 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285694952 seconds)
  done (took 2.585196188 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140366858 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082443183 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064249495 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082449232 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123604233 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149502533 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092681302 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117151115 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075466407 seconds)
  done (took 2.34546 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144956437 seconds)
done (took 12.443698839 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.208926622 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.241789946 seconds)
    (3/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107352024 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109323909 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072296277 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069102749 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.178641732 seconds)
    (8/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075005392 seconds)
    (9/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.250238179 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097901913 seconds)
    (11/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.132022818 seconds)
    (12/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077782512 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092901089 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091315506 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228073352 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076507819 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09820981 seconds)
    (18/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088951361 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.212595904 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075144012 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075175014 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19818409 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074625524 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.203861562 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179381069 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084253134 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.455837829 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.153699016 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128614299 seconds)
    (30/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074216215 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.226949856 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112497457 seconds)
    (33/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065459447 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091278345 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.204553728 seconds)
    (36/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.126023351 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.209339086 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191120104 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194693208 seconds)
    (40/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093277184 seconds)
    (41/309) benchmarking ("sort", Bool, false)...
    done (took 0.156563642 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066556652 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088466274 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092954122 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076609568 seconds)
    (46/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066770041 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079167828 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 0.06900778 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076911543 seconds)
    (50/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171472732 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08387423 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065228492 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074260905 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072503511 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071396078 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065978343 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07484428 seconds)
    (58/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214070809 seconds)
    (59/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.136142563 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064690485 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065853437 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164848414 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124549269 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072689334 seconds)
    (65/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077095468 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116949709 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066539173 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091354898 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076631784 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086575525 seconds)
    (71/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.157298806 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073362594 seconds)
    (73/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077053654 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16814077 seconds)
    (75/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.169750037 seconds)
    (76/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138800471 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076573873 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065441839 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.122822046 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065415029 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066347399 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.161564635 seconds)
    (83/309) benchmarking ("sort", Float64, false)...
    done (took 0.129945268 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069141665 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085865009 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.172501443 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129336825 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089558622 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.083042388 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09372575 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064899929 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0776175 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065182577 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.065293803 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.232062395 seconds)
    (96/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076047141 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06893416 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132299871 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074187956 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089076239 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072401151 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074501192 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.1437202 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090218153 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068172494 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076155318 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075879152 seconds)
    (108/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093472467 seconds)
    (109/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136494824 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074946913 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066837618 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178647933 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074627833 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076807641 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180691044 seconds)
    (116/309) benchmarking ("sort", Float32, false)...
    done (took 0.132689307 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082250537 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192905971 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.170405534 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.08290538 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065765829 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17852469 seconds)
    (123/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069219543 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213756228 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075777895 seconds)
    (126/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178821997 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076017099 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074556153 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.183407189 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077607788 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069544363 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07431752 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066011995 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074040326 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066347131 seconds)
    (136/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136796517 seconds)
    (137/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065427508 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065240252 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128523485 seconds)
    (140/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066041218 seconds)
    (141/309) benchmarking ("sort", Int8, false)...
    done (took 0.157313681 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075214744 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.192058169 seconds)
    (144/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071114421 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06573591 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.118251781 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078725457 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078435663 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088098442 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065435946 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066793461 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074137552 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090907375 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135541742 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067907884 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074569068 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141360689 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116993052 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065288024 seconds)
    (160/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074477345 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07514411 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065038817 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064742017 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066022822 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073878735 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065874909 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11831826 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180344645 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.239138125 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074532099 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068823442 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065349514 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066031247 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120139047 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065476688 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140335355 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066024349 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069627095 seconds)
    (179/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.178022498 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065632169 seconds)
    (181/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076432283 seconds)
    (182/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.127741561 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066068938 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072110468 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066571748 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169973252 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.140758528 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066918297 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065992155 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.226504836 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068514105 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075029688 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06539574 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086764596 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120441471 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079592838 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065775929 seconds)
    (198/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066510219 seconds)
    (199/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065411628 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078369756 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078344308 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065885224 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072623968 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066915725 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.165170134 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076131364 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109727065 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066414264 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071941211 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067820891 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089217337 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06592096 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071937861 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088036096 seconds)
    (215/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.234740789 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070715536 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135048373 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088785957 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135982369 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074647036 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077412769 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068352757 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067081239 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136047655 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070061203 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065056731 seconds)
    (227/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087812135 seconds)
    (228/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215636417 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073890144 seconds)
    (230/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066694676 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067719791 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134192798 seconds)
    (233/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172201432 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086787682 seconds)
    (235/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067999643 seconds)
    (236/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194947257 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066602173 seconds)
    (238/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067004228 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066251728 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169830463 seconds)
    (241/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066989707 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072877465 seconds)
    (243/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137778881 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069254864 seconds)
    (245/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070798921 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070775532 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.069678473 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.07812061 seconds)
    (249/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06712212 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064825704 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069480085 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066459889 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065937472 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078614695 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074274822 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078813143 seconds)
    (257/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065998187 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069105904 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089534071 seconds)
    (260/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068556847 seconds)
    (261/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067663339 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065596961 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067401658 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074553608 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086874074 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066404688 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09085221 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075059677 seconds)
    (269/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06735291 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073043719 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066323888 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066407148 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072576934 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171269048 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066484802 seconds)
    (276/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06734156 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06620253 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067210302 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176274562 seconds)
    (280/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066903993 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066017613 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067306005 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075463655 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092915886 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135995078 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.0667304 seconds)
    (287/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066060557 seconds)
    (288/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065904048 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065483947 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073997661 seconds)
    (291/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07803623 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066377895 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131174533 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067217699 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072864277 seconds)
    (296/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065903144 seconds)
    (297/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070553931 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078046716 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10816326 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179850253 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069268279 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078063495 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065929798 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066701098 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065570317 seconds)
    (306/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066853683 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066041537 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11849674 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065679478 seconds)
  done (took 32.730030357 seconds)
done (took 34.104284894 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087453932 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09897123 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074438492 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09396214 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082153049 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096111927 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07440252 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079299429 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081763305 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081008085 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079539217 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071992423 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075374338 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075024224 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073104681 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096452736 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079759562 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073899615 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07393371 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065730537 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074340657 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06636647 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065534391 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072330678 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077876438 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073580224 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076957109 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077279168 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068056201 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068393774 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072623883 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076954773 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067594162 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079049334 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074971264 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074660734 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075682398 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078535452 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065703481 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066339872 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076401039 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066114329 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073901028 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072488673 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070966946 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073068973 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074329771 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078889088 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096448217 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070237063 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076070848 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076641078 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077895005 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071229125 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070835789 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07411127 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071932694 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096496285 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074311269 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07024172 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07557101 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075494416 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072556164 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074183461 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075046509 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076667133 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078515829 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072302001 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076126639 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073192394 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065411834 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073655324 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070558078 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065708986 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076686237 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078514583 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064930879 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069843245 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073832956 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074080472 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065731785 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072768522 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065900086 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070900625 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070506725 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071788169 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070880897 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073134883 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065429506 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074528537 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073359362 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074234399 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065352357 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078553552 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065912971 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071703006 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06602267 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065963475 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065109228 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070931945 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065553347 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069992705 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074518752 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065063132 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070497298 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079561332 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06592801 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073311677 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065354284 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06628406 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077322983 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075873431 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06590038 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070228089 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065286169 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070967755 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065260735 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065650691 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065708714 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065252558 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070182043 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065722458 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069609157 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070873826 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077806303 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065313931 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069833805 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069644237 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06571606 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072036564 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065611611 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065858322 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065018102 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078790606 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069755909 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06571784 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070592852 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06951239 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073077167 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06447821 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073466926 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070913611 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069263343 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071308982 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064259896 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075995847 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069691178 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069039848 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064472339 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065230467 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063898727 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06419052 seconds)
done (took 12.519010168 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069067384 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117244715 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095787024 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095964859 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085275513 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069004516 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076089106 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095358206 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069618508 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096036439 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08788992 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088172693 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108913864 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065541796 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066424399 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0675668 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065326834 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079830561 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.095317667 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088016421 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105441126 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066631241 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085782338 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087138101 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.082800748 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087612063 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067985676 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069878891 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071343544 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092221665 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094274134 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068728414 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069816088 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09476178 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087346552 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082953004 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068498306 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.077377243 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069324998 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06790263 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068732728 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.089144356 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074442753 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074725404 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067647909 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067848329 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067533386 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.077840758 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087226477 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075027028 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081940528 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090365768 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070381668 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066956735 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066084319 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.077482168 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067108222 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0683326 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067127821 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067192844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06680552 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068786492 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.074311215 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075279889 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070854008 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.076506103 seconds)
  done (took 6.60851046 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084272352 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093422439 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083710925 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083320273 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066260957 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066801063 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066659078 seconds)
  done (took 2.00858853 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06744435 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090007749 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090179683 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091164931 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08051728 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090916689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074856062 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067300014 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095540967 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066774276 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086747161 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097070091 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07071304 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07851349 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091903549 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067063177 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090706005 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067157588 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067640012 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090862094 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071634039 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093707635 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078134465 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067170707 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079216514 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067515342 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099570546 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074856159 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068689586 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068091477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068383548 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093428598 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07889416 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081052034 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068237421 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081779207 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080604376 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070440053 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.07824973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073277637 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080134795 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067949601 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066164072 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068457173 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070333402 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0787805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066250282 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068390834 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067857185 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086351194 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066173186 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079199889 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070686253 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072831761 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072768189 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072023643 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075310442 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068426302 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086340261 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06809753 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083986772 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083769431 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079966705 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083004004 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066790025 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079716188 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080422503 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068007265 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069623848 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068397754 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08361117 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070422038 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068520306 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078447594 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067120735 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091027625 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090923863 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066566137 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079972296 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068402822 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06890493 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078429066 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090713202 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072306283 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067829873 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07110187 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069030494 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07066168 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066370188 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070753552 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068406837 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072160839 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068348189 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070424309 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069452632 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082967997 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066298877 seconds)
  done (took 8.818945028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068921728 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068761074 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069591348 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068306107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067985229 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068519951 seconds)
  done (took 1.903151835 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091632019 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067745731 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080761242 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067933978 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103951241 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083410379 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083872303 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077267418 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081478447 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079572957 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083634899 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086157831 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087551396 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070460637 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082720051 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069068963 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082908789 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072242058 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078925708 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070878942 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083601547 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070339344 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070602235 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086562369 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071718158 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068979199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067859128 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079172085 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079190045 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077322267 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069802081 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071173871 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074983349 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076879648 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083381248 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075102935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067991508 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074165368 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070626539 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07158531 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085428128 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070430219 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070627353 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073946581 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077027075 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077665869 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074275754 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072190514 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08263027 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07433708 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073856762 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069043804 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071206582 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074414953 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074396065 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077071004 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073955143 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082958475 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069610849 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075161386 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067871274 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071529312 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076788335 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071024612 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075118961 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074274858 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0747012 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070273578 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070609369 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068285498 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074350879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067894477 seconds)
  done (took 6.916678824 seconds)
done (took 27.735251265 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513262102 seconds)
  done (took 1.957708622 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619121091 seconds)
  done (took 2.091728912 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.505172739 seconds)
  done (took 7.977622776 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.359900407 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.433109602 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.714373182 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133588253 seconds)
  done (took 3.149079374 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70860533 seconds)
  done (took 2.188729403 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235345291 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225895731 seconds)
  done (took 1.953772256 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.357640855 seconds)
  done (took 1.828797058 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.076033624 seconds)
  done (took 2.549693589 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234861053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160109986 seconds)
  done (took 1.874902956 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44033773 seconds)
  done (took 1.913689722 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.221656527 seconds)
  done (took 5.698596068 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223078285 seconds)
  done (took 1.732322601 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23454108 seconds)
  done (took 1.710174165 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.714988054 seconds)
  done (took 3.192656911 seconds)
done (took 41.301846259 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084104328 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086770195 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086037635 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081586669 seconds)
  done (took 1.79872967 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075353473 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071186445 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074955882 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071212123 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074773432 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071487938 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072601121 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07379372 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07072819 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071622138 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071334037 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071109684 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074143052 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073099298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06976894 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074383664 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075007917 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071310578 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074031846 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071222218 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069648043 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073848897 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074158449 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070391073 seconds)
  done (took 3.221159858 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079217494 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073910758 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076345892 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072557108 seconds)
  done (took 1.790072462 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077081163 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088755525 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086514733 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077791887 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088791533 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084372011 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067853098 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067716301 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069114424 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076977966 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066601522 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093264503 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086723227 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07702803 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079304987 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064517323 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066170943 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085139656 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077844191 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078171971 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069456638 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077266699 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06666811 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087135389 seconds)
  done (took 3.34347237 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081730217 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06707409 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081106359 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09243965 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093552219 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066697134 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080253465 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093899406 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136739879 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067029291 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073222985 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066976982 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105243354 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066836388 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082009531 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109988564 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113318842 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070308052 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100079188 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06657356 seconds)
  done (took 3.205122556 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083846156 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073191328 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071078403 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06644952 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077617968 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073681679 seconds)
  done (took 1.940034508 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068918562 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069213109 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068579585 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067395627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073385351 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06884698 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067073147 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068810208 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068697466 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068457973 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068031805 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066821154 seconds)
  done (took 2.314406893 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19294743 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069310327 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070953142 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067254395 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07105014 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067536332 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082173575 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068517203 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093916732 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067576347 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068002113 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069933079 seconds)
  done (took 2.480739792 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19102172 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075508257 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220485502 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144422501 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101887946 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109074481 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110950597 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108512148 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13282397 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097393493 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152652666 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159274114 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10324687 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128417637 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087303235 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119515159 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14321745 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154419866 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099281533 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154432975 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134532144 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121541037 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141298333 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096466195 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10614567 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112647075 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072703988 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077424179 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157966691 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122218747 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135096294 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104797606 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089866266 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165921952 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157041949 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131145238 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141290892 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081721843 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117938651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13146555 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19247075 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088795616 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150463756 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101978541 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077181302 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125122285 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111757763 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115524246 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.09996404 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086159685 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276905304 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175329231 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.12746117 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084747468 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117398221 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105520472 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110039579 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114796108 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169274706 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149630855 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121660431 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070087064 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107330668 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144063102 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127842324 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105463442 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118219796 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090788262 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124967045 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148614019 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118380437 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135169887 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112553521 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085224128 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115736814 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129894496 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120392717 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16157905 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118279395 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071602929 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115743039 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095793943 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07849495 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142631399 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074157208 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164470237 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096214738 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121475985 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125689786 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105980528 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104581421 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149720907 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133651853 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101031219 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084227933 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099397236 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114649695 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136283654 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08435968 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104774378 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113182487 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078950599 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126054609 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072767657 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114945878 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093332083 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114441578 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119184539 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076304551 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264654453 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100157742 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101655407 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123976539 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149732758 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086355906 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079480941 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15787858 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117403292 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10137589 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135173663 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150144408 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119602933 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094653705 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138261118 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163971451 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087911677 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152802223 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100437573 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082029114 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102789131 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118070162 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10665176 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118543598 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07996573 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115813615 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153495181 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07306184 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093765554 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126533226 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079673282 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078618434 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101420042 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100502553 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093822192 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098428891 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101102276 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129983851 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117806297 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103062411 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118695033 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094592491 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15667693 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085451169 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102593469 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101071259 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071154888 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125200929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146703677 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076813137 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150099106 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117503053 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111584527 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081128543 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129027175 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077072922 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070858206 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131666066 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109615 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102960717 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.29158641 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11142722 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119941428 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116301953 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125013991 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122837507 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123656067 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103781764 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087833837 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111194115 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124230195 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072006045 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089070286 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080392637 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099626446 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091956138 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082010864 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133666112 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115883635 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106978917 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110959055 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09400462 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141389772 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077228298 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11860702 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118241184 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092797097 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145767734 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144054541 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125865211 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09757297 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129801068 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072386762 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073613798 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086308775 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118514845 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082475939 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082028353 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108571582 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14140271 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120868671 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129652213 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11954534 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111463797 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148912618 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071309443 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116834959 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135681345 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115963038 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100794249 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088020628 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094598666 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13481115 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100142999 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169882489 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110124407 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118161537 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147948641 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098397786 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078262699 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100718482 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275100382 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099421551 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137154784 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097876303 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085632676 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106195859 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076839354 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097343286 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119536222 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112059283 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134016188 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108021129 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124954688 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076580304 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107480679 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117805986 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115922529 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082649135 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113423021 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157099525 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093915482 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112738952 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142712515 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07784953 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135209296 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162172429 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136792429 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082663142 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101233708 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116418936 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120731494 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114049094 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130910642 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10095166 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131554942 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107093224 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083820577 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084114569 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092338335 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099834689 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109175807 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100776339 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110749923 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093401219 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12262829 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099072016 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106428146 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114683506 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097567182 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093410679 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093020426 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163748943 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114289126 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15817649 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096672693 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133298679 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148673303 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073445953 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076295187 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077855362 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127990462 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230647596 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126512446 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110421518 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112160413 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11892292 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130896852 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094134297 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070831563 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106919148 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126293127 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118082261 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09421918 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101116237 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14956118 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115078159 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077772148 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108171763 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111906288 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100173507 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164629798 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080026828 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106238884 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075845309 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078010997 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120746249 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143095689 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081549008 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1009415 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116336138 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106938694 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121538532 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095266188 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107811556 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125691931 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138534909 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120681584 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087681834 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106576136 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124237117 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144061208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100384913 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097348312 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164149424 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142736168 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149327803 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085269087 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113652688 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110896743 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106529707 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129995774 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082206041 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150473363 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079824268 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126428766 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0975427 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086105682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120580171 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108032506 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085198358 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285998013 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113840257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082166177 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079423533 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107501566 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114533101 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100221199 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074112478 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130732386 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073086731 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130153686 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161151101 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079402876 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102602766 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094198708 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080594318 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099580028 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098940644 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083644606 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096869203 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159611005 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085723934 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13916503 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126631657 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106317275 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131815645 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100874711 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640424406 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078637162 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142688652 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111407855 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165784097 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095826566 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114989369 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107959375 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115312905 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134477147 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098671131 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175393572 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123600979 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113395063 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077353085 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098013518 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099292802 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086210033 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102555504 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110240638 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108346853 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091695318 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112811048 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11585809 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080285413 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093648167 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14578574 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110956713 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133281387 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129060023 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081635283 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113009099 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127910992 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228088751 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115578335 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143531415 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102573228 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098730304 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08138812 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09794195 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162779478 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072693612 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149302887 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115301696 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107267408 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113335703 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107424011 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125014159 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099562154 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116796295 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090662909 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143513787 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109915702 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082256297 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078164266 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102340556 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106875681 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096204077 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095201438 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096987314 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1426524 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070946551 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094827515 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110493376 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135652779 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16030126 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103860706 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081792879 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114106592 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113833118 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109807475 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115996892 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079415849 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079191932 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080313075 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098570059 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121120142 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109718007 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114798554 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106126687 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150625668 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081811313 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221251076 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093145706 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101669732 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087407398 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078385519 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093589905 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093436909 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099896427 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107525941 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1625282 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092399046 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087091661 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088546345 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072684285 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080055439 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117671655 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256749236 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116028964 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10200469 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081422963 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100245764 seconds)
  done (took 56.914246696 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119032521 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.097823196 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097877239 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144592002 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122080055 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199887911 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150989186 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189504103 seconds)
  done (took 2.707210262 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069174467 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.082114768 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104319549 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083486359 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06762378 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068815966 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.211202648 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081731014 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067668773 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090459995 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078504026 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069443569 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43503099 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069493527 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068451974 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076524722 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068293354 seconds)
  done (took 3.3673892 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382747418 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603855403 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354449189 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077187693 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.010844325 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090717813 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.181491256 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137777645 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083374874 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550737771 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.374247195 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133757213 seconds)
  done (took 18.566959667 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082719285 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07654438 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091789889 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091519615 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079369677 seconds)
  done (took 2.006049195 seconds)
done (took 105.184193295 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081923681 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.50920471 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069283813 seconds)
  done (took 2.197241145 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091757872 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090092364 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090465234 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08735118 seconds)
  done (took 1.955631197 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075646453 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077972062 seconds)
  done (took 1.741627452 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23005872 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176085636 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09708964 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084417379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081464021 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082536733 seconds)
  done (took 1.836357614 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07327661 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074020103 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073478923 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074208755 seconds)
  done (took 1.877923649 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068632763 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067397763 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069907229 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072173755 seconds)
  done (took 1.862112773 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085002294 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084915688 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080521055 seconds)
  done (took 1.835083212 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.093466208 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090701742 seconds)
  done (took 1.769129129 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081836496 seconds)
  done (took 1.666527385 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089545534 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100020188 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131944888 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115114502 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.132051859 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114753947 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084326483 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085173216 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079100914 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.080466444 seconds)
  done (took 2.597002877 seconds)
done (took 21.503239711 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079617544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368563081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36045034 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087208147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669255997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358542819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006570899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093553938 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141412611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069205927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085119785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649253228 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.996591622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323583701 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982337126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323324023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651333644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069679468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068922748 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069273926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.990734222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069665625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069327076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070929055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650936155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374540642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07009137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324672409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069578395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071696034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35733197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070111112 seconds)
  done (took 16.211670427 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071290587 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123327487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074326448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084944546 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071267125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070695489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07279667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070148539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121152358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069294377 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08558658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068952671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073077003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069894319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088062109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069759796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070792657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071505192 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070669776 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070287435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087942169 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069733342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070341858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070974297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070361878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082307503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073211584 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070294072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070819493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072626648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073149554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070902812 seconds)
  done (took 4.05115825 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118065752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125820956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074629246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106519812 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113429436 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071535533 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147333087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093831199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127803991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069067356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085595376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069644131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104892451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070709233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089157712 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071193085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071743283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070951129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070387155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070228887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088799281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06984074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070655358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070763719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070123662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083690403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070474368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07029512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070410142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072002545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073655127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070711327 seconds)
  done (took 4.30560431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071120918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073940917 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081289584 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082955257 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068377239 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070685275 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071846974 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06823072 seconds)
  done (took 2.193714217 seconds)
done (took 28.353892886 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079419692 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068819675 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072191729 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087967707 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075496681 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079786663 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066023278 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075949232 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072995625 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073244395 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074433391 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068181047 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070897061 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06627767 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073394257 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06722285 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08175579 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071746781 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08107123 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081630702 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070706975 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074292531 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076299673 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081395912 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081743704 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081365659 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077244374 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073469716 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068473077 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071483295 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070938959 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079645717 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082016527 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082064298 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06804847 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068145566 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072323316 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069754335 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082465704 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077442778 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069775596 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077281175 seconds)
  done (took 4.722754952 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085121913 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090727515 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083869505 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080009312 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0907527 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083340516 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086863715 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078171597 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078246437 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086526613 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074548735 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081875729 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079903781 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073189645 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07765127 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075400111 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080151796 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074813275 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077906933 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07854421 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088018999 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073331191 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08884438 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079965738 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075849777 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080904761 seconds)
  done (took 3.715057066 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074237783 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086252352 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093192035 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139475792 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111996788 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080819363 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082180375 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092430536 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097405715 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069356509 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073707555 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094162821 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093884996 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075249208 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071511907 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08511278 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08475453 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070909043 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07599737 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098035757 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089877424 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086080871 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094894514 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085569294 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068582927 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071750771 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075668574 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085092957 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075085131 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080551125 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07391478 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075445585 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069556834 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078820731 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072976044 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068066851 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092941447 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07994133 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081703318 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069200669 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078279907 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069766155 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093838677 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128531354 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068550133 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073074415 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072258075 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079733501 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069888612 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09597769 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080158469 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068301195 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069280526 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070019707 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069726486 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082201141 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070295843 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070814161 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07845297 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075627636 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090497783 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073720404 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086082274 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068961878 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079014549 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069681858 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070044558 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067750273 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09700101 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074507084 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112335919 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069624633 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067131214 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080008395 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078881157 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074768536 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068780581 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085603265 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079916531 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072848889 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078571391 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072066808 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071926976 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098716392 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068869183 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067838603 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067315665 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071968417 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071815485 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069141174 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080344341 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068065075 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072305561 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080991741 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068645134 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06943908 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072623911 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071344516 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068042722 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079251398 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072960205 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069923553 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079184574 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069214596 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072460099 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081884238 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075255641 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06830769 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071001806 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072176178 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069962108 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072705432 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07254663 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071002386 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075219731 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075419292 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07442614 seconds)
  done (took 10.782945457 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.1640081 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157350868 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072129411 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149095759 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077518647 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081539097 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150925429 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095441444 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068919109 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070555185 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069168059 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106401568 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102068555 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.112717275 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081718486 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070253692 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091870642 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111557633 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153591262 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147662412 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091626498 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077785617 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072131029 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070860141 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070790265 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078605264 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086178917 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077819475 seconds)
  done (took 4.407141642 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078490076 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107745379 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073483075 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091931931 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089147602 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069737207 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071127756 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070943241 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085989386 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078358406 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069946312 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074668343 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074003464 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072769874 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070056285 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075743561 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076359682 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068540361 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073171124 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074532955 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079215348 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093908598 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072939446 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069068545 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072272985 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06870438 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07723849 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08204293 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069230483 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105128086 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067001642 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073862959 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085849265 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069841866 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069045963 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069780341 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069801286 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069350632 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070616521 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067836236 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068039889 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073361172 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06803628 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077137668 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082835521 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071423526 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071355109 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072752331 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072263973 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067356219 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071844583 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072174503 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072233962 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076321136 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073299283 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072214152 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070712811 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095918577 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075289768 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068729491 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068127929 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067985112 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071712104 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078840793 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084727318 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071723207 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068084115 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069617728 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082167787 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082258273 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068532694 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073732496 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067051195 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07097463 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071855823 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071866293 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0705227 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06789101 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069076561 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069675535 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069790548 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069000759 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068670107 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072192599 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067641116 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071357377 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069355056 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.0710132 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077743112 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068583431 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073522062 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070370114 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068435368 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072317112 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074483281 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072707105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082785044 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080819 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070119867 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067494931 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082910278 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072441126 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068899067 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074703576 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073794351 seconds)
  done (took 9.416444268 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093186676 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070751398 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085752681 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092683415 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080339577 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075000687 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079287826 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070070515 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085390977 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06866675 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077542703 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067880309 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080219133 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078687939 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07071389 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079547035 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072386116 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086576808 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083755873 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067847608 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078278129 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081718089 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081926934 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083849919 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083629878 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08402505 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081105995 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072425083 seconds)
  done (took 3.871204827 seconds)
done (took 38.511615717 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.702933764 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.847309572 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.671332147 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.881664355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.925292093 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.684606983 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.862529752 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.66823254 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.950987444 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.712260376 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.995245271 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.906764049 seconds)
done (took 64.558136725 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.684891086 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.818642503 seconds)
    (2/2) benchmarking "String"...
    done (took 1.923427343 seconds)
  done (took 5.347949493 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.864485074 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.329897353 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.933462737 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.665986475 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.673022642 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.094694138 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.451984286 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.13687583 seconds)
  done (took 29.893043608 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.826228284 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.89308654 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.347723611 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.38665364 seconds)
  done (took 15.10172089 seconds)
done (took 61.588584236 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.681851292 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.690939198 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.713710906 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.671782838 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.757152466 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.685506206 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.858079776 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.670696395 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.668039226 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.671914474 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.665432903 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.148934874 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.663802904 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.975767699 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.654884526 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.649397581 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.666985054 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.216842382 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.801621939 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.664365056 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.663291173 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.670300052 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.651728161 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.649315348 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.651120726 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.649692485 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.035222834 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.662764887 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.480216222 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.655234494 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.713102259 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.248489281 seconds)
  done (took 200.514600131 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.648874755 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.496145196 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.627806826 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.666076866 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.983957719 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.840101533 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.74243803 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.065987455 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.651718636 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.654422951 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.822088547 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.647738446 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.84240919 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.592783194 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.68351222 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.736522326 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.805922659 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.851526272 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.68601921 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.798555389 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.674015134 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.632503234 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.580083728 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.805796324 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.68986886 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.659545844 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.654296071 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.649535367 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.834090299 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.781166202 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.652401729 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.671750711 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.844444852 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.511800934 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.643638488 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.67234709 seconds)
  done (took 164.391638121 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.831649227 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.64493945 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.643772404 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.64664099 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.650235447 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.643635773 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.644030907 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.768055543 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767362407 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.298578152 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.139533479 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.696579144 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.643475196 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.431298006 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.64225382 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.706671608 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.654080244 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.64136436 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.657289474 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.667800998 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.640867534 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.640959786 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.763783067 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.654694236 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.64113087 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.648416205 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.639670435 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.645806456 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.025199757 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.639701249 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.849565309 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.64044559 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.644036233 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.878777169 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.639510447 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.638565266 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.467916247 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.616187381 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71813678 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.63982399 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.644491622 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.637309413 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.856490108 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.639695155 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.637575133 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.638505549 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.639110135 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.757584512 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.638356263 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761590747 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.640264797 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.117871708 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.639394989 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.63839436 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.112656957 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.240691386 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.639962146 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.640981264 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.638073013 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.636896606 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.643926144 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.084482486 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.70771116 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.63910294 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.638468305 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.64226503 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.637783001 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.669150256 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.639349311 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.2042544 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.650062772 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.757467415 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.758652298 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.638412516 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.701669251 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.728660713 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.637110775 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.636626266 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.636945541 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.636212928 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.716871464 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.636161927 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.637105169 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.711893293 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.644440746 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.637598731 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.688054543 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.705549674 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.636491606 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.46773444 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.639214725 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.636835211 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880284288 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.636383996 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.699939758 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.636646475 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.635884431 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.713009879 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.757522241 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.356283588 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.638816181 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.934064099 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.709204697 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.637442439 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.768580876 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.640482843 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.716424486 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.641513645 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.639171419 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.670139818 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.636834319 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.648779134 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.636463849 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.636730828 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.008925264 seconds)
  done (took 385.58259397 seconds)
done (took 753.98425105 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.248704164 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.214567012 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.319039558 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.231828356 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.201930198 seconds)
  done (took 12.790935834 seconds)
done (took 14.3656802 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.713762594 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.718741097 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.654108813 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.715093393 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.650374309 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.713541824 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.69931856 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.657911096 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.684681744 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.657537082 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.685536979 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.656706821 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.64449514 seconds)
  done (took 23.427352662 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.863081157 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.867315297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.700678039 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.867189474 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.678020528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.863597093 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.790269365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.780852219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.774358735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.647604026 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.644332111 seconds)
  done (took 21.054427859 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.875396629 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.875441995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.706667019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.867552282 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.679817396 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.886201261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.792708284 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.784468259 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.780063484 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.649417934 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.644276616 seconds)
  done (took 21.117915737 seconds)
done (took 67.174510553 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.63882987 seconds)
  done (took 3.215324954 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.656518366 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.810024394 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.638713209 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.637664833 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.638092726 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.637586375 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.638572288 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.638912371 seconds)
  done (took 14.873613668 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.638303918 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.639053784 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.63898742 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.640485698 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.638458545 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.640124176 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.639417028 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.640046688 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.639810727 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.640238202 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.640233683 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.639928871 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.63936298 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.639317871 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.638445594 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.640377995 seconds)
  done (took 27.809019346 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.641369169 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.640732987 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.641367978 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.639721137 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.640593915 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.639622546 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.640675684 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.640353987 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.639909632 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.638714339 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.64091835 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.640035491 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.639654981 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.640600581 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.640357782 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.640644745 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.639874068 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.642036876 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.644620121 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.640440467 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.640477884 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.64106262 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.640071906 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.641981038 seconds)
  done (took 40.954372173 seconds)
done (took 88.429710362 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.374228985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.366275715 seconds)
  done (took 9.31829658 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.640920825 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.64153367 seconds)
  done (took 4.864836375 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.641971545 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.641567411 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.641084849 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.641271585 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.641290922 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.640748867 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.641399651 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.641128034 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.640576023 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.641311972 seconds)
  done (took 17.990495759 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.641870782 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.641706159 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.643142953 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.642297663 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.641693966 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.641851037 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.64152641 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.642349718 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.642478357 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.64133193 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.641236789 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.642029308 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.642264076 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.64217127 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.643704485 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.641979857 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.641858129 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.642134977 seconds)
  done (took 31.136443254 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.641551048 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.643856086 seconds)
  done (took 4.864536894 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.642849314 seconds)
    (2/7) benchmarking "second"...
    done (took 1.642417166 seconds)
    (3/7) benchmarking "month"...
    done (took 1.641740718 seconds)
    (4/7) benchmarking "year"...
    done (took 1.642735422 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.643634442 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.642637906 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.642894325 seconds)
  done (took 13.078031604 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.644204803 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.804297205 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.869776929 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.28267114 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.644095896 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.645937866 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.584746366 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.647119434 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.647696564 seconds)
  done (took 18.350070547 seconds)
done (took 101.179857301 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.50473784 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.64403734 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.915510403 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.701304383 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.654709821 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.978385953 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.674228792 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.897405641 seconds)
done (took 41.549751987 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.640539636 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.429427654 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.69467478 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.679849643 seconds)
  done (took 15.385561543 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.651188615 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.081628351 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.675101599 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.508185028 seconds)
  done (took 21.57931919 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.024116778 seconds)
    (2/2) benchmarking "read"...
    done (took 2.00065783 seconds)
  done (took 5.617288847 seconds)
done (took 50.802253905 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.650748033 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.652275475 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.650801955 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.649751129 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.651021403 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.649935068 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.650297018 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.651203168 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.650388629 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.649198599 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.65050219 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.649757465 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.649891261 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.651862748 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.651163654 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.650422771 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.650486219 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.650690718 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.650348215 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.652029761 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.650564029 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.651368088 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.651196883 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.651107862 seconds)
  done (took 41.203842358 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.653028115 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.650284339 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.651674794 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.651213498 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.651275835 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.651187092 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.653610507 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.651290872 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.651098002 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.651724076 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.651389612 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.650535477 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.651843845 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.65230332 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.651354153 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.651409198 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.651689742 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.651224441 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.653093715 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.651671754 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.652151772 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.651588548 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.651394061 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.651416099 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.65246911 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.651930408 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.652727194 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.651890376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.652042133 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.652300225 seconds)
  done (took 51.141286532 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.653179755 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.65167815 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.652508967 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.652709486 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.651855326 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.653609924 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.652907022 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.652627745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.652521807 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.65302677 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.65267621 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.653396897 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.653012533 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.652582556 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.653094534 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.652859553 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.652674214 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.654809132 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.653969449 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.652851721 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.653732838 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.653246044 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.653079333 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.653677028 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.652961852 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.652636998 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.652327764 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.653169686 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.653281382 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.656132921 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.654652856 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.654187272 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.653202946 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.653648522 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.653533016 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.654060954 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.65455325 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.653499604 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.653418652 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.65381736 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.653625815 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.65373038 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.654387431 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.653550096 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.65458701 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.65386314 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.654354238 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.6534349 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.654890747 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.65405105 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.654568121 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.653537797 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.655074885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.653144352 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.655035873 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.65537241 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.654372239 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.655474829 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.654380564 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.655098877 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.655131053 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.65493959 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.655076881 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.654948771 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.656271725 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.654583733 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.655592823 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.655734245 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.656082195 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.65563937 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.655029066 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.656055287 seconds)
  done (took 120.674625874 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.655081723 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.656503886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.655352528 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.656063111 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.655566063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.656467616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.656182385 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.656112157 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656236822 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.656053137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655538815 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.656786577 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.655785164 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.656199985 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.655352846 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.656141663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.656886584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.656146039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.655993123 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.657205852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.656588575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.656530004 seconds)
  done (took 38.028435685 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.657539548 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.656526497 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.65673737 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.656466631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.65679162 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.656141085 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.657928932 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.656219995 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657095876 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.656368642 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656064832 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656402405 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.65662334 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.656855364 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.657127027 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.657711994 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.657747002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.657711711 seconds)
  done (took 31.417979244 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.657259451 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.656865597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.656451693 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.65685288 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.657017373 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.657751531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.657398864 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.657563391 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.65658143 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.657574748 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.657188659 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.65879453 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.658338078 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.657913257 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.658904275 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.658206526 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.65846474 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.657727811 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.658181793 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.658208206 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.658216765 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.659627996 seconds)
  done (took 38.065597208 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.659251258 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.658351332 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.659079373 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.659340223 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.657296062 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.658325214 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.659732332 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.658775351 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.658586651 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.658389898 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.658669335 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.657799812 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.659600189 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.65894012 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.659128065 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.658899142 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.659590585 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.658735062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.659489639 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.658346247 seconds)
  done (took 34.771055715 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.658790824 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.658255917 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.659388847 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.657864628 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.660686133 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.658398738 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.658208095 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.658657159 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.659096646 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.659366941 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.65938091 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.658166318 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.658870662 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.658283318 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.659614954 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.659047198 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.661040411 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.658725399 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.658997485 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.659159946 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.659903421 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.660206868 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.661723913 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.659637576 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.659857963 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.659859169 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.659046536 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.6597867 seconds)
  done (took 48.05644727 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.660272909 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.660083749 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.660739733 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.66142338 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.661595826 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.661368969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.661327433 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.66141212 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.660583581 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.659417338 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.66163549 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.662071274 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.661436601 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.66117676 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.662040935 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.661595662 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.661181317 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.66140799 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.661645875 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.661244958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.661394507 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.660888249 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.661006133 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.661857722 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.660980305 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.661997837 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.660924112 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.661149401 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.661439798 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.661999294 seconds)
  done (took 51.435602266 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.682605474 seconds)
    (2/2) benchmarking "in"...
    done (took 1.682291586 seconds)
  done (took 4.96193934 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.661209702 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.662367739 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.661390586 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.662182547 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.661759459 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.662882811 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.662255735 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.662997312 seconds)
  done (took 14.894719447 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.663017934 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.662298866 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.662969779 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.662577716 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.663886727 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.664245254 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.668561462 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.663222398 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.664100053 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.663587116 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.670332483 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.671285577 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.666393451 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.664406462 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.662775627 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.665538591 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.664299129 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.662463846 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.66292825 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.663643772 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.662512948 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.666664923 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.667749564 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.663075097 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.664352505 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.674028933 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.666610049 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.664638086 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.66615281 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.66702546 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.664247497 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.663598008 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.663164219 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.66305006 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.66423299 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.663474727 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.672048908 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.664843378 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.670021272 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.663413249 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.666628622 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.66380066 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.66519846 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.665988074 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.666370747 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.663682791 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.667039001 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.665027274 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.665159066 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.667498207 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.67135982 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.664976866 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.666520711 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.668361056 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.666564201 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.672356762 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.665470521 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.667238799 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.673232813 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.674618633 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.675894095 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.673201326 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.666502568 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.66556351 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.675583971 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.688198112 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.671884268 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.665803447 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.664760356 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.665345147 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.673407816 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.677674911 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.674918238 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.665416294 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.666106216 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.666676129 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.668654358 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.666478084 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.672922234 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.668510114 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.666979333 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.666106701 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.676611187 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.689005791 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.667283818 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.666344153 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.666778154 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.666779208 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.67062827 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.677595913 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.666415313 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.668214673 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.667317202 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.667334559 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.670636809 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.666307944 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.665937505 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.668481107 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.666384814 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.667423378 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.668689798 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.670696436 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.675643318 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.667502305 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.667112538 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.674837448 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.66943511 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.668507783 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.674857038 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.667016831 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.667796446 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.668911991 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.674921244 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.668485729 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.671099361 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.676848961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.667980631 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.670534075 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.668837063 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.667738819 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.676960959 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.691799791 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.668461635 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.667432216 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.673118242 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.678570503 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.668334845 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.672268498 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.668588701 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.668931607 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.670191429 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.671089809 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.668573487 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.670405058 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.668078675 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.670443811 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.67042531 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.668957944 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.668236905 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.671496984 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.671496572 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.670432161 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.672084395 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.672004353 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.669050591 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.67198927 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.676208832 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.670053017 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.672366981 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.670932495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.670296883 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.670464212 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.67216367 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.670283147 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.672762924 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.669259726 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.670163163 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.669813201 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.672926614 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.670659827 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.671118596 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.672026218 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.675160264 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.669528006 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.673556596 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.670188203 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.670958671 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.670363757 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.670365222 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.671711477 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.671138676 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.67047056 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.674120707 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.677561338 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.670242971 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.670074336 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.674844975 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.669890929 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.671059496 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.671341118 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.673327336 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.678590512 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.670928875 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.677381139 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.671591148 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.670537859 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.671171401 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.672053743 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.671988091 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.670781922 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.674293393 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.679498462 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.681729354 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.680086926 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.6733535 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.674987362 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.674899675 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.675321825 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.67684008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.671150415 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.672481318 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.672201309 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.672640769 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.671780982 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.674033246 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.672375775 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.673043636 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.672997263 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.67232673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.671101889 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.672692435 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.674531669 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.674172715 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.673781909 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.672525392 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.672305021 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.672733696 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.672732785 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.672539262 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.674309905 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.67376758 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.673833981 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.6800511 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.673364433 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.674001606 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.675149035 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.673206328 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.672805222 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.673613321 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.675896758 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.67369402 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.681612425 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.67512682 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.674758016 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.681228423 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.674431678 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.674170558 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.67807299 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.673737237 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.67356876 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.676253416 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.681947809 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.674282204 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.675141235 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.674359786 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.674935033 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.674290877 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.681021695 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.674330153 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.67601748 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.67549752 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.676712902 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.674586898 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.67654325 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.675099424 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.676526945 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.676017466 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.67418689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.675794378 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.677566606 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.675467049 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.674793031 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.675273382 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.677975352 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.681586177 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.680614261 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.677251167 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.678542048 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.67708344 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.678743033 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.676824267 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.675225253 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.67588418 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.687723601 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.681964928 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.681425396 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.677926684 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.675132004 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.681496671 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.679081725 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.679664152 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.676454424 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.676577443 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.676190134 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.676918263 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.677239519 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.676148074 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.675620491 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.677213289 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.678055349 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.679613228 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.676656837 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.67607956 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.67565561 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.675232314 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.675711086 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.676756084 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.677189304 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.679214286 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.678900959 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.676670561 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.677313154 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.683781442 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.679111762 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.677900012 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.676819153 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.677456679 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.67694837 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.678558074 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.67670335 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.679630243 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.683831184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.6799326 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.685609186 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.679238906 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.686363744 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.676481042 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.680519063 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.68416303 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.677846415 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.67803195 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.680164004 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.676927664 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.685713253 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.678575563 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.679126748 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.680854702 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.677729315 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.677233374 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.67697173 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.677958777 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.678083567 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.67795678 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.68693262 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.679722946 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.681974489 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.680280568 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.678205631 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.678002858 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.678687891 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.678271694 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.682028186 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.677400796 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.679805699 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.678573928 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.679551871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.679166157 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.677643778 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.67864716 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.678106635 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.678814713 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.687571322 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.680812889 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.682675026 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.678984851 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.686987911 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.67869354 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.685945812 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.678950343 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.680561876 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.679174683 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.679324108 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.682909776 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.679925572 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.68004193 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.68033709 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.681723603 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.683501797 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.679678359 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.682777367 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.680610599 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.679463242 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.681022409 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.689786673 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.701578491 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.681295359 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.683987774 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.680041736 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.681768461 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.683118338 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.680035873 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.680319666 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.681561609 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.690648879 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.688689086 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.681099937 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.681427265 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.682400357 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.679855006 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.680879472 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.681440972 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.680356388 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.682538428 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.682025714 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.679929346 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.685025891 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.680895124 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.681725018 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.682714959 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.682960427 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.691111301 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.681357133 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.683356082 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.680267323 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.682325377 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.682700513 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.682345109 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.682222505 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.682680032 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.682099521 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.683201059 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.687199459 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.688628894 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.68482617 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.68192247 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.681991855 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.682489589 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.683444762 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.682217075 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.682561362 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.681545252 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.683451796 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.681647061 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.684109795 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.682275164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.681258906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.682531179 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.682694045 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.685546685 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.689709227 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.683392837 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.682750473 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.682618733 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.682677952 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.683026814 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.683381782 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.690476176 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.687243793 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.693363185 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.691504718 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.687832704 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.683796883 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.686655492 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.691591231 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.684188103 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.684108498 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.683855456 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.685560612 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.685321327 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.687519856 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.682815262 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.690921093 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.685854322 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.684682366 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.692263518 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.686447678 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.683309699 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.686375254 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.689034404 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.685244459 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.683678225 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.684227685 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.683561904 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.692554292 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.686435742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.683118855 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.686246893 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.683937072 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.685232006 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.687687615 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.68504903 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.684844869 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.683771573 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.685840022 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.683954046 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.685869416 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.685422621 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.685547828 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.685269574 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.687786062 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.692085751 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.684662973 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.686953642 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.68610835 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.685764813 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.684653387 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.685052404 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.685798695 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.686012941 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.686181922 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.684422772 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.68633877 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.688005751 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.686292005 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.687456979 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.688907653 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.684442731 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.688371951 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.695795201 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.693276769 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.686230307 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.685821945 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.68831805 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.68980178 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.685920576 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.68685864 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.686168361 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.688405052 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.686174888 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.686061173 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.68835871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.691097915 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.703122844 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.687299083 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.6872635 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.68755142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.689315153 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.687283831 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.6863807 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.686497304 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.689919654 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.690299547 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.693670423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.68691785 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.694363587 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.688575424 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.688632052 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.690900161 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.690547967 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.695468562 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.689357996 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.686422432 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.685619989 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.692213985 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.703389721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.687852473 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.695514901 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.715488893 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.689104575 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.689713019 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.687103723 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.687239023 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.68745864 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.690066922 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.687148407 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.6874544 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.690082446 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.686723099 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.688985258 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.693613578 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.689512079 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.688044623 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.687770183 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.688923341 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.689432326 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.688443161 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.687386507 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.688620094 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.688859834 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.688081868 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.687648153 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.688606252 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.699551121 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.698822509 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.688952706 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.688410751 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.689279717 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.691750801 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.692700669 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.698807263 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.696399762 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.688072095 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.68924985 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.691467783 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.688904449 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.688204335 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.690611843 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.688666195 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.689832592 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.688847244 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.700531975 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.696078459 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.694008102 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.690999041 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.689282728 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.689532085 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.690991575 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.688768127 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.690118615 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.69184981 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.69079069 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.693120001 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.689275963 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.690048394 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.693311905 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.697711308 seconds)
  done (took 1002.082951474 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.690557911 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.689985322 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.68994316 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.691461118 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.690511757 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.690622846 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.689446369 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.69077654 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.690418186 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.692883262 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.690127486 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.691039865 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.691241084 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.690119296 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.691011801 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.6913134 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.691789845 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.691963892 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.691656427 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.691075878 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.692851217 seconds)
  done (took 37.136383436 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.69039149 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.692026513 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.691459465 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.691595706 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692559635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.691501063 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.691043062 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69135332 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.691240252 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691507703 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.691760031 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69161754 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.69198312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.692644196 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691477957 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.691480618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.693048062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.691459168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.691907033 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.691842622 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.691596256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.69188037 seconds)
  done (took 38.844053607 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.690956586 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.691705937 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.691766354 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.693469746 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.693123164 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.691958527 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.691867078 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.692426528 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.692544464 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.693992025 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.692675292 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.69433294 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.699166883 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.699604298 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.695190558 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.69281695 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.838209446 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.693086194 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.692494555 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.691789352 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.692456694 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.69942542 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.693486044 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.693456867 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.69386745 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.692569169 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.693760657 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.692716433 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.693237026 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.695404482 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.697262682 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.694862999 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.693626053 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.695999552 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.694753213 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.69479227 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.697266062 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.693238147 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.69398963 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.693965976 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.703451689 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.715673793 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.695074616 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.700629546 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.694762668 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.694723443 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.697813352 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.701744104 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.693749142 seconds)
  done (took 84.829680416 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.695585438 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.694872579 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.695154826 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.694311175 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.69501714 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.694505711 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.694365155 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.694233607 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.694877871 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.695000777 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.695045484 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.695651959 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.694529828 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.695557745 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.695804156 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.694742053 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.693510633 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.694916272 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.694407084 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.694569454 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.695702744 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.696026615 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.695763376 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.695630488 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.695337447 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.695109283 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.696174858 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.696338394 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.695809042 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.695662632 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.696078351 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.696607193 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.697134352 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.696929606 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.696845468 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.695666558 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.697131781 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.697260893 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.696475316 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.69704834 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.696993573 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.696225223 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.695787511 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.696539933 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.69680071 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.696250424 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.695690701 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.696670556 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.696163169 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.696677981 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.697094656 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.697342596 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.696622257 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.697819556 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.696463127 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.697946142 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.697380178 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.697486171 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.697049833 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.697366076 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.697233931 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.696600948 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.696261204 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.696445854 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.697273355 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.697064404 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.697004508 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.698084226 seconds)
  done (took 116.965083679 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.696291149 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.697330629 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.697121398 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.697649878 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.696432023 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.697132502 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.69710078 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.698124729 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.697170346 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.698335868 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.698053474 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.69881713 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.698533482 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.697872121 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.697639593 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.698315983 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.698381017 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.698331188 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698180044 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.697902495 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.699449146 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.697952151 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.697894216 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.698923103 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.698678296 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.69796987 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.698518027 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.700218362 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698087665 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.698171192 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.700242256 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.699736244 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.700041513 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.699624047 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.699277364 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.69995829 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.698768726 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699133463 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.699050716 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.699175301 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.699151474 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.69956856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.698618014 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.700516852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699754118 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.700637982 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.700204994 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.699738508 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.700298852 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.699332345 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.699580628 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.70104335 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698732952 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.699070987 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.699740154 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.700471187 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699331665 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.699768928 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.699354193 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.700026254 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.699002415 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.701050487 seconds)
  done (took 106.965140511 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700131722 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.701070363 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.700713021 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.700597583 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.70072277 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.699764376 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.700581389 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.700925018 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700603155 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.70120304 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701097321 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.700532874 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702146059 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701795243 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.700851224 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702318812 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.700630662 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.701365349 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700553112 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.700728494 seconds)
  done (took 35.653365019 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.700943178 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.701851562 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.701919926 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.702167518 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.701090941 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.70219931 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.702010372 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700964224 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703165845 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702293027 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.702210627 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.701715507 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70280762 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.702434381 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.702012519 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.703539999 seconds)
  done (took 28.869390274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.702343082 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.702266695 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.701365162 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.702561956 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.703563226 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.702484981 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.703251982 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.704736109 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.703049891 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.704419737 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.702075404 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.703038703 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.702553725 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.701687253 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.702837853 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.703905781 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.703257511 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.702410448 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.702757249 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.703169806 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.704100901 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.70463593 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.70248749 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.70209032 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.702976172 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.703681598 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.702776151 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.702619404 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.70248136 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.702668518 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.703619736 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.703754014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.703834587 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.7039279 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.704093894 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.704475752 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.703960453 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.70410826 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.704494624 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.704295821 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.70404913 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.704464827 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.704125304 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.704301499 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.705717249 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.703671331 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.704947397 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.704424339 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.704150682 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.704290103 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.706072623 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.702994955 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.704505834 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.704791007 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.704902252 seconds)
  done (took 95.335519365 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.705641977 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.704917298 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.704817316 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.704986332 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.704889758 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.704590476 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.706506917 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.709331163 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705417138 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.705604078 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.705699914 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.704202574 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706022755 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.704924063 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.705598566 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704925469 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.704926561 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.707239277 seconds)
  done (took 32.339866377 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.705584357 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.706741747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.705517544 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.704586464 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.706280596 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.705757192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.705533942 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.704368545 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705237965 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.704678268 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705955452 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.70573757 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704718215 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.705251381 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.706724325 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705559429 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.706430033 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.705648231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.705206034 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705802891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.706180076 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.70632243 seconds)
  done (took 39.163422689 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.706252438 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.706871797 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.720556834 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.725303331 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.72687917 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.738625204 seconds)
  done (took 11.966256726 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705666108 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706997745 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.706306848 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70679606 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707948325 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708161914 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707702675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708599191 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706912063 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70763834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707020514 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707545611 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708273861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70791304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707930743 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707391473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707685444 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70700429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707511617 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706974967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707654721 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707654662 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706930431 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707061075 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707526166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707564253 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707325485 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708751701 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707996937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708164845 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707883978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707610712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708455441 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70954447 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70791217 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709058367 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708355874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708779238 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708356996 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70976354 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.707869845 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708243028 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709383432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709710899 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70821475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708914193 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70815444 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708422142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709000661 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709426259 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708913677 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710218119 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708158907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709184408 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708834569 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709221053 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709622793 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709787018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70893433 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709570846 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709327195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709318845 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709955593 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710096316 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710116261 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709328883 seconds)
  done (took 114.391367023 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708917163 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.709991733 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710427693 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710756359 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709749855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709851824 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710839094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710251215 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710643469 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710290757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71062314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709846126 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711185644 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711321044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71050143 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710140602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709895466 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710810939 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710711219 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711500034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71086413 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710875449 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711140834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711305733 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711546578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710980339 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709939248 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710420031 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71081588 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710235291 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712238847 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711600391 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710985977 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711826192 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710763257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711298288 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710819539 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71161647 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711052506 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710763979 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712136834 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711148101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711730529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711549063 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712277857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711719905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711500344 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712426151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712898257 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711158903 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711815056 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71242156 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712145882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711944376 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712739607 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712653986 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712422979 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713082921 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711982043 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713422596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714473292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713278438 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713003064 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713369151 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713400692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713033288 seconds)
  done (took 114.599824336 seconds)
done (took 2335.383724636 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.729047805 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.825489332 seconds)
  done (took 15.201477119 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.875511666 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.828625287 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.711713332 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.736450851 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.712990166 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.736739408 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.735524473 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.712045148 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.713321169 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.712955945 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.712697128 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.897388463 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.710864321 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.713363811 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.713061054 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.805824253 seconds)
  done (took 49.680186803 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.718362087 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.716921391 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.727769514 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.719261256 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.718154113 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.730285889 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.747774414 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.721393467 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.753261708 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.730612924 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.78684875 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.727752581 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.718031761 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.768898848 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.729558668 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.733634547 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.811296467 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.793145223 seconds)
  done (took 33.000664482 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.795150292 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.724350204 seconds)
  done (took 10.174512412 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.735985371 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.717623178 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.808457686 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.714049429 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.725555496 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.727703462 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.751117879 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.754959802 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.75055553 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.736346015 seconds)
  done (took 69.074538144 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.723555098 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.722238996 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.719472294 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.716505605 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.716117209 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.720876618 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.717581507 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.720962148 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.374720132 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.754620286 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.726222575 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.724913336 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.717469251 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.718527926 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.718451335 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.741842686 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.825963543 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.717563516 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.717047083 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.724089467 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.719113983 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.773919079 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.73101846 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.720912016 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.749333561 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.376437686 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.727246959 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.723608625 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.849474 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.717046846 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.720160677 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.928382911 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.722139675 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.180269768 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.978325985 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.722729001 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.732799887 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.726293683 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.718667646 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.83414041 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.719503057 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.72411144 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.624554632 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.958469798 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.813851032 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.763709481 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.024360339 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.734437499 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.719357818 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.751817805 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.721842212 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.719842772 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.733689955 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.236465943 seconds)
  done (took 124.470358404 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.717528424 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.064250893 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.88424732 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.721099755 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001493093 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923020963 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.719748561 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.764938143 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.721040471 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.946125391 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.970447289 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.821997371 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.721350256 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.719999436 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.720739946 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.71703222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.873630013 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.788995435 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.720556213 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.719452265 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746432846 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957617206 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.838189308 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.721384526 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.747758216 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.928290972 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.838552804 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.820387788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.451163933 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.71824248 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.781181428 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.720386581 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.721670904 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.719034748 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.874947574 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811368279 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803705831 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.722787297 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719678834 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.718635006 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.465108759 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.917461212 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.813620401 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.848236497 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.97071085 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.922407561 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.495594459 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.720217946 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.451230752 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.881697529 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.946625362 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.947241723 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.840258219 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.722449176 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.972593888 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.720856947 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.720392055 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.968366618 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939034061 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.815217685 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.721556822 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.72075485 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.720458959 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007062859 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.723532283 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.814274291 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723249529 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.720149618 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815713505 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818089955 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.947786193 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.934424859 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.750655124 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.059500181 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.228635322 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.96541252 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.78628039 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970288734 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.722369584 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.722365667 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798648077 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.562014799 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.973995069 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.000517008 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963949962 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754820391 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.434809181 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.721287148 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.944547323 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.940929388 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.98121078 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965746238 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.957375343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.171244502 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.722109507 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.72224662 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.061803653 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.846136107 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.72523356 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.067550769 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949822295 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.256984758 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.748840603 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.025130044 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.851984562 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.724682102 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.351740849 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.723078245 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.951064336 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.762038465 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.723162221 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.721785577 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.940194989 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.714141838 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.722558612 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.613154831 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.782551181 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.724591098 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953192462 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.726408816 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991298692 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.726641752 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954882073 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.156852486 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.752496302 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.895118601 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.968035502 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.725188632 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.960811404 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965987886 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.835923647 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.99228405 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.62266339 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.724828326 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008884905 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.726568147 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.724209258 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.892059415 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.72558107 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.865317343 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.725239529 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.015963814 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744649563 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954895776 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.726159461 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.974655493 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.757160648 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.772822917 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.726959352 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.848386797 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.727473986 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.644868453 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.879619009 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.726232884 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.724905631 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.267192162 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.724780929 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.872799335 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.950423452 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745299371 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.795478597 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.387701798 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.724234761 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.803003384 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.747131563 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.118185073 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.726202252 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.975627309 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.727563813 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.725354789 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.726693984 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.009079576 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.960652648 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.730042672 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.725444547 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.628877472 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.724720015 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.725086716 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.905170074 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.038593051 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.725442563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.927137348 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.731714129 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.852190769 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.72939139 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.794991131 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.056311704 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.72588185 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.727379347 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.726607285 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.727123808 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.726974236 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.933355055 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.751304724 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.239472128 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.861805585 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9965314 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.035484755 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96556832 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.768621969 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.728157399 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979389659 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.729845967 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.789628815 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.729565058 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.746749312 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953253088 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.72910943 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.989185877 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99402695 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.568869547 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.775135003 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.730197994 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.727709037 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.727288042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.871801024 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810516753 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.169399321 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.726881306 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.840601654 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.846618537 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934076429 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.728949631 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.785461227 seconds)
  done (took 870.746493516 seconds)
done (took 1173.995033383 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.729474628 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.73295958 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.73224482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.73148001 seconds)
  done (took 28.589507923 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.729751147 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.729458629 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.729767979 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.729580151 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.728033648 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.729532021 seconds)
  done (took 12.038992748 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.776192038 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.731822419 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.731361465 seconds)
  done (took 20.903805026 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.802544012 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.108491616 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.861916987 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.139276851 seconds)
  done (took 9.575177852 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.729905905 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.729309393 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.729915246 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.729039982 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.729533768 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.72862298 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.72791785 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.727693699 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.727923671 seconds)
  done (took 17.225203949 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.775264197 seconds)
done (took 93.770695005 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.841769458 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.728514466 seconds)
    (3/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.630482038 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.909827814 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.796522641 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.862456671 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.956459254 seconds)
    (8/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.830852493 seconds)
    (9/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.168882266 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.731840887 seconds)
    (11/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.818830199 seconds)
    (12/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.859540093 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.584742339 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.06777477 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.733040739 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.832285323 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.741677223 seconds)
    (18/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.739208028 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.937304372 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.810407498 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.888555788 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.084225682 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.756804564 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.897471144 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.8445176 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.820037185 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.108611624 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.830712628 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.86404421 seconds)
    (30/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.89990068 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.055152916 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.850191678 seconds)
    (33/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.841151896 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.121004233 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.475057861 seconds)
    (36/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.833716525 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.895179408 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.115703496 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.09142539 seconds)
    (40/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.75905421 seconds)
    (41/309) benchmarking ("sort", Bool, false)...
    done (took 1.945428149 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.91300684 seconds)
    (43/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.737384387 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.407646373 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.73528817 seconds)
    (46/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.945076056 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.084806805 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 5.411602408 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.985927071 seconds)
    (50/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.590417835 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.890552801 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.889792536 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.751324588 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.935363647 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.811555875 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.954831887 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.755728496 seconds)
    (58/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.730346769 seconds)
    (59/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.014788177 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.823603162 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.062177925 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.831410858 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.862552365 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.808929158 seconds)
    (65/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.731732363 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.860429655 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.828651671 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.605648218 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.752810075 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.019704526 seconds)
    (71/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.81139526 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.824234663 seconds)
    (73/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.862653684 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.735307751 seconds)
    (75/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.181087726 seconds)
    (76/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.964177182 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.044800605 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.074464153 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.813938173 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.172822063 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.735811868 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.938261578 seconds)
    (83/309) benchmarking ("sort", Float64, false)...
    done (took 5.453501905 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.798186692 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.859673859 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.17285086 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.85845712 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.41505534 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.989265038 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.697263133 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.111044341 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.411483257 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.90161111 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.868808879 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.502304272 seconds)
    (96/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.757637572 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.989510538 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.771245465 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.754527561 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.697241055 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.760474289 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.75583785 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.732475798 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.749825294 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.732952871 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.828898869 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.862655121 seconds)
    (108/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.733714676 seconds)
    (109/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.315495505 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.934459253 seconds)
    (111/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.733996621 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.854815995 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.757845614 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.734990888 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.836283427 seconds)
    (116/309) benchmarking ("sort", Float32, false)...
    done (took 5.465564437 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.540084926 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.917594731 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.837105264 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.736448865 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.332189355 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.950850103 seconds)
    (123/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.889356609 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.048798886 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.06995458 seconds)
    (126/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.970209691 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.866066566 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.737093309 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.911670079 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.773472113 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.991392998 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.758052864 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.107465567 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.991462489 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.924497218 seconds)
    (136/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.990390189 seconds)
    (137/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.81890681 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.86987581 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.866735373 seconds)
    (140/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.87652128 seconds)
    (141/309) benchmarking ("sort", Int8, false)...
    done (took 4.607413463 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.987374921 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.065322044 seconds)
    (144/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.822510364 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.077970715 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.65612664 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.737556034 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.971502003 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.735355788 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.078465679 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.475325681 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.760146154 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.88993103 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.690463522 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.97170963 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.856500482 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.736295776 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.883466768 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.739379355 seconds)
    (160/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.757967576 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.735927881 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.340572192 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.777654853 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.921898669 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.826521924 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.048740982 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.869611608 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.690578041 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.516477163 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.749199287 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.834167149 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.127975003 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.846095296 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.738974086 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.476846891 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.742906494 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.029743893 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.801765562 seconds)
    (179/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.737157055 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.720683732 seconds)
    (181/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.866828425 seconds)
    (182/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.319608945 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.017565202 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.748692854 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.127634694 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.86644971 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.260551688 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.848882616 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.831480516 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.742170838 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.392823511 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.169607954 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.922895857 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.709576655 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.872876524 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.637080528 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.091905275 seconds)
    (198/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.863743437 seconds)
    (199/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.989157952 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.743099992 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.59906682 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.743986859 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.875797364 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.737383414 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.025407771 seconds)
    (206/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.74429384 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.984588351 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.739175041 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.052240179 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.741313269 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.681889895 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.504523825 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.744314493 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.06771567 seconds)
    (215/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.742368855 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.366365646 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.743699382 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.633208996 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.879157985 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.947429997 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.586181784 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.956285066 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.12088431 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.742318653 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.806539391 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.832196852 seconds)
    (227/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.047826635 seconds)
    (228/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.74403196 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.066555666 seconds)
    (230/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.007915719 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.008141191 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.882714018 seconds)
    (233/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.823495309 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.631393407 seconds)
    (235/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.817591286 seconds)
    (236/309) benchmarking ("sort", BigInt, false)...
    done (took 7.616804725 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.844853874 seconds)
    (238/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.962711302 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.744328698 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.460480826 seconds)
    (241/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.89806081 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.117600761 seconds)
    (243/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.942132891 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.427348095 seconds)
    (245/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.820851952 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.890858943 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.953693774 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.046860143 seconds)
    (249/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.074179858 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.851430631 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.040498955 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.938128494 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.150883112 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.299539221 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.778876046 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.231369157 seconds)
    (257/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.12510011 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.047712543 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.736162359 seconds)
    (260/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.844422616 seconds)
    (261/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.050192283 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.900671975 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.046306919 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.768792303 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.622872324 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.365473905 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.363644683 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.07908852 seconds)
    (269/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.032868791 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.766798361 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.927755668 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.060395307 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.764875389 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.741685331 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.930540094 seconds)
    (276/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.823653148 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.046614021 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.97700338 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.745212901 seconds)
    (280/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.03525001 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.017646886 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.744318317 seconds)
    (283/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.839240582 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.219127549 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.903853474 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.147401386 seconds)
    (287/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.856216886 seconds)
    (288/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.863422672 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.005479971 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.53437837 seconds)
    (291/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.906155864 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.641979864 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.770899787 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.814561939 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.754849611 seconds)
    (296/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.023198541 seconds)
    (297/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.76570017 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.409243199 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.871969546 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.743233106 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.805705912 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.875359378 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.750324331 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.281344736 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.073392461 seconds)
    (306/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.948071237 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.079599685 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.75095959 seconds)
    (309/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.856925538 seconds)
  done (took 964.551491606 seconds)
done (took 966.276597664 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.770378085 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764223554 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.74593884 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.768666217 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.859616485 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.793789941 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.761629158 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.750368108 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.797206039 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.7959017 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.745122655 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.791460744 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.747851023 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.747383544 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.747698545 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.763397263 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.149190946 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.785146611 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.765937375 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.76014675 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.76596298 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.746777308 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.798890153 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.793405587 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.752485821 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.752482448 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.750621123 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.767321123 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.861484571 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.750301468 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.753256233 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.76108624 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.07131805 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.781418409 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.746739149 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.768124902 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.760397773 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.760670384 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.753567247 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.781958071 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.193366441 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.794839402 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.75059397 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.748979621 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.748501947 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.755855736 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.750248839 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.758276784 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.76456557 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.765555685 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.145830866 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.810755072 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.752888803 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.749348713 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.761766146 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.749767839 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.755088212 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.766750918 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.769342058 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.765653632 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.043639893 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.791787342 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.753401428 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.767745359 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.757977202 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.179080264 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.793486356 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.755972175 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.147322016 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.802442969 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.176844151 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.805317568 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.75331397 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.765462082 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.783290566 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.059269446 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.782493686 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.749457336 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.75915606 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.747496141 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.76323875 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765631798 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.754868853 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.75027481 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.765999449 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.797422411 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.763010243 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.75190644 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.76268148 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.771234415 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.759346461 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.76318103 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.75439701 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.749068558 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.763696148 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.755383769 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.754018456 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.754708331 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.756219269 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.764389841 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.145601919 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.814750368 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.748845348 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.750268216 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.75165899 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.766253599 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.146993762 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.798061616 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.775174899 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.801065324 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.75326826 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.047331364 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.789917007 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769642859 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.762927953 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.754032584 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.749490552 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.046688903 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.177780064 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.813388056 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.752589829 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.74982385 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.770224002 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.754136764 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.749318439 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.062915985 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.789586072 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.768504016 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.874828977 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.765469648 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.785093726 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.750232944 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.755741009 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.802820978 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770159725 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.78430589 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.755034747 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.769417311 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.770711061 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.751315111 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.764393342 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.766209689 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.752546517 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.76141261 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.750917297 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.802731779 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769435523 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767813686 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.773654117 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.876471875 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.750228517 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.048887986 seconds)
done (took 276.212507077 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.834618945 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.751347972 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.844904709 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.752511093 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.848792703 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.829675478 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.753395551 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.753090943 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.754022812 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.242932837 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.753658411 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.760565985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.752901019 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.754034706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.829472988 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.754799861 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.752970117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.190990959 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.753215801 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.835936315 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.752254865 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.751782964 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.751144965 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23664119 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.747070459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.747657283 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.82600892 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.745889285 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.285256288 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.744077653 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.744678749 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.180718352 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.822472526 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.770126433 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.748353742 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.745786546 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.832478085 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.752452833 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.811983026 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.80945418 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.830898177 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.770172887 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.737305906 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.738735818 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.740618627 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.737518765 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.736685593 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.769092002 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.737241533 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.741832247 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.176385289 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.74446593 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.743339578 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.738161229 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.738195008 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.766072708 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.738691245 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.739978541 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.819580215 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.73830465 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.807895717 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.338722448 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.227629806 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.738529741 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.736154127 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.737314728 seconds)
  done (took 177.066761276 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.80191181 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.807862284 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.801637938 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.741263619 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.784764243 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.801633638 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.7391424 seconds)
  done (took 14.150168601 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.739772356 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.734024017 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.78505784 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.780213814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.732041427 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.887100696 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.732657565 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.743915474 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.737097024 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.759109449 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.733339306 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.732757044 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.73850886 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.731851192 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.78002271 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.744206806 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.846941821 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.734510319 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.731807148 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880305471 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.736577951 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.740633108 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.758529902 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.744460999 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.731557438 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.74078058 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.301545893 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.734759533 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.732322924 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.732418219 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.733016962 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.773217409 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.733159876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.73209727 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.732536628 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.845925481 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.732473386 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.732499577 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.732325298 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.730766717 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.732749966 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.732506132 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.732725098 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.732898604 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.732564516 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.757348971 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.733968843 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.733396995 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.733319184 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.733870682 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.759274576 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.734286259 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.734113194 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.739312192 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.776021145 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.740111746 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.733412513 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.734111121 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.732980401 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.733127947 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.88220718 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.783741902 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.733366348 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.783632838 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.734693693 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.734008983 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.732557973 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.733165186 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.822493962 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.734415159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.783852963 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.734587873 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.894195933 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.757390818 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.736143028 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.737320438 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.737760499 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.734155185 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.734663508 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.742081811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.734450591 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.736977401 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.741436515 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.740015408 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.734368333 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846875122 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.874968518 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.736137271 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.736361943 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.742197083 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.735460415 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.779327505 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.734896303 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.734762369 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.79149668 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.850991944 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.762371487 seconds)
  done (took 192.439134618 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.743837266 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.743605016 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.737805341 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.751297201 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.736508887 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.735667595 seconds)
  done (took 12.118111654 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.739758997 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.739483511 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.735534241 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.73627849 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.736282514 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.736068072 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.736101576 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.738680206 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.739720224 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.735637682 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.736812666 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.735927943 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.737211594 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.736081186 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.736087627 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.735963963 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.737888774 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.736452991 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.736067345 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.736015415 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.984892352 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.735967847 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.736285447 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.73883275 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.740011108 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.736363874 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.750470383 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.736001675 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.736554117 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.744641669 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.741026888 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.736952948 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.74034916 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.743679654 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.741455537 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.741112866 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.740502848 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.736789883 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.736536115 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.736105807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.737383063 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.736919674 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.738012532 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.738120284 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.740417374 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.744075638 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.741344445 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.751247078 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.737882493 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.737107157 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.738365425 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.738225833 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.73791405 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.737999605 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.741748372 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.744777725 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.742163537 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.738362668 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.738265033 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.741293088 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.743325099 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.738123231 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.741329201 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.742878934 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.745802775 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.738024304 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.741609153 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.743104023 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.73916386 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.738717536 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.738495481 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.73855013 seconds)
  done (took 128.136892357 seconds)
done (took 525.617003349 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.95232974 seconds)
  done (took 8.624516454 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.78331772 seconds)
  done (took 8.53070223 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.36213398 seconds)
  done (took 10.057694788 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.779960234 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.794154977 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.78318605 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.767124968 seconds)
  done (took 28.84680152 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.050564879 seconds)
  done (took 8.744489861 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.786145659 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.763569084 seconds)
  done (took 15.312281964 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.911203049 seconds)
  done (took 8.609634538 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.902707202 seconds)
  done (took 8.606800694 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.768264683 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.762375728 seconds)
  done (took 15.248350605 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.760095258 seconds)
  done (took 8.45136175 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.925397739 seconds)
  done (took 9.709447366 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.771007215 seconds)
  done (took 8.530383768 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.807980039 seconds)
  done (took 8.495440402 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.851218613 seconds)
  done (took 8.53688007 seconds)
done (took 157.97716743 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.753445155 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.750973842 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.748157006 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.747951985 seconds)
  done (took 28.683478754 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.777655232 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.776339321 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.779178329 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.786349521 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.778179669 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.774529932 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.767440989 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.772248042 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.785037912 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.775994049 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.774405623 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.776322341 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.773079624 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.76769918 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.774007837 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.772405261 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.782402764 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.773375999 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.765297126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.772182617 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.736934505 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.780095411 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.770128893 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.736367252 seconds)
  done (took 44.205242073 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.924373641 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.804483095 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.887312953 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.78606822 seconds)
  done (took 9.074127587 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.786707487 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.785911883 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.796046017 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.836016944 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.87106444 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.7959699 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.756434941 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.75243771 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.737792068 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.783490394 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.859046914 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.784128037 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.86990062 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.73055403 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.011109244 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.730913757 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.730333843 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.783913946 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.834242496 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.847071561 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.730672095 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.782692729 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.786432224 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.777283675 seconds)
  done (took 44.827688431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.730607604 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.739275248 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.739619007 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.731840122 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.729932978 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.729629801 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.736744064 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.730535827 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.751300308 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.731855662 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.724976145 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.727107794 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.732987638 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.726354729 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.728084012 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.738167641 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.738872027 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.725453572 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.729027283 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.73190247 seconds)
  done (took 36.318378191 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.722382396 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.568697619 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.064544765 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.971984263 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.719916546 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.721326439 seconds)
  done (took 30.429412064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.73095823 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.726072131 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.718340866 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.776264359 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.861095707 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.728465158 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.71904449 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.728995815 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.764829635 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.786006618 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.743632399 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.747199687 seconds)
  done (took 22.685487232 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.718167764 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.7186052 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.716723193 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.727419019 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.724783234 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.725026449 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.72380309 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.712138117 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.726792187 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.733274953 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.720480476 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.724082152 seconds)
  done (took 42.325516514 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790129036 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.587467538 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157627312 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173275521 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236319724 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913306136 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.709728326 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.797155025 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.710388415 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980400782 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027443849 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970284832 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010495175 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.657768538 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.773481795 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.236177196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055505091 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982121086 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795039616 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360173946 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872379405 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348249496 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.388189619 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.87619343 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971727507 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.895761553 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.02521923 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.717398014 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814988735 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769856523 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772209957 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.766510617 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037719492 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887176084 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835858817 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775734306 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.177873732 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.473376968 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.780390709 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.386203838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.298176598 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887970638 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77297009 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770022122 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69854963 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354747526 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871474414 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.770531879 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.467421727 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.768128299 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771794016 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840908799 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.767752111 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.575263014 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44984335 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036269145 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.76687456 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768422581 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315068107 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746593445 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451585134 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.706215725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.854685779 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.436475849 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219322006 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.92213093 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.775066203 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771398043 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696869389 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.43680294 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884684638 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906907497 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.788180866 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411391898 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060710829 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.168995265 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824494176 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048893691 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.703627213 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.705633462 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986945932 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.719489558 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698374813 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.614399774 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.694851361 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984132459 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803427282 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.372558509 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804738624 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.853316781 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.774702641 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783518524 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770724965 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982467042 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.663386244 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768785796 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.047010758 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030193378 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789053503 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.856897712 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70191029 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.77261058 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015708764 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.97429184 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.098584881 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.240982393 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854836458 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773865565 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.781805787 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.766200936 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.776228584 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.034041184 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827165152 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750645961 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889303017 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.725341439 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018939324 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801572361 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.870910142 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.143985682 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012639214 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.109049084 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025461687 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834218225 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.77577119 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771116485 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.449328234 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386366433 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.995452325 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.784857937 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337530473 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.779793049 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.771028228 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703955964 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.403370204 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.134014756 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.855370305 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988787178 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.783598751 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045700753 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701037384 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908466384 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.760227721 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.985331316 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.414644121 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.852180597 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019811735 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093731686 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.08577453 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779033023 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783583067 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862033316 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78653525 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.292246551 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017170708 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.771451192 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.772076328 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.446950974 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.835763539 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776667964 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.77800028 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30103489 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048119307 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.798707366 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.78105435 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65036717 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.78763638 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837670144 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77956331 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.780659516 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.295927075 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.282145449 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.782859512 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.443549597 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99371594 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779863734 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.447995231 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958670225 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.788723784 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045782797 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841523483 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.702676287 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.477197796 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.47709873 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77716079 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706913377 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.776900765 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779809245 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782429792 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.964043199 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.051681317 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828294887 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.465582778 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.883866354 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78447301 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.780625195 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780033047 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.295133995 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.783039212 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47262436 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784170422 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905821315 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.789537033 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706713983 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.778756652 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779760193 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777117405 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.733371387 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829089733 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.40073403 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980639673 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026087657 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.183281097 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788688382 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.405524912 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.893780765 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.796304394 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.078951755 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364020913 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.931553888 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855603321 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.783238064 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.469646308 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511610823 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330008931 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076186947 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094823199 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123415053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.241691848 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.111243263 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865848819 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005136999 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.300456809 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835502379 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.869431581 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714465918 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79319039 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.419837623 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137697292 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789158824 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995917713 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061929129 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.196901122 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915065194 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982469343 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80887974 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.655233749 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817579806 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.314833563 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796224153 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.225739058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984713477 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861793548 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.078675365 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863282128 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.779664226 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13225906 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825796777 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.481457709 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.135309848 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.224474356 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.273818916 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00618062 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.785640829 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220249743 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129824259 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.029953614 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.911432747 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708516568 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786231348 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.7864963 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.793627133 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.755216121 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.6154531 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.027047085 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786533741 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007262231 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.963716439 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159760624 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.683427397 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.784857075 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781429227 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030736844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.524573576 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947343384 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.164886947 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.37032224 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790687003 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.709083193 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708855323 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.48280152 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782705776 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747059455 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995699518 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.883886181 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.464025459 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.218590856 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09864898 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02041752 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.787993082 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045689708 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050893852 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.268798934 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795596614 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.872968863 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.074565635 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.470002126 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.996200493 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00997513 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339370433 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000122923 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237613949 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.759498964 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.781733521 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98919479 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.997780675 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.157679932 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95831761 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.492704392 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.79747094 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149343628 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844925582 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.158607874 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975618131 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.868360263 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789308727 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860583295 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786973068 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.789283032 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.790482354 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792945953 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.15902208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904936082 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.792559459 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856502351 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796522632 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.358186043 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.791541322 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053614898 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147953109 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112941957 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844673138 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.783327626 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783598069 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707251026 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911851855 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220783179 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055174403 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.898052248 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.915295913 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801962181 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.091518654 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.098791622 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101325265 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054073912 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.663417125 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476957919 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.912125144 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.99781836 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786901416 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.984561293 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003918728 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092567866 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345874809 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.981934694 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984098422 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053606565 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142456326 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778975781 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355294668 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.782301912 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191969031 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.812662509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.150056135 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034402551 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777341265 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895255795 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.776109125 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.977642517 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.224605215 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454527454 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121601934 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618953186 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.777331038 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048262793 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.103396697 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078397125 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851132713 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77930438 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.462434563 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907567879 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.665382479 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.991097023 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774813271 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978097965 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.485435666 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.776488191 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04541161 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077245265 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.773943468 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.708970126 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779206832 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.776348737 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988245848 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990583507 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023031226 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776622994 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.781650475 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.580638408 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049230985 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834429547 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700758762 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.775417076 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819683098 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000554992 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792794591 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.28861423 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.475122939 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05748724 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.68271501 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791386673 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.22643599 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162604739 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105516902 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.302044991 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999172662 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.330931619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.676676902 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161362474 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.776900566 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263727451 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163277499 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.776401438 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.33366523 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89220272 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.040517058 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101874875 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.787452699 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.47158933 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.803066909 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985362888 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.125195455 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704561954 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775858752 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.820363037 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.772283621 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.754672141 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781525225 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.708466495 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310116764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.624194227 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328843415 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.775310422 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.775798356 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.127132199 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365374826 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892216364 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790412662 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775610469 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.52393247 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.05876403 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01579719 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.32749445 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.874546161 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.775733039 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774147802 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.692108338 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957654759 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.960601924 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058135391 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.192724736 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.892753712 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77584082 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.979822281 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976382716 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.164532522 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908580065 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956372132 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897371423 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.712602586 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478667683 seconds)
  done (took 1617.541072912 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.80136741 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.789077605 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.794757831 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.793219898 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.805165647 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.794245434 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.82080854 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.781304709 seconds)
  done (took 56.08709092 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.774514633 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.789718051 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.778964238 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.774960969 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.779371783 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.774937476 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.935730646 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.786866223 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.778664604 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.779820354 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.774778868 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.780207759 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.56585029 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.798586836 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.776372117 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.801398758 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.79099847 seconds)
  done (took 72.957444561 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.775948117 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.147275387 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.836261557 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.776318181 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.860377469 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.784841025 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.759878983 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.821033912 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.778725741 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.032544467 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.079433751 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.803821963 seconds)
  done (took 89.165566936 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.790047088 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.778604993 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.778328735 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.779319875 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.778437664 seconds)
  done (took 10.621144637 seconds)
done (took 2106.624377323 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.001215472 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.969443088 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.024494842 seconds)
  done (took 5.702145457 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.92471455 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.977318364 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.089969309 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.094319497 seconds)
  done (took 9.805656352 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.087865765 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.154590801 seconds)
  done (took 5.958506413 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.104708683 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.818197067 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.156785596 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.785365982 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.789041523 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.790326031 seconds)
  done (took 22.086146856 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.785028843 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.785361504 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.785883568 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.78566055 seconds)
  done (took 8.857370735 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.782957664 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.472378136 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.783937283 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.796471212 seconds)
  done (took 20.55143205 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.973463166 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.90095639 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.927535294 seconds)
  done (took 7.51842385 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.003643616 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.579022643 seconds)
  done (took 6.299077087 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.944891944 seconds)
  done (took 3.661958391 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.81311963 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.055433464 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.282489887 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.303197071 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.386668527 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.610929935 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.11727868 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.011756907 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.231172942 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.241913438 seconds)
  done (took 23.77051963 seconds)
done (took 129.001041433 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.132076913 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.816227078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.990591005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.142835579 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.027068726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.993163313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.007333809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.132229471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.825576311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.811375903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.142996176 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.028165672 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.950340228 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80698953 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.95574105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.807454955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.021776554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.148379389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.828154127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.043437199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.0178931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.787637345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.981721154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.803523825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.022025431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.941137422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.332204769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.814373574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.970793442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.346044663 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946217918 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.180540633 seconds)
  done (took 165.474757631 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.788597649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.789397493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.78722833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.787747448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.273200452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.78940297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.790330109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.788137084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.243105236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.235332064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.78912295 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.257482621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.789042075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.788457436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.788528033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.788249158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.411208623 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.790530217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.788436798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.789383167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.788850449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.096271197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.790142696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.102319748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.405170246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.79100793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.789505724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.788754647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.788630185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.788932095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.790946378 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.790152871 seconds)
  done (took 206.684819545 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.789010515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.791949203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.790600151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.790543902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.791696292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.791473789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.789969655 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.790065096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.568082137 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.558935323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.791217424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.791260958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.793537805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.789916561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.791638694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.790061409 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.791021802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.791508705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.7913219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.791962156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.791945999 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.366247388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.818294298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394639082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.798209953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.794536283 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.790778016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.790913221 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.790501343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.791372253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.790121764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.791582734 seconds)
  done (took 217.796175223 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.029789922 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.79213207 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.792783006 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.704435953 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.792313458 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.792299456 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.772560616 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.041636928 seconds)
  done (took 18.445177937 seconds)
done (took 610.126221719 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.173415537 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.014905509 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.968488388 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.807728363 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.050824032 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.850881876 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.803834709 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.868265256 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.60928339 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.879715219 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.461951544 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.829773649 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.55849744 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.834088562 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.926678926 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.864014245 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.374390431 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.473955645 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.979228859 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.89037789 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.982618903 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.709499306 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.884964537 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.649348113 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.569650068 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.764566348 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.831273554 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.377120183 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.817699308 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.961475083 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.479379544 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.052391422 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.820438799 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.804438677 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.857325534 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.83836913 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.015914169 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.818381369 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.931411043 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.502564459 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.872802514 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.514204668 seconds)
  done (took 98.999744068 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.796680481 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.791694149 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.790993632 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.792111113 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.801353746 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.792048985 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.791610836 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.791998589 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.791762832 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.792320096 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.791823155 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.800741837 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.792128643 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.801109471 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.79160055 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.792226913 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.791584509 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.80017419 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.792063215 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.791701494 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.791777502 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.791896643 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.787679767 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.792082506 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.792936123 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.793060005 seconds)
  done (took 48.357530821 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.787517245 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.958100134 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.028134421 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.809835488 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.78883949 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.791431889 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.806785548 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.793303644 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.791506537 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.791553437 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.877417656 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.794327988 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.807280122 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.031451815 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.806717515 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.7883372 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.789716762 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.789734113 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.967053111 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.805045096 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.808206398 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.793755426 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.808972152 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.803036598 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.791594123 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.791188514 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.79260549 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.293055569 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.799540501 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.87852061 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.836395624 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.81408198 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.241382296 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.039737402 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.847217705 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.800224488 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.790115431 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.882369043 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.797152879 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.7911408 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.808135728 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.795965821 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.030293255 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.318693367 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.805132481 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.790734798 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.302733745 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.890665378 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.832204334 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.801933537 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.033179692 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.808692113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.791330245 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.79171479 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.827587269 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.802451083 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.790875304 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.158390837 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.803448496 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.81117554 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.795593987 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.792842083 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971804296 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.800346492 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.960014931 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.801064568 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.797533657 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.791559111 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.033478015 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.80868207 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.333683526 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.81236441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.79682457 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.886445554 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.969968691 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.33041946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.810076276 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.976007465 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.264722644 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.821473254 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.804415713 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.288439143 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.824092664 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.804695661 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.799255125 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.798024031 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.796830561 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.839608392 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.812892805 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.249278025 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.336754884 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.179923763 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.824525156 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.808289612 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.798916602 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.162252828 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.805800246 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.796328607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.030635604 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.341784064 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.812392819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.805012675 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.317309613 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.813973823 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.816493978 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.80595154 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.042624801 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.80927832 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.836625804 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.792538662 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.800184587 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.796083483 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.811466754 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.800793152 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.794634064 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.300420704 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.899753971 seconds)
  done (took 223.635442952 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.792956626 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.79794468 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.792933484 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.797323576 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.792444784 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.793692461 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.792346311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.791907529 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.793059855 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.792693179 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.791757617 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.794517832 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.794681534 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.796885064 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.799200948 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.795413101 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.395191116 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.793717918 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.793770033 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.794286671 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.432719754 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.797396927 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.79314541 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.794259335 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.793796413 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.795208671 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.796157538 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.796586237 seconds)
  done (took 165.213487789 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.794275485 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.907668009 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.814585245 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.823752276 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.801648053 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.79534807 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.892063355 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.81346677 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.800062459 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.794544343 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.795435687 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.855628384 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.806915518 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.892499694 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.827050189 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.903690167 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.899570981 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.80197567 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.795625864 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.795138744 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.823600317 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.804008157 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.856267713 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921429723 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.815519362 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.910210257 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.816630346 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.797312146 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.796630591 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.909539387 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.816632741 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.858522713 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.826714656 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.814252809 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.915457213 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.913565413 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.900884477 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.901069042 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.803010038 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.796722509 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.796872084 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.797889754 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.910620048 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.817283894 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.798753434 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.913087049 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.816896576 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.798818985 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.797052315 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.796936026 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.81035053 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.81524084 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.862133478 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.928100161 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.834440042 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.821027172 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.894688401 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.926298149 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.797705944 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.89520944 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.80535746 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.911333363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.818364724 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.798475322 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.800797543 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.802042523 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.827209676 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.903345607 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.903673916 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.805918737 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.895712177 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.834137794 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.80791811 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.798528111 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.798231225 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.912532614 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.91574329 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.834090634 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.833878333 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.829598338 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.810067588 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.798963073 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.800258857 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.816607519 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.803320804 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.914117655 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.917236611 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.806406281 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.799424455 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.799987716 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.799885008 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.823677435 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.921266324 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.835810752 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.905443746 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.866013249 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.874877525 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.815258675 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.813318155 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.804330077 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.861533926 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.815271106 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.810662304 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.098138642 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.859581199 seconds)
  done (took 195.175895359 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.17409497 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.848341416 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.856272514 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.115364685 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.144353798 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.709943289 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.844727961 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.846384152 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.869432596 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.067788326 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.917527585 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.863162933 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.833996402 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.820295391 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.844128261 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.870615148 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.855403629 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.186592004 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.068045155 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.988115787 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.83709193 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.154234257 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.158363941 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.425992429 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.896545282 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.23246157 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.410344862 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.007782912 seconds)
  done (took 59.583856274 seconds)
done (took 792.688920135 seconds)
SAVING RESULT...
DONE!
