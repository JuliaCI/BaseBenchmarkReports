cset: moving following pidspec: 28506
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.235661632 seconds)
loading group "string"... done (took 0.58700142 seconds)
loading group "linalg"... done (took 8.053161006 seconds)
loading group "parallel"... done (took 0.167668772 seconds)
loading group "find"... done (took 1.305739322 seconds)
loading group "tuple"... done (took 1.968523911 seconds)
loading group "dates"... done (took 1.342258695 seconds)
loading group "micro"... done (took 0.202957098 seconds)
loading group "io"... done (took 0.9371001 seconds)
loading group "scalar"... done (took 40.036190217 seconds)
loading group "sparse"... done (took 12.233407845 seconds)
loading group "broadcast"... done (took 0.957134699 seconds)
loading group "union"... done (took 13.823878656 seconds)
loading group "simd"... done (took 5.067166709 seconds)
loading group "random"... done (took 9.251302223 seconds)
loading group "problem"... done (took 1.705169959 seconds)
loading group "array"... done (took 21.420055872 seconds)
loading group "misc"... done (took 1.612400603 seconds)
loading group "sort"... done (took 3.330895392 seconds)
loading group "collection"... done (took 18.183389197 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540600793 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126397693 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139873849 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122598072 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152969169 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116230481 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124154966 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084469407 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.875126261 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14860009 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115077121 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417829498 seconds)
done (took 5.343740639 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174383524 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087938642 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079322294 seconds)
  done (took 1.210694787 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065800385 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126347311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067325159 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068875747 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071666526 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068294554 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068824223 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068077305 seconds)
  done (took 1.583034839 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073023148 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068705751 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066245353 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068248326 seconds)
  done (took 1.323796344 seconds)
done (took 5.412999616 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.797758977 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212861481 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188856521 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410920045 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134490684 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177937462 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647009489 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314183657 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191838116 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.093702435 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112288302 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388393737 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123922493 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635065551 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07796474 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095683028 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145186448 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449869102 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071494096 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085074431 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092671736 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130930334 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080330636 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076339526 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149305866 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070134301 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143003727 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083412288 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069086782 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255682582 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174915136 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660609682 seconds)
  done (took 10.424282022 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101932519 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099477056 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06933881 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125055805 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101059549 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071932448 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077562536 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069877692 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09303405 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130429999 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093247444 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108462315 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066691817 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069574356 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08279122 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197694509 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080267045 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08139008 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071215396 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083233916 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107452138 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079465505 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079774257 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079545151 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128590449 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16938841 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096265369 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097797598 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066930095 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081495501 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115249212 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130601932 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069383642 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067812292 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127649798 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096563173 seconds)
  done (took 4.55220912 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.006135263 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154464002 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093193714 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137802184 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066713794 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112838897 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06741953 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121082068 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241391439 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08493183 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.432810957 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.623021932 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122700323 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119897381 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106469112 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07067048 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072055844 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069831427 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.264469747 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100734893 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109569342 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085350199 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072234797 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071219737 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066484836 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073149043 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065145464 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070333801 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088799665 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076483352 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.330603769 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12368588 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069818872 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956686739 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168923321 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070202041 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108478115 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170246054 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09707096 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144718968 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069840458 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065464825 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.298192293 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067243408 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074878495 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069157884 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087846107 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111240154 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123866687 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06732755 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068945459 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172578486 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068594117 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066178093 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083982679 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.218006432 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153272797 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068629076 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301552597 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095022564 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074145247 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067301324 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.198038648 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119450243 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06879081 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068197614 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069244727 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070799204 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367128148 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066533475 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.08631403 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07143436 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080508913 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072117105 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071204606 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079147879 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080312779 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093111981 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068976645 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07632347 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06846752 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067575155 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067861447 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065437008 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095767232 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.390139298 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067291525 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072742462 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064915485 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09276723 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100678415 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069297534 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065973892 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102856994 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070558265 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066342436 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068946963 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120511465 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07100762 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112121987 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066587188 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.179583897 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097640741 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070507902 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10314922 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081377345 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071912156 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.468784877 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064454021 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06628295 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074523125 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067704716 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069792229 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068754803 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081226962 seconds)
  done (took 22.153279174 seconds)
done (took 39.180379751 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244250668 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085466834 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085581931 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086372836 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085780943 seconds)
  done (took 1.722975558 seconds)
done (took 2.841309257 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12594257 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100808027 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065693171 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09873608 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064635864 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10475407 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106038957 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08568293 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102083902 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066246147 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099698629 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066425289 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066233001 seconds)
  done (took 2.28924603 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082557766 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084574553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070985133 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084016351 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063773664 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083400774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082440808 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090173539 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082438152 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073748314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064340562 seconds)
  done (took 1.976316247 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082893361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085861139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070612595 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08324941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064192472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083669948 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083411891 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086934179 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083234369 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075297275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064271416 seconds)
  done (took 1.972493298 seconds)
done (took 7.345677695 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07635646 seconds)
  done (took 1.175053886 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.545087523 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.564950658 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078574762 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100556891 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197156551 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111079412 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236630091 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085105622 seconds)
  done (took 8.192293728 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097701235 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071695448 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08352359 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070469258 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07067843 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072551935 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071865119 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071139358 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07188207 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070957497 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070321705 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07260071 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072028256 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071527618 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071300099 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07097784 seconds)
  done (took 2.367964793 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09908816 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097366778 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076035608 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07761809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07487811 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074279659 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077089189 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075680771 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073138676 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074902816 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077818603 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075855557 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075642973 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065951146 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076359609 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078435748 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073448005 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076323581 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076975449 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07811933 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076959233 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06579216 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074907274 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076742747 seconds)
  done (took 3.062506987 seconds)
done (took 15.906432524 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106116047 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069912832 seconds)
  done (took 1.282425241 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078789877 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08095052 seconds)
  done (took 1.277363422 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078114721 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063217612 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084905535 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07403509 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065129355 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065004571 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084615695 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065737799 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065566293 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065925957 seconds)
  done (took 1.830079709 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065370208 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073869053 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071657778 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081005299 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072896652 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066820982 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0712844 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067077686 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076249171 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065246739 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069865185 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085619921 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069738126 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086458922 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070995532 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06963441 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071838906 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06895738 seconds)
  done (took 2.424616823 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063194282 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064570239 seconds)
  done (took 1.250724678 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066090065 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063390642 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067737307 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068181658 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064844922 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063953524 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065257686 seconds)
  done (took 1.577278555 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403949834 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124282899 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336924199 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072213888 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082365032 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26051217 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065852097 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071506225 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071501428 seconds)
  done (took 2.651451902 seconds)
done (took 13.419116086 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080637962 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088592979 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099351276 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415895824 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095841683 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069382275 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115754109 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183783465 seconds)
done (took 2.28357533 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208102564 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.816374824 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.482527574 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211805883 seconds)
  done (took 2.635943315 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344311245 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.197529435 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078904004 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068924466 seconds)
  done (took 1.828362718 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067214279 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072097557 seconds)
  done (took 1.272193514 seconds)
done (took 7.078839647 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064862554 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065961864 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066048176 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066157159 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.067365585 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066144655 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06662896 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066222481 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.065699351 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.066109516 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065884454 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06690405 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06667078 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066160876 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091318592 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065854309 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066417033 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066476123 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066111766 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065773269 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066456162 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065918633 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065929686 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066263516 seconds)
  done (took 2.780634136 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082149045 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068995533 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070662718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069969937 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07074998 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070383199 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07032393 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068590512 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070441506 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068082015 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071256209 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070725157 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068656375 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070509349 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068007374 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07090866 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070302548 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068242769 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06814235 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070850989 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070070255 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068278449 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070693591 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070015555 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071156062 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070499316 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068025707 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068448651 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069904537 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070419327 seconds)
  done (took 3.245526633 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065608868 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062388228 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063451741 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07147504 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061977369 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063577722 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062207348 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063178948 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063822797 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062558538 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063850607 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062580685 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062832868 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063406478 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063452832 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067123493 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081002231 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062954534 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062657186 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06302148 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066406738 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062430249 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06275507 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062463577 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065309358 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06210342 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063032752 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062491835 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06320806 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062273193 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066380999 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066575158 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06241881 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0709051 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066801978 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062477847 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066219028 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061872901 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062903619 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062293758 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062417491 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062803444 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06252724 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071634225 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063055069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064296835 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062555472 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064215535 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063300968 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06459583 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062310846 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062525701 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064656631 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063805541 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067829025 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062984371 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063268182 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062198133 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063408353 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062964737 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062366724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062208281 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066013711 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06351317 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080110453 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071437699 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062329929 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063834954 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063070652 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065418816 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063756003 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078247469 seconds)
  done (took 5.795961744 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085919666 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087928403 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066789758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068081237 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063316327 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063560471 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07203593 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063496548 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068134909 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082796725 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063415806 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068182719 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067868613 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067618938 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063635535 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068057325 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071952292 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063720854 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063125166 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067562865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063324781 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071363027 seconds)
  done (took 2.679419286 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146581894 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068644775 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106147387 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072364858 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072134397 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074258331 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06950718 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069799602 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070187757 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070460033 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070169805 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069806828 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072531955 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070176064 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069913165 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070010783 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069317534 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069947901 seconds)
  done (took 2.525506789 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078453043 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068671522 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088894755 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068851153 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069206788 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0683462 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073623026 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073865193 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068555776 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069075257 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073700827 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068889757 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06846608 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069086064 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06840037 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068558665 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068497822 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06932681 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074010161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073088005 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073136501 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074036738 seconds)
  done (took 2.720621813 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088020298 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067620544 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08478413 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070785575 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063525173 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063481705 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069592267 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068092534 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069300105 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067549445 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068075564 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06321041 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070647776 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068599478 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070984543 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06814852 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067971477 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0680571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067442479 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063623276 seconds)
  done (took 2.536821355 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084493803 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066763563 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066707883 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073364053 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06654354 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066856228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073006503 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066343641 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066694674 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087182661 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066629695 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067256641 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072916191 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070656225 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066632211 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073683406 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075414139 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072924549 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066764441 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066681815 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087464223 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066402058 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072838691 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066340385 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066984171 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066420976 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066523216 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070645816 seconds)
  done (took 3.127685252 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065315846 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066105222 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066382589 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066164449 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066515482 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067094092 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06681457 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066159722 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065921718 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067046753 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066160189 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065553338 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065815065 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066027519 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065923354 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067101701 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065948122 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066285743 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066168378 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066181717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066164474 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065960703 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065698405 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066421102 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065881707 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065836913 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066134981 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066390174 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06571347 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066224454 seconds)
  done (took 3.137298074 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075496626 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075553029 seconds)
  done (took 1.301580196 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063354793 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081124097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062301597 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074002575 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0717438 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066406688 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072780578 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07186655 seconds)
  done (took 1.710613971 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085753471 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077603883 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066213072 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078040147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076797214 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086502456 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128269396 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065485919 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076309955 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065938883 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084142325 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067675137 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076387805 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070385178 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075919065 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078884914 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062997311 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070968371 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067250746 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063541547 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065618797 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079095715 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075260295 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063547786 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071046219 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09281793 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081658325 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064508074 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072462891 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077686885 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075207235 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062258486 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065206282 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065875049 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06354205 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076784845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084430415 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072183381 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078167604 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066341976 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074180285 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063919195 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074028004 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076877567 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081529989 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065595669 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065447419 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062997156 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066322996 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071805771 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063164601 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069710453 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062815071 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077359179 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073904149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08065498 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064338528 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071141695 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072517454 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072539099 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07719151 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071422855 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075199808 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064897002 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081031937 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075282866 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077875317 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063279045 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062031805 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062964493 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079202756 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093681409 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074748703 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065155313 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065832191 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063001276 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072263128 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065224516 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074757409 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076747224 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064505307 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069547753 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077234637 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069417746 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07114232 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071474919 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063466486 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068426699 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066039 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085144717 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063846959 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063056251 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065646521 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08021509 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074562438 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064237875 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066179454 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076690612 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061959509 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065000393 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065778849 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070915726 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078287824 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069248906 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069056962 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077997673 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073337183 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069997331 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071772003 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061884509 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064760468 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067050074 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075830063 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061567544 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070895274 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067870873 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063961839 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075506542 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062410518 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063588225 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076067688 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075302029 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062282566 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061270582 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070639445 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06344425 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066155239 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077070819 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062241055 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061553268 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062217801 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071894178 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063384969 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071132111 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067321126 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070924361 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061295771 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.18903747 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.06954201 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079043864 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070356015 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072415214 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075922673 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072715934 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064706757 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078478729 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072883919 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06747073 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075741139 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069677701 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063101807 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067635342 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072192503 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064433432 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073078822 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067976341 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072593293 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065340492 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063915049 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070633621 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064972226 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06674241 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069556791 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06310312 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079984741 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07162853 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063888281 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062583892 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072480648 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066346257 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065110293 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067174365 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071509432 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067044133 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063642155 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064618265 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071425592 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073066568 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069025519 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065923138 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075310167 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082645094 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065507258 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072832406 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065357382 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067410496 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065957526 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079340068 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07503043 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068891251 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.0721552 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062644928 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075144115 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07804868 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067676347 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063805474 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068058724 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068992195 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077099442 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069114492 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065743164 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063677756 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070635055 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067573102 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072110133 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065111656 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067542208 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07087512 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063682229 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071527173 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066088529 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079791721 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072317613 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06310267 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067432421 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063593486 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07643086 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063519099 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066618113 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06764096 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065733216 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064181875 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071789316 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062160424 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077533698 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078485273 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070283594 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06764598 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064445585 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077113041 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070693293 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073684644 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072340736 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074769324 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080561742 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067547557 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071615249 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080408811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065259921 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062334471 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074497358 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066974766 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063979944 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064413517 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063974695 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072247491 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072163354 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075178141 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062127928 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071536417 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063514725 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067360878 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062800954 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072830386 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071199781 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068597087 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076684836 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06443308 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064401604 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071690982 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063883879 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064160026 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064863112 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070866858 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064434409 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069772137 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066427662 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069827421 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066436543 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062115151 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069586803 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063578602 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069641985 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07245399 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063298673 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069500956 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070533377 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064049065 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070290426 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067765973 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.198316725 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074380754 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072934303 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071350518 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073720099 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064390754 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078095557 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066087264 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078649416 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070717507 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062428735 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071638315 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072118794 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070729192 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066530967 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065487634 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071169312 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065354602 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071950795 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077564507 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06647869 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081372109 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076937114 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071498592 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071668026 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070985813 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071204806 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067520946 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069693811 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065949929 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070887071 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065177303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074095504 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072321222 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069553573 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070949881 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065721222 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070521697 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065583096 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062819068 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067759739 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067953883 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064843391 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078391527 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065476791 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067604751 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064333018 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066092829 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065023119 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062780393 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073057298 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073714633 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065665464 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076017625 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066988722 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070049278 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081702864 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062751407 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063912858 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063659405 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066855431 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07808612 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06627219 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079260935 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070295931 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068035043 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063061323 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065896651 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06404121 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062840451 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063172883 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073407503 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067172041 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065095144 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065401604 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072202869 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066140175 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078388494 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064716809 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069681607 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065825255 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062692503 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067505996 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067640276 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072329941 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066311187 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066692861 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062772434 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064910416 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069438187 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071382414 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064734676 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071058201 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077752119 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064753111 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072198381 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067426287 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062952548 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072227381 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064781496 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064568907 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067236277 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071715602 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070810777 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064175964 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077446131 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063275585 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071700117 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063317621 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062569991 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064527667 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064765893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065315779 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067671434 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065918008 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077871443 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062774762 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071057544 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069627866 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068157028 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074967034 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065055865 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070546744 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069648513 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065704269 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070467935 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077525508 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068391242 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071546432 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06429955 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069533392 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073377564 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06635068 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075786832 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069419474 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064068512 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069877646 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065212866 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063326077 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062431727 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061115381 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07178828 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062440873 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065492414 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066404623 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.196395763 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069258643 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068744661 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079486903 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073176408 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074130164 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064135377 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064067472 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066648626 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067080923 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070926643 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072813074 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075782194 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072151835 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069608861 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06499924 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081276293 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075167743 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073734439 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066383178 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073955834 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066004756 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072575661 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069477707 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070089276 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066132394 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07405723 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070941575 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068660301 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075796646 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07424454 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066258597 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070992801 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070990848 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069800259 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063782634 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065006309 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071985594 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074361316 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071905726 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065941764 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080925035 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066259442 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071190255 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067642157 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064815064 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073001525 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063318608 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071473286 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066297146 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066017972 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063569188 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068433834 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066510007 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072378767 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067672912 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063832771 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080377492 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078424418 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070277193 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06320109 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062797362 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063005533 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062081068 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067172081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06451422 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070485876 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078269322 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066092731 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065930173 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062383393 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063653721 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072579836 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073365084 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06313595 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063543836 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067858687 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071299904 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076905154 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064448181 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065078352 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072604785 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071934642 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063181055 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067956535 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06256549 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073233954 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082247318 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065786212 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071009255 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075199311 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078700859 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066062398 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063361139 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065578348 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07132192 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071289769 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066229305 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066117382 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084742552 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07253382 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067907327 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064053428 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072734623 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068359856 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07973058 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066346651 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066280935 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073959563 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0745449 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072876172 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075877483 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077123806 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071513889 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071912146 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064270705 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069695128 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063519263 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06736196 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065731476 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065527758 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069613033 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072228768 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069379187 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08141955 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078575151 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067407318 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062058597 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067604372 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067273116 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062738267 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065477924 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063130217 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06310712 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063627436 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063821796 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070265078 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073038621 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068231816 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064557705 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06316784 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061133021 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073445468 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070645114 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068811505 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061264274 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063957167 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065145799 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071407133 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066863545 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065713967 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069911096 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070126481 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070279529 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062458685 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07577734 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063512055 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070535015 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066421641 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064207972 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06491937 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071413001 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06779545 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065105067 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070923637 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070659345 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065518842 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062012449 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06167908 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073526853 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062247488 seconds)
  done (took 42.967162692 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106236621 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066160002 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065084897 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066323065 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076568092 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067109421 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066191755 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067562076 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067296683 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068628239 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06564171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065975839 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07303449 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080532167 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075438458 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069271765 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065536413 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066021069 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064420597 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064958356 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07075979 seconds)
  done (took 2.798872357 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070124101 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078195012 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076919972 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082267017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073876125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069476344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078266571 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086607056 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076922202 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074617149 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0780005 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069639656 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075102126 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074859978 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074954538 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069804001 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077750003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07369625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070009951 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077456831 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069265919 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075210008 seconds)
  done (took 2.891353376 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065365032 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063443709 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07059209 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062339798 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063162852 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062374571 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067503456 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061821646 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066699546 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067392737 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066524119 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066776837 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072174578 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063314869 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068437938 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063619085 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110187541 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068486501 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065938246 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066496818 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063967538 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072625896 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062481294 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06270289 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067032984 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068599222 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066476661 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064022995 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065352961 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068083352 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066117873 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063845107 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070653825 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070021246 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06636581 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066300559 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064169183 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06443527 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062731292 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0624344 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069897737 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062753005 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066861051 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070862301 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062549311 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061986786 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070494438 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063772167 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062683557 seconds)
  done (took 4.531909049 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075242255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113543753 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070169764 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093787285 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078942566 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070321465 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06911852 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094887359 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064050986 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06463329 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077851021 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078342631 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066231218 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067448131 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068434091 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066027985 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066735483 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06516919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06901967 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065432597 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069531319 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070253615 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077196722 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077993609 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067306709 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065121661 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065675585 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067687715 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076981769 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069745616 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067437082 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06797322 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077624688 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072358961 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067355646 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066283377 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078945825 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066423912 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067228789 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065433301 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066886117 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068735058 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071849876 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080957487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067647433 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072526251 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06733937 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064971828 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078311282 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067010548 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071519934 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080361494 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068629229 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068063253 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068622537 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079189252 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067319912 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065954361 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067791933 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078845961 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065454136 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068676362 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080184503 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06710502 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071265124 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079134571 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072450492 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068301808 seconds)
  done (took 6.282021944 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07368591 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095592167 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082537156 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081978369 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075422796 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075946865 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075684554 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075890587 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075278931 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079704795 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075681422 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117681998 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071815886 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077587096 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076122939 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075535959 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07577705 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075589708 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075282908 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075184835 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075483094 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082095136 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075736772 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081595217 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079199126 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071423285 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07498768 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075632605 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08188294 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075503801 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07889888 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075914241 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075864496 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082142314 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078933493 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075329396 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065417783 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075793953 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075426717 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075172169 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07156725 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081922078 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075627738 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071131824 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075592742 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075346251 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082197687 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078706115 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077405202 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079264931 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075591898 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081872989 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07544904 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075592131 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082176502 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084470316 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081716757 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082307079 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07564769 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081716484 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081732697 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084668713 seconds)
  done (took 6.138268196 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078941899 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072016477 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08372862 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064311998 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063703086 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074869729 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064238185 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063912966 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072763955 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076001211 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073960579 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074741601 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077281196 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074917306 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074529678 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077457546 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074571239 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074892882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073052887 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074710447 seconds)
  done (took 2.750460839 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07702814 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083194743 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070140072 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074511893 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069688338 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074147115 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068844157 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069873901 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069737212 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070156086 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075984181 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076198182 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070509172 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074544972 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075766305 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074547561 seconds)
  done (took 2.448064609 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084623226 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072362608 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080253892 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065519897 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069013624 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06456369 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065054092 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063440399 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06430158 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079108338 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065109183 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077412498 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065456598 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064196006 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064678514 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071268487 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064645821 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065665879 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065213278 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078553318 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072862743 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066905917 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069639557 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065071968 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070810216 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073006608 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066934976 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069247742 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065173348 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065770124 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071391523 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072895165 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065372019 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06585353 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064534788 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06514842 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065190742 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065576897 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071159119 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085021498 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064216689 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07059122 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065480185 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06642283 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064579863 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065582516 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064957204 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071072901 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065339502 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070925539 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065121796 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067673776 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065519527 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072896894 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068136023 seconds)
  done (took 5.051187361 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079444059 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068008332 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063852803 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063587181 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069062607 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069966728 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069105146 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070163648 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070144691 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064473142 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070158728 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068932211 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070372351 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069602387 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070373486 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070189134 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063989729 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070000174 seconds)
  done (took 2.530331595 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073176273 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068609355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073717226 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068608706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068494732 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068454261 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063945191 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064060577 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064514006 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068828682 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068650491 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06885963 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064334485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068253011 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06892686 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068853549 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06881624 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064081982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068996095 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064226673 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068329003 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063925471 seconds)
  done (took 2.767385096 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09591843 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085626015 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143246483 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082106054 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088694597 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074610248 seconds)
  done (took 1.850812404 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092754852 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098975198 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069495086 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069465279 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074638694 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072386681 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072776799 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072672634 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077170146 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077431974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072874994 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077756835 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077390303 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079749915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075108894 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075384906 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072909285 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075279648 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06972132 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083021082 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073065008 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077593687 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073183651 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072600601 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072678575 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079172395 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077242384 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076989005 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071275228 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07739868 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075594165 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072904516 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07771239 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077632038 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069671534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077698993 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072621706 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082287518 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075104002 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079376656 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069296483 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075193199 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077279121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076912089 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077773477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073045387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0772162 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073342029 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073277216 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08412441 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075326154 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079281917 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075063056 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07785817 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078041558 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083956912 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077603484 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079177468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075683692 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077843293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079704898 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075586592 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079016453 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077909934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075017705 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079576206 seconds)
  done (took 6.34049071 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105560761 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069837918 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073753116 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077642786 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078855918 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072939477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072917287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073237285 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072952345 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070281683 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108344244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073333712 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079522617 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07957496 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073110194 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072908507 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073297182 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08004306 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070548733 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084307079 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073509964 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079379896 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079575074 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079454938 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078311114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074684643 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07224185 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072731168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073000101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072405332 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076703199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072916376 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07928858 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070244744 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079624279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072765204 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072713746 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076813594 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072938151 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07534372 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079446033 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082724068 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073054189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072529193 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078108513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072786834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072887034 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070175351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072795045 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069807366 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077630643 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077912812 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077800759 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079027996 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073164409 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073068603 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072858396 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073092576 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072854903 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07548895 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08045688 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072850952 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083931499 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072973112 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073264093 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079156715 seconds)
  done (took 6.33584166 seconds)
done (took 128.380333533 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210406768 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186133432 seconds)
  done (took 1.669783823 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07424107 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106755165 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085574208 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137502487 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071447548 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106020156 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10487832 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084082615 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07172549 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071990617 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07239076 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075057493 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139024736 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071890573 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071787182 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074331982 seconds)
  done (took 2.708325227 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104527393 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172462018 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112370195 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071380814 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107331855 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079949269 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071495723 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084954305 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07720981 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071280838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07784657 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075306032 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071234214 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07963024 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078839799 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079939665 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073095502 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079473742 seconds)
  done (took 2.861781326 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103655121 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09713843 seconds)
  done (took 1.497258418 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.179965845 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136528486 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206141637 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346076962 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157556519 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.428531356 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143342113 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14128699 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116333603 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136235057 seconds)
  done (took 3.283339111 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104574514 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170953839 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298782345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124265458 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078533901 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094176463 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123824036 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083845539 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086802377 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085279009 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084250476 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078579567 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103621323 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076997139 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076071643 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079528161 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106770644 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07525602 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076350738 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079032803 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106462172 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070027544 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076583947 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075231757 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080926658 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081075453 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071415484 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071644523 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080789168 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077779004 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081823372 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090729509 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083259747 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108864983 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076012874 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.11015548 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080855033 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078726584 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077685209 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078647 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082525844 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082205803 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079429405 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078835209 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071625428 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079160804 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071697294 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069931154 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082546911 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071736608 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080352173 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079093575 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105402778 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071204843 seconds)
  done (took 6.169522892 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109492615 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107393703 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071549317 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113364453 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104638594 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072904561 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108967718 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102125729 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111712515 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073928249 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071664222 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073014956 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082174441 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084319161 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116337531 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107628088 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07314703 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070613469 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108001149 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108349343 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070356109 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102260858 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101135843 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111201855 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070777007 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073169492 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071585041 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07353991 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079379631 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08044254 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072286987 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082178416 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085515763 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077299999 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068723592 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069084062 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069835 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078893816 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081300638 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081243986 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079515814 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070614315 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071036804 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07225649 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071897549 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070234169 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079753415 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081143825 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08015835 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070863064 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072991962 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071186725 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071783099 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08043869 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078574069 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081367852 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081156612 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071423996 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071226284 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073738808 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082288888 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080002418 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078557456 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070290066 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078606226 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069045644 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08062696 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08472369 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071621766 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074549551 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070870422 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071077142 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071841129 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078733229 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079216992 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072362604 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071318802 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071025248 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081186084 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079270258 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071123587 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078469752 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070183079 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07082016 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072589503 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072185875 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07859769 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080342795 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072626562 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071086577 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070610876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07049005 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069845726 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078647601 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080762571 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080015399 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079261171 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071792705 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07950328 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078382377 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072146472 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079080225 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070485071 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071902991 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072090508 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078734493 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078436617 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080285912 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071255913 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070717786 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078024398 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080206499 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070558826 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077221467 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08008086 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07823194 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069644197 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081050198 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068094445 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076310089 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067686374 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076655981 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203503778 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082856655 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072629285 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071508866 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071755235 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08084896 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074086963 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072015306 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072837326 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071716885 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079732023 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084420548 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073634407 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079990873 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080372371 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073904606 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080231526 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071264647 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081147588 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072667992 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072689208 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071048605 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083957172 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07206846 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070908265 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071278638 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082099584 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071889792 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081815248 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080194251 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071095231 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086597502 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081837673 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079674895 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082095509 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073967493 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071720584 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071084931 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070982623 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079447289 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081274868 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073027818 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071022683 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079146366 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082510679 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071096073 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079548089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079782414 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08041654 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07182579 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071635571 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082585173 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080601063 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077184433 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077495828 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077805523 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069718409 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076992618 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077516841 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069773485 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085633661 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072465626 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084160939 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080712701 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078338654 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080645172 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081333142 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080068897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07950095 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082478215 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06891607 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071735894 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080170531 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071181175 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071379052 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079913861 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072745783 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072535884 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085262461 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07008651 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079225915 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069253434 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080708939 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069585881 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071785411 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083521487 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069476748 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070359887 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078090007 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071608597 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078186421 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079241633 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076871297 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069175985 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072974112 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078423723 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07774011 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069374568 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069068763 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071096381 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079006827 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078501057 seconds)
  done (took 18.861138083 seconds)
done (took 38.361938547 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211317038 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158914848 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18693046 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116206974 seconds)
  done (took 2.072463158 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107906625 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100019474 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091344407 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067584636 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096703111 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067765703 seconds)
  done (took 1.860903523 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285478029 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198987281 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181367957 seconds)
  done (took 1.994908841 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213566278 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192722591 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461136551 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282292476 seconds)
  done (took 2.578582311 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140124328 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.084847537 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064348725 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082907714 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12464845 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148952176 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092700081 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117337794 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075668831 seconds)
  done (took 2.313078906 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146187174 seconds)
done (took 12.317218863 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112911355 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077744745 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.204055727 seconds)
    (4/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.262324637 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.16120068 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.124719723 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095410336 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074843676 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.205020932 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070881127 seconds)
    (11/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091028116 seconds)
    (12/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082032726 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.18351079 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136320833 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.405189423 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079055904 seconds)
    (17/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087221277 seconds)
    (18/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087534336 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077400326 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080495829 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.234835395 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134392741 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07748511 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07713492 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069668049 seconds)
    (26/309) benchmarking ("sort", BigInt, false)...
    done (took 0.199880492 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075375406 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104585136 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081269171 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072497864 seconds)
    (31/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067316769 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085482088 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086699478 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095278279 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.204677772 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106724628 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.201553736 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077267409 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077461407 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075845011 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 0.149228355 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076191241 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.133038661 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066795682 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07655008 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076636483 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106286313 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.159975434 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.184983401 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196822895 seconds)
    (51/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073489247 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.232915774 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137042653 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.069395703 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076400136 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08992449 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086142219 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123550022 seconds)
    (59/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077599569 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077457493 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067319362 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067424834 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.181450283 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076650315 seconds)
    (65/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072883017 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067520712 seconds)
    (67/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.188717395 seconds)
    (68/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095614666 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.231321306 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06732391 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09356625 seconds)
    (72/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.169911571 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104840721 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.095097007 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080239043 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118112166 seconds)
    (77/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092485021 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078699399 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.194350184 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.225976929 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067443338 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070130195 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075629904 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074310166 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07935904 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091742415 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.101321443 seconds)
    (88/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071431957 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.232183 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129033734 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.229979235 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089809816 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066492914 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.358465333 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080284985 seconds)
    (96/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.136049841 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.184962542 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075890851 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177256127 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.179253216 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094875334 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189271461 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125704968 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.198690381 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075368367 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076847152 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227696049 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071687574 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176664798 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177900945 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06762177 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075503813 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179282711 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06862184 seconds)
    (115/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070346771 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075198437 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06913574 seconds)
    (118/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182864685 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07213456 seconds)
    (120/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068860097 seconds)
    (121/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.176290649 seconds)
    (122/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07160529 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079028624 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076385829 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077385157 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148745443 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147756103 seconds)
    (128/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142921482 seconds)
    (129/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080949072 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079732289 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094351325 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070392695 seconds)
    (133/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070515679 seconds)
    (134/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097259993 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068703208 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078682204 seconds)
    (137/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.130376452 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093473686 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068071178 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068867814 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072179783 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.129501633 seconds)
    (143/309) benchmarking ("sort", Float64, false)...
    done (took 0.134111508 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086748024 seconds)
    (145/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.133910054 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067906995 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075409499 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067562229 seconds)
    (149/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081109737 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.078924415 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076763609 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068378143 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069185011 seconds)
    (154/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.081680477 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123029455 seconds)
    (156/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.220564879 seconds)
    (157/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.130215993 seconds)
    (158/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071170165 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121523067 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089360919 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069165903 seconds)
    (162/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.133084707 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133010359 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071821117 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067071782 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081206816 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06826427 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082333369 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069034198 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136244861 seconds)
    (171/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080655468 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.171441915 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068536278 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068398163 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089743537 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197233467 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079814185 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143483241 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069661765 seconds)
    (180/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081586821 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068094431 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093878823 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076721959 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07870972 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06886456 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067380163 seconds)
    (187/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.140130554 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110075511 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.169593502 seconds)
    (190/309) benchmarking ("sort", Float32, false)...
    done (took 0.133885763 seconds)
    (191/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084530047 seconds)
    (192/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167810874 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066664579 seconds)
    (194/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076570212 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.164846242 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089166514 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067702919 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067135421 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.068114491 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091704572 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19737447 seconds)
    (202/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139582178 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068660894 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.12692019 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066713698 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067355518 seconds)
    (207/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.068183528 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068305695 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084698346 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074250478 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11366169 seconds)
    (212/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.227747382 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070640415 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093437785 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.082650642 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069363063 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069992691 seconds)
    (218/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.070346218 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.070109485 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076237241 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093707367 seconds)
    (222/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.082378594 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079542791 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08761715 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068372658 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140013185 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069729036 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.069037415 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.081659527 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069378129 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.128817053 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184634173 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.188595747 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076712811 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068676877 seconds)
    (236/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069147717 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068077885 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073046372 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076983651 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076686526 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.226040142 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076941283 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142264404 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072627204 seconds)
    (245/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179776745 seconds)
    (246/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068166573 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068642229 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066936456 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078137014 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068114796 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090151224 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069817944 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068193957 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071718646 seconds)
    (255/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069272341 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184697696 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074811469 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067946664 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091074401 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.1370904 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068238557 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068663758 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.069553632 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068442076 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089890098 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069512248 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120055492 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077702099 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068703382 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074852072 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076263959 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076729276 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069643629 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134198098 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068986333 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071716234 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074645304 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068120021 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06885714 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068590672 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067448922 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068422643 seconds)
    (283/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069144802 seconds)
    (284/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078421829 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069823166 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076243268 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140342084 seconds)
    (288/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074590648 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089469001 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131469889 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075023913 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067917999 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068301719 seconds)
    (294/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.081083328 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068711959 seconds)
    (296/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069087113 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068517065 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068122844 seconds)
    (299/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080653258 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068690952 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127695167 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080640174 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067962201 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090245423 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06728841 seconds)
    (306/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070193667 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068632008 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078587568 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081022399 seconds)
  done (took 33.688702816 seconds)
done (took 35.032668996 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083581779 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101220951 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075406478 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094940499 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08258794 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09818391 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075899048 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080733447 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083109485 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082290326 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081161453 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074869008 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077053101 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077399388 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075429295 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100477362 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081934304 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076263527 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076703817 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068015737 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076562719 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06792237 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06772135 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075457588 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079838379 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075752688 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077652015 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077049876 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068085363 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067970864 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073242845 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077479334 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067995206 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080460078 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076946629 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076287302 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07804952 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080662672 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067829275 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068759217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078472738 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067850845 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076209773 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074712321 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073365887 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074517833 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076281593 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080328875 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099902971 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071930632 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077475637 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07895576 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079820926 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073441281 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073297508 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076141119 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074200696 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099935121 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076843345 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07321996 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07797764 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077332581 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074200553 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076700321 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075839011 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078954338 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080796741 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074394635 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077948588 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074877579 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067536313 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075935874 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072586225 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067772506 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079356259 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081197549 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067174361 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072279509 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076082486 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076675569 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067738438 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076210061 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067103223 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072778197 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072982579 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074426937 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072915368 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074941771 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067554676 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076254901 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075626754 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076063815 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067176335 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080714706 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06794913 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074343671 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068363187 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068121164 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067083734 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072968898 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067302885 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072889704 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07629565 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066635626 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071929574 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080771992 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067475756 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074974738 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067182895 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067431801 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079152203 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077717011 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067468174 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07280365 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066749839 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072681636 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067103498 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067409829 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067087848 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067212125 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071711103 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067194854 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072344163 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072579023 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08015905 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067235895 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07270399 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072467823 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067358275 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073431294 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067473077 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066905801 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066463087 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080349577 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070595446 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065185669 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070372194 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069479212 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073600848 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065752515 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075996374 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073267489 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071574373 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072960279 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066090385 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077566723 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072408233 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070775047 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064728162 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066766238 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066102927 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066659756 seconds)
done (took 12.762323154 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070190626 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117626392 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094057037 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093262857 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084282745 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06939763 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076228405 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.093305907 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070008927 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098255813 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091088506 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091391258 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111441452 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068085571 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068552986 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069571028 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070104483 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081006538 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096557951 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090638633 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107518287 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068939023 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088201662 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089721507 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085351239 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092730789 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069436777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069673032 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071563816 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089832576 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093530606 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071831224 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069607756 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.092547668 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085787546 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079786051 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067584657 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076447863 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068099635 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06838198 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070408889 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.089954477 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077484321 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079465581 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069804613 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076467286 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070488903 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085211408 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086691929 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07514168 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081964525 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090740164 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070285107 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083621722 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066631746 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082918681 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076284515 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067421334 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067196248 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072835152 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06685669 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069637441 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079838556 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075783581 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071457268 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08093686 seconds)
  done (took 6.689526678 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084768881 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094523508 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086618642 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086361139 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068120894 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069349544 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068731567 seconds)
  done (took 1.992182154 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067683806 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090492748 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093864456 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093679848 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082907654 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093563662 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077151812 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06887117 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098843602 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068139168 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089427855 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100601053 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072912251 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080993864 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094995251 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069122278 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094021953 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069306434 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069940781 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093466838 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074148846 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096561021 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080795851 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069776885 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081731298 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069501954 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102215853 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077346432 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070609178 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070987231 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070294275 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097150238 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081659076 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083269477 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070404446 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084419115 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083096283 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07247734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080185404 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078747371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082661908 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070337153 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068388106 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070322953 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072882863 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080800007 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067850304 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070549531 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070632026 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088936937 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068084054 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082176095 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073090861 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075707664 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074659707 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074902235 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077249336 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070551745 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088743006 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070188027 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086704828 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085855241 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08245429 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085861763 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069382176 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081507524 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082290464 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070122264 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071293955 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070732359 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086032868 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072767752 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070836184 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080942009 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068919975 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094106908 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093844793 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069054367 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0825683 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070046364 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070591263 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081069769 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093876069 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075050035 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070000359 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073362122 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071204243 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072238878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067728613 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072998829 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.07036081 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074456747 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07050077 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072850097 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071566563 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085484095 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068144831 seconds)
  done (took 9.023791944 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069889183 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068113503 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071224463 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070777312 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070081989 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07045448 seconds)
  done (took 1.884055958 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091386417 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069185298 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083630908 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070514535 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106266255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086162409 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08666886 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078687396 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081268139 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079614793 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083325945 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086156999 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087495481 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070375231 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083420721 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069091834 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086463033 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074908548 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081488996 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073022075 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083512617 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072782494 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072903934 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089767853 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074048653 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071658844 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080379902 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081648303 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081212193 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080022308 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072795581 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074046306 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077461709 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079825476 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086673339 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077215817 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07015746 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076484536 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072288785 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073947461 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089071129 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072556353 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072888033 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076812776 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079321535 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.0791722 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074687069 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076507505 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082581063 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074318939 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074124929 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069165521 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072905367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075602003 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075936818 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076975333 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074156474 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083266474 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069893901 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075105595 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068067283 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07137171 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077436474 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070828054 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075066669 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074288311 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074570295 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070127792 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070242724 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067924789 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074364334 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067827813 seconds)
  done (took 6.99701688 seconds)
done (took 28.04303027 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513048465 seconds)
  done (took 1.926144405 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620093024 seconds)
  done (took 2.061904572 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.995180396 seconds)
  done (took 8.4344327 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.381007125 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.451622267 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.751586596 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133667017 seconds)
  done (took 3.197925277 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715649844 seconds)
  done (took 2.167184318 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237426255 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22986947 seconds)
  done (took 1.932241262 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347109802 seconds)
  done (took 1.79222694 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.075800444 seconds)
  done (took 2.52206695 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236795557 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163447193 seconds)
  done (took 1.85277886 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44916314 seconds)
  done (took 1.898839291 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.204710896 seconds)
  done (took 5.657099634 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225801495 seconds)
  done (took 1.711574792 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234163192 seconds)
  done (took 1.685720357 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.752526744 seconds)
  done (took 3.203230643 seconds)
done (took 41.498054432 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083063834 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084509796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084762668 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080931926 seconds)
  done (took 1.762592193 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074655263 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071378971 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076109742 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072391293 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077167941 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072550223 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074531497 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074912487 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072251197 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072786884 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072757504 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07223614 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075249906 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074363161 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071505657 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075999096 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076322223 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072906063 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075674843 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073118472 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070924804 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075347288 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075498175 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072180001 seconds)
  done (took 3.223322549 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078480312 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072934473 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078389694 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0745409 seconds)
  done (took 1.765283065 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076929883 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088020607 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088021508 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079100985 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090457597 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085927351 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068735087 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068826482 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070416124 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078505187 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067797134 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095413628 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08805392 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078790896 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080930971 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065247895 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066038744 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084390687 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07927405 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078400092 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070214466 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079022656 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068623692 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089884347 seconds)
  done (took 3.344472027 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081348709 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067311912 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083179629 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094578057 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095710887 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068462583 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082896566 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096025006 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138319234 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06859499 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073956834 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06833921 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107098744 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068626937 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083088437 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11113878 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115169065 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072099408 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100980941 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06816 seconds)
  done (took 3.211323938 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08323112 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075305857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072196023 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067964099 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079031762 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075268893 seconds)
  done (took 1.921732389 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06905039 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069001071 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069484725 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068858594 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074241159 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069343243 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067997546 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070078504 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070216041 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069163058 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06871465 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068548989 seconds)
  done (took 2.299027809 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19023299 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06900743 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068735382 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066464791 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073181853 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06851842 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083883774 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069806849 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096656318 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068996966 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068795656 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071321836 seconds)
  done (took 2.460170662 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19175915 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076161884 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222656427 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147172645 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103679597 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111846125 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113697655 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11039374 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134925403 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099979794 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155604595 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16055655 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104703383 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130956854 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089314247 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120684685 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143223656 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153431295 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098355275 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153141638 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136065053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125009782 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141689599 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096445978 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1009656 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111501205 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071467133 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079925498 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158735156 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123313582 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137439318 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107182117 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091645906 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16716464 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164773915 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133483528 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14280263 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0839955 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.120890382 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131751808 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192866608 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089140745 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151711661 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104406992 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079551428 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124056159 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111214216 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116315185 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101364003 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088168569 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278818234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176705627 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131414975 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085344057 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118545366 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106606817 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112097424 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115930364 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169509552 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148832559 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121928188 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071731631 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110510202 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145939992 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129005953 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106474902 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118203336 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090415596 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123458282 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147229184 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118650657 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13500287 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112497291 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086743128 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117087374 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131535213 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121521184 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161386306 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11791164 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072464912 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117883362 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097503643 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080492929 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145150255 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075609591 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167242745 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098399409 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.123140736 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127560405 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106949919 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10680421 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151104628 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134425087 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100047702 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083391346 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09936069 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113040002 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135831178 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085496159 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105399095 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109971274 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079035537 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1276487 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074802574 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117021676 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094139364 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115333126 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121004573 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078689215 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116582253 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248911848 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100668799 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126387982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151424426 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088129308 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081654455 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160707052 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120353093 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103442213 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139436045 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153824881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119509893 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09745462 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140859958 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165521937 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089143274 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153656622 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100902149 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083375685 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10404447 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118540443 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108923847 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119830981 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079627495 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116113056 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154579383 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073783035 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095314919 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127170022 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080325039 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080241321 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103617133 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101865259 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094489196 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097065714 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101356194 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129730307 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11764679 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101821735 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118735908 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093939955 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155943881 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085882799 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104024079 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103075372 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072638856 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126901196 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149855154 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079024877 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15129588 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117164987 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112205172 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115214512 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082707313 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131705758 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078756053 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072633525 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132665489 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110535352 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105593332 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14318304 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258969755 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122891096 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120006929 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128833231 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12622744 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126176067 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105320608 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089395033 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113048398 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126941792 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073871273 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091797021 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082620964 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102991293 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09394852 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083411281 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13521714 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119081153 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109154164 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113081207 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09581949 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142950672 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078955991 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120797648 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119135399 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094641065 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148400469 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146203929 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128530203 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100526795 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130881194 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073323271 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074901081 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089066036 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120143389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083871223 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083674968 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111135257 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144194038 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121938712 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131718908 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120295302 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113605185 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151343446 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072456261 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118593023 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138402538 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117461279 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102562259 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089657564 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096987707 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137224208 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101742156 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170650807 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109485138 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119524835 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149114118 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099799771 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078364503 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102100139 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125864286 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098908438 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.286738615 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097262786 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087399719 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107110318 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078367752 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099197957 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124653656 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116675477 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133427489 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109387795 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127740074 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077718898 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109180262 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11955683 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118997163 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084342365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114858538 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158196348 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096524421 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11427932 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141881477 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075937509 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133215648 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162677754 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137568368 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084535099 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10364005 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118399414 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122631664 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114555727 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132588664 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103152554 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132641 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109266473 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08438982 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086553458 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095008606 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102038346 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.11156276 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103110635 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112522047 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095227979 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124091454 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101672841 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109099982 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11597432 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099333979 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095662737 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095395736 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166706378 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115071466 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160504988 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098326018 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136541564 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150393246 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075316016 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078322836 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079561364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130983042 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083884581 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123934299 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108894242 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111138437 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116221079 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128952592 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093425111 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070231852 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105311849 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124059049 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116958594 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093737487 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099943996 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146264262 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114684046 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077550457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107675908 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111745745 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100213335 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154724564 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078539485 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103472517 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074094024 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076063216 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113035947 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130800979 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07886934 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.096230624 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107334128 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100328299 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112288019 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089796872 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10204845 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119062147 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1280915 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111296132 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.084043296 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101258262 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115243736 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134439858 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096337881 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092733004 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151432005 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133713055 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.140068227 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082204975 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105231524 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104435847 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10123462 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120713279 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078278015 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138580796 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076205206 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116566174 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090874325 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081698035 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112244978 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.102436488 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0815647 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126287192 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105320356 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077698726 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074221747 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.364169754 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118665294 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105317081 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078924771 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138018132 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076819803 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134144622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167331341 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08259861 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106911422 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097841352 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084498928 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102936284 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103490654 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087841126 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10032167 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160919708 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088370511 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141942807 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130715601 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11130806 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133787585 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10488337 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644321254 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081199655 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148120714 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114189478 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168753999 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099149933 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116609794 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110424889 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119329636 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137157709 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101647217 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178637362 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126534817 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116023549 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078883032 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09996226 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100531488 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087534036 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102550031 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111583403 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110062126 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094790741 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115750007 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118864709 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083111589 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096008327 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148937103 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113836932 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135579342 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132568383 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084279151 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114569458 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129580707 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079597214 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113667082 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141538022 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252605145 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097279411 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080859546 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09717718 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162140104 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071517698 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150053134 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114527656 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107333743 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113791483 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1086824 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126348683 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102766653 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119001114 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093783401 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107042426 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14772822 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084430758 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079537931 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104690226 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109267132 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097525682 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097513453 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096705261 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145535195 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07305008 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096268242 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112006892 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136188554 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159263805 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101546763 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080787448 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113031236 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11271387 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110008799 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116870752 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080108793 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08133989 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08182194 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.100516935 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.123013725 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111937172 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115161846 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104024098 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150280798 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08374403 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224476102 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095268798 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103883956 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090570607 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080165231 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09529502 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095673589 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102709009 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110174807 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165928673 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094469711 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090088967 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092192754 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075207382 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083490479 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122608708 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107966392 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113677788 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102414765 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081520122 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101617838 seconds)
  done (took 57.035807227 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122903901 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.102955692 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102937153 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146558024 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121632073 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200190044 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150863252 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189204708 seconds)
  done (took 2.787063767 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069461433 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094362625 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107805018 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086647897 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069958183 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070994671 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233009761 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084235598 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070199081 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095046855 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081157463 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071941688 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.450122032 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071787712 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070448443 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079920417 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070548856 seconds)
  done (took 3.461791597 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385552601 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616196189 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349547919 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07911161 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.070045317 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090572136 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.234891294 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138950621 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083421255 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542606469 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.373241996 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133300263 seconds)
  done (took 18.695212745 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082606997 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079274175 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094269498 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093651676 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080728398 seconds)
  done (took 2.024470503 seconds)
done (took 105.463961046 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08189827 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.435942238 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072353212 seconds)
  done (took 2.13002316 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.0908113 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092405467 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092101304 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090230476 seconds)
  done (took 1.97257918 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075158145 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079999539 seconds)
  done (took 1.753724873 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233985293 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.181134158 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100238271 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083859641 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082314421 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084089951 seconds)
  done (took 1.855192889 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07340811 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07587133 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076136731 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076389477 seconds)
  done (took 1.902949715 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068257147 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069143701 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071269086 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074595128 seconds)
  done (took 1.884731808 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084570504 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085039559 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082382357 seconds)
  done (took 1.853282837 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101716934 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091109634 seconds)
  done (took 1.795415718 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081890698 seconds)
  done (took 1.683074547 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090505452 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099196899 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136406247 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119188618 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142771306 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118736651 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087699745 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089406567 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082192985 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089354428 seconds)
  done (took 2.654762445 seconds)
done (took 21.677844562 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07920478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375399664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363099604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094815645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67127022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359924766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.974636657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097539907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146128713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071615805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089541323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651887829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961650796 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33192057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951643711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324621164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652960574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072428527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071361291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07125555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.959372941 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071084702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071088737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071952704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651115348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376218944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071936911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325419697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072266458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074349744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360350003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073012281 seconds)
  done (took 16.17238471 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071265913 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121496523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076955396 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089376947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07414699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073640173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075134778 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072613482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124925827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072169646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089760263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07144617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07537694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072286419 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092408938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072585712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073467064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073544486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072756816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073273164 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092854894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072795186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073088924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07365711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072828067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085475326 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076517579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072872056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073244414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074919569 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075899243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073853952 seconds)
  done (took 4.153216548 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117687854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126321072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077474904 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111573523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116732957 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074198502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152050205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098308284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132846864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071964149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090427493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071740782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107527989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072710083 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093591758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073389045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073654704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073609798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073232218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073715457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094266785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07281752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073094391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073671427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07317968 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087818322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073048509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073684548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073473078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075090289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076401829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073577323 seconds)
  done (took 4.421694577 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07091632 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073883242 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081176583 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084697149 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070312825 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072848842 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074409729 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070264868 seconds)
  done (took 2.222337116 seconds)
done (took 28.580608939 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079083881 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070650579 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073975999 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090017721 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077334152 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081823077 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068070857 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07763879 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074650065 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074856328 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076250755 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069926042 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073024571 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068052371 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075459492 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069545073 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084567321 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073839856 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083720107 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084848779 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072493469 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076356371 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078068881 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084064209 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084039864 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083886342 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079662846 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076157101 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071104648 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073616187 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074236953 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083720186 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084538879 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084593831 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070132931 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070375703 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074983844 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072100412 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085379849 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079263493 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072608401 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079663689 seconds)
  done (took 4.831875351 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084637711 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090382309 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082803158 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081307156 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095335061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085803751 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090860469 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080436458 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081309504 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08942011 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076611525 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08372757 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081467884 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076451643 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.081390348 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078172643 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082861809 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077791722 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080900792 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081751927 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091836347 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076049405 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090800715 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08283808 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078089137 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083901174 seconds)
  done (took 3.797211336 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074520205 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086170276 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093726438 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147905125 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115939216 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083135146 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084836479 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095800284 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100023109 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071621235 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076354455 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096375247 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096244646 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077546829 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07150613 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088057256 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087386404 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073262847 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07833338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100649292 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092720553 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089077033 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097817064 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088027745 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070548991 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073793967 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076376029 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087598528 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073833762 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082660483 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075050721 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078218238 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072551047 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081824496 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073498588 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070233811 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096534213 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082629818 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08384968 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071659728 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081216974 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072483399 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096833572 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131533008 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070165025 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075269512 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074457574 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08228608 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070305455 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09898646 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082879784 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07036302 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071965408 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069838976 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070571757 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073340416 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072853533 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073619892 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081419012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077868126 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093147834 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075687717 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088642188 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070057902 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08096769 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069819021 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071797318 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069526601 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099534136 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072514613 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116458809 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071794408 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069467969 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082075731 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081037591 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077306327 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070525967 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088826981 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082799373 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074854477 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079822596 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074005242 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07467295 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101179448 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070895071 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070225064 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069168759 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074451717 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07428666 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071414868 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083442546 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070253833 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07448159 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08926228 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070180802 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072552586 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07491592 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074181939 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070048716 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082195394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074719262 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071866027 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081375621 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071556371 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074412549 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08457526 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078203923 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069534263 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073173347 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074681491 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072436342 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071934118 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074743109 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072757363 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077510082 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077491087 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077156621 seconds)
  done (took 11.054395478 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164711859 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161552778 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073739046 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152869351 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079812905 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083841174 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156378657 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09866931 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071611267 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073096633 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071642953 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113520952 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109155211 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12192913 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084084345 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072365498 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094535081 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118795819 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15828876 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151012992 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094130684 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079779909 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074001919 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072929057 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073089224 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081303053 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09087059 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080178028 seconds)
  done (took 4.519349327 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078466604 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10426066 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07590363 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094545775 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091005919 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071992673 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073050056 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072741635 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087835242 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080725824 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071963817 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076826691 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075552038 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075064218 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07250838 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078315991 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078597251 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070754793 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075511089 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07732544 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081693477 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096717638 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075536993 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071558419 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073787303 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071276842 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079981249 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084177872 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071820541 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108594238 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069054043 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076286274 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088801425 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071894683 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070665677 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071812619 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071311099 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071383018 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072687986 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069898357 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070038914 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075237562 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070137393 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079326723 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085471402 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073700456 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073432675 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074255495 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074736903 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069098842 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074366641 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073915035 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074597997 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079284565 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07579792 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074654179 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072492322 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099586078 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077425406 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071137483 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070811162 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070801466 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073608666 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081455819 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086836452 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073732463 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070045772 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071862719 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084633603 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084799715 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070857447 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076095943 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068845787 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073094661 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074705349 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073668397 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072678887 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070106246 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071208564 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.075281884 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072291375 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071067988 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07043504 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074532546 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069509596 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069935183 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071765567 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073165931 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080092014 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070947382 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075272226 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072420901 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070188368 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074602433 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076971804 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074872586 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082673219 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082676172 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071722069 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070233365 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085585047 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074400112 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070526396 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077353732 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076082441 seconds)
  done (took 9.660884906 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092036344 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069591226 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085921365 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094972656 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081619668 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078318974 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081725955 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071692603 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08813982 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076679422 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079255275 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070218627 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082475841 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081704903 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071644362 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081964002 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074643047 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089526556 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086429825 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070291924 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080120446 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084232145 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083658753 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085960089 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085326988 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086680108 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08367028 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081613634 seconds)
  done (took 3.953606601 seconds)
done (took 39.436009824 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.708607077 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.871475125 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.690295341 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.888964289 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.911216503 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.710357064 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.784475789 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.685194609 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.993405932 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.731058338 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.020246017 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.936260078 seconds)
done (took 64.697441198 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.719394382 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.848567113 seconds)
    (2/2) benchmarking "String"...
    done (took 1.935223476 seconds)
  done (took 5.482676177 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.924154926 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.559674873 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.930014422 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.685606568 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.692645285 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.966290804 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.480087362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.15844414 seconds)
  done (took 30.101011258 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.88024875 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.918056992 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.399677921 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.433381696 seconds)
  done (took 15.304078213 seconds)
done (took 62.250577196 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.700108411 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.736857753 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.735136296 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.685637604 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.7789889 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.699158231 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.814208627 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.693647953 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.688244733 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.696428475 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.690633259 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.173525178 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.694978133 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.780624827 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.688099542 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.68660906 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.737655134 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.16876352 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.840637156 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.697434877 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.69144806 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.726430941 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.692770427 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.698270996 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.704844473 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.688203218 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.071318359 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.694625348 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.306980236 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.693641893 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.727419737 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.999272978 seconds)
  done (took 200.708391957 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.686855892 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.779552647 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.856765954 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.714561816 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.156777847 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.883403653 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.791153984 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.193387353 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.695228149 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.692856959 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.907435791 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.693697051 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.929788541 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.635246372 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.72341201 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.690668977 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.808282571 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.940760323 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.732117952 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.850050778 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.701028181 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.778350596 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.742745065 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.895908347 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.73835963 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.779142571 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.701977946 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.715766933 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.036227566 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.802001625 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.706389552 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.737630175 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.907519025 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.563564686 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.709572906 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.705280038 seconds)
  done (took 167.210414961 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.878303973 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.690004494 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.688337923 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.691563071 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.701281041 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.689009231 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.812648539 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.693819587 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.347723417 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812038643 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.349105931 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.747282443 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.68925447 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445795527 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.688709213 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754034688 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.700663346 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.69035057 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.703894146 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.715846535 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.694658578 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.691337514 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812299589 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.707395611 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.689588656 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.698327781 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.689927692 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.694649378 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.077017527 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.689369641 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.724506984 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.690592139 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.696864854 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.946102222 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.691022853 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.691532459 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.517875971 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.806462367 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774979394 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.691858561 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.69560646 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.69004594 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.907694053 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.690529531 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.692407377 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.691094178 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.69072361 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.803106706 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.695503207 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.813196691 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.695974002 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17448856 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.690619917 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.691401124 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.691734289 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.071343408 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.26838088 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.696367226 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.694000949 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.691904217 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.693095744 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.697955161 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.227170369 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.762019527 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.692840944 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.692361416 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.696906928 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.691845326 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.767551844 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.696944994 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.8349806 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.707160337 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.921270938 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813887718 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.698674171 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757488611 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783134711 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.69309838 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.692440811 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.693049031 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.691789969 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.773470981 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.692435956 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.693648151 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.779097354 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.702212112 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.694437766 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.745769141 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.761186638 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.693028168 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.506420603 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.697949694 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.693347261 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941532575 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762485262 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.692670022 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.692634752 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.773872387 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815683395 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.415403533 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.698222434 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.078170411 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.77001808 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.694033049 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.807403299 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.699404055 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773549178 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700212586 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.693988847 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.695126341 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728239496 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.695084039 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.705774862 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.693888798 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.068391031 seconds)
  done (took 391.607635461 seconds)
done (took 763.091544589 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.296995407 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.263467068 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.359895827 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.282903352 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.254385403 seconds)
  done (took 13.091021526 seconds)
done (took 14.725071326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.771961399 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.781489292 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.717196771 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.77636858 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.715738999 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.77555029 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.762582977 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.717481017 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.744062911 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.717098 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.745563633 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716573467 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.70329734 seconds)
  done (took 24.279121312 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.92610706 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9368256 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.76242998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.925453796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.736952235 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.922080598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.863971041 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.842530227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849781787 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.708280126 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.705596337 seconds)
  done (took 21.814612385 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.94035845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.928104351 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769302137 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.927233106 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740384813 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.929881519 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.850966689 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84369426 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84157729 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.708651115 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.706832686 seconds)
  done (took 21.821969496 seconds)
done (took 69.549805862 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.699186782 seconds)
  done (took 3.334387447 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.717762862 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.872323586 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.699909065 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.69994486 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.698732488 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.700490096 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.699631004 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.699994927 seconds)
  done (took 15.424896804 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.700119402 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.699531869 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.699298074 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.699126755 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.698744044 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.699537521 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.699610121 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.699785257 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.69960574 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.699534051 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.699175657 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.699526377 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.699127039 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.698521602 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.69986287 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.699345206 seconds)
  done (took 28.827608968 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.700430702 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.699110532 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.699872782 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.699590608 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.699381422 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.699801678 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.700024462 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.699831362 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.698794996 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.699570984 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.699766317 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.699538379 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.699365598 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.699553338 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.699309086 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.699304264 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.698938589 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.699919591 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.704023445 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.699657577 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.700882895 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.699562452 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.698512723 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.700243964 seconds)
  done (took 42.433510401 seconds)
done (took 91.656487683 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.386450025 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.289676429 seconds)
  done (took 9.313144803 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.704666138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.701360538 seconds)
  done (took 5.109280057 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.699992003 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.701078098 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.700776569 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.701120435 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.701922 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.701053295 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.701286416 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.701087099 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.7011809 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.701535554 seconds)
  done (took 18.649255796 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.70269188 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.701773011 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.701550969 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.701925938 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.702059408 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.70218299 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.702121716 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.701682047 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.701927248 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.702021642 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.701905792 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.70217757 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.701381401 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.701814492 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.702183913 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.701369307 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.702189387 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.701885075 seconds)
  done (took 32.272955896 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.702635905 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.702671388 seconds)
  done (took 5.044102512 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.702743367 seconds)
    (2/7) benchmarking "second"...
    done (took 1.702042114 seconds)
    (3/7) benchmarking "month"...
    done (took 1.702672508 seconds)
    (4/7) benchmarking "year"...
    done (took 1.701746557 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.703236138 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.70244866 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.701992462 seconds)
  done (took 13.556340254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.703185374 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.860782457 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.922777054 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.316129628 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.703055316 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.706270196 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.640805055 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.706076177 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.707665908 seconds)
  done (took 18.905948564 seconds)
done (took 104.489330936 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.515228899 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.701628594 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.99320012 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.757213073 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.733097173 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.039861683 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.706974173 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.981647561 seconds)
done (took 42.069232626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.739827747 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.456686965 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.484210699 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.813256711 seconds)
  done (took 15.394337154 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.700990062 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.002859185 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.727971595 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.519292902 seconds)
  done (took 21.594584103 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.067316724 seconds)
    (2/2) benchmarking "read"...
    done (took 2.04754935 seconds)
  done (took 5.760227969 seconds)
done (took 51.132053168 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703346965 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.703619889 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.704741434 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.703206969 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.703864435 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.70364194 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.704527952 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.703192827 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.703607307 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.705277587 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704657753 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704469518 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.704676909 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703906466 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.704163628 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.704528108 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.704330911 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704862943 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.70424278 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.705152982 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.705179214 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704757421 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.705043649 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.704635686 seconds)
  done (took 42.544135566 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.705342314 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.705503373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.704703093 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.704610241 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.705856432 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.705888889 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.7050812 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.706661944 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.706765238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.705151086 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.705226182 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.706405427 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.705532821 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.706065413 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706021145 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.70615204 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.706245431 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70578661 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706220837 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.704919363 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.706588176 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705943513 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.705820115 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.706064136 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.706431401 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70559851 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.705369395 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.706222097 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.705755945 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.706330301 seconds)
  done (took 52.817429135 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.706605517 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.707117807 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.706601088 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.706796443 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.70635195 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.706893776 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.706326146 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.707604807 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.70674733 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.707258208 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.707127555 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.707408997 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.706485042 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.706973846 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.70661744 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.706680621 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.707116445 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.707732698 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.707046057 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.707313351 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.708110852 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.707897933 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.707348143 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.708054436 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.707938336 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.707486705 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.706603685 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.708355509 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.708337905 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.710850804 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.70826577 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.708225004 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.707785849 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.709416402 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.708097708 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.708040015 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.707798777 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.708456704 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.707472448 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.708108215 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.708118097 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.708139577 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.708299605 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.70898305 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.708338542 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.709197685 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.708249017 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.708221232 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.70822834 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.708130839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.708952577 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.709239602 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.708943793 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.709382058 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.708671421 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.708680757 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.708889053 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.709148006 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.709422718 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.709280028 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.709004525 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.70883693 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.709138403 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.709554287 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.709973802 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.710045342 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.709538334 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.70949334 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.709681009 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.710330152 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.708739428 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.709986162 seconds)
  done (took 124.63573444 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.70993565 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.709992793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.709912766 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.710134555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70986042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.709575755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.710331925 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710960919 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709236216 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.71018639 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710118435 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.710009589 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710693833 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.712531677 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.710475404 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.710380219 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.710744359 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.710582567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.709960434 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.71139325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.71090382 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.710009807 seconds)
  done (took 39.274964147 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709252988 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.71027379 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.711134004 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.71099835 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.711920239 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.710549227 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.710640438 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.710909135 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711027952 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71095747 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711503759 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711784373 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.710867362 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711980767 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712879003 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.711618963 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711232481 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.711681496 seconds)
  done (took 32.449113117 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.711588545 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.712244834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.712121853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.711540377 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.712142144 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.712461237 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712423995 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.7116204 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.711969226 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.712379887 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.711477698 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712027961 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.71191187 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712273754 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711934105 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.712311347 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.712424502 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713504249 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713299927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.712865865 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.713004174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713355208 seconds)
  done (took 39.319223146 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.712194827 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.713340032 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.712745813 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.712935603 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.71287568 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.713503271 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.713395191 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.71375874 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.712937103 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.714173581 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713470163 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.713075464 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.714010454 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.714829281 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.712964227 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713315064 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.713766517 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.713990186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713689008 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.712791534 seconds)
  done (took 35.918012142 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714671094 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714989661 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.714899677 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714510892 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714686106 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.71410545 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.715316876 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.714263583 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715389894 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.71559323 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.714765367 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.714907269 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713891865 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.716042002 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.715167305 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714114794 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.715315188 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714514242 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.714722809 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714791834 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.715368345 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.715275471 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715668236 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.715952706 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.715513475 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.716213091 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.715726026 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.715464934 seconds)
  done (took 49.673177333 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714437538 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.715909734 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.71609402 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.714438491 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.716628265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.715748198 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.71529196 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.716246036 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.715619078 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.71450527 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.71548933 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.715743554 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.716187472 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.715456225 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.715925008 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.716297045 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715871193 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.716608202 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716679187 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716111175 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.716337179 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716326188 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.71668095 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.716485144 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715646122 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.716199042 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716139886 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.716883345 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715377999 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.717128717 seconds)
  done (took 53.130316277 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.735437831 seconds)
    (2/2) benchmarking "in"...
    done (took 1.737285503 seconds)
  done (took 5.125872348 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.717418337 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718223674 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.716585967 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717072968 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.716717182 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.717166756 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.71640829 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716856358 seconds)
  done (took 15.389387468 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.718195311 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.716886642 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.717323618 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.717136466 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.717835273 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.717989098 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.724960187 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.717333187 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.720467431 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.718215809 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.726211045 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.72661857 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.72204245 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.719397281 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.719209338 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721541947 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.71837565 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.718128655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.718872599 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.718117603 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719161888 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.721149931 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.723064842 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.718151324 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.721865976 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.730731321 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.724155174 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.718967473 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.721343962 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.725280661 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.71955513 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.718753033 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.719088537 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.718414801 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.718182043 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.719728684 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.728835513 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722289491 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.72595065 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.719076453 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.719843477 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.718313072 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.721582324 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.723125018 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722608002 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.719357323 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.719172198 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.719802379 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.719895176 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.724224532 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.727126722 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.721838424 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.719608233 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72397345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.722494273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727582709 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.720786767 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.724225041 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.730320378 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.730896751 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.732683177 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.729448806 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723354693 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.719927784 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730357693 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.745975662 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727722011 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.719584954 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.720125314 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.7208049 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.728244031 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.733000854 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.731469126 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.720645016 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.721329504 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.718656927 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.723494042 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.72072369 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.729223518 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.725485753 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.72223341 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.722373376 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730824878 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.746414471 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.723116211 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.720726084 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.720970237 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.723011303 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.722141516 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733319541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.721805654 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.720825507 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.721914888 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.723031733 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.723726109 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.722041698 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.721346512 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.724009605 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.722071174 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.721876735 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.722253005 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.726510538 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.733585772 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.721883177 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.722799538 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.729810307 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.722485091 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72460261 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.730002804 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.722541849 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.721947968 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.723341064 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.729996745 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.722006578 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.727964445 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.731765829 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.72303087 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.726390753 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.722103527 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.722856339 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.733456163 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.751973438 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.723131521 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.722874301 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.728759637 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.734864756 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723154408 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.728563163 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.72306127 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.723782037 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.72298384 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.726393599 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.723219042 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.726343449 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.723813491 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727519516 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.723622049 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.723726584 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.723532765 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.727596876 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.726429046 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.726757918 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.726793046 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.727978001 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.725015285 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.726963886 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.732178335 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.724849731 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.72677447 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.726337959 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.724386775 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.725502005 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.727801505 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.725014076 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.725702994 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.724423286 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.726392886 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.724743812 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726966727 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.724145821 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.725876379 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.725692748 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.730801239 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.725816801 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.730932826 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.725865516 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.724895098 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.725119596 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.725991078 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.727009279 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.726247058 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.726250966 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.728660472 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.73352827 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.726802707 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.725096379 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.730153923 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.726697036 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726231717 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.725626868 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.729260257 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.736049862 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.726582871 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.73381135 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.72610026 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726139044 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.72607761 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.72881086 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.727752554 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.726433926 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.730714248 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.733523024 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.738442498 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736946159 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.728037809 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.730258808 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.729106643 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.730968258 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.732018072 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.727300224 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.727484786 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727930082 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.72943215 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.72675384 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.730381535 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.726781794 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.727801747 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.727136302 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.726989707 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.728077644 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727985528 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.730331902 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730214865 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.727190113 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727648324 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.72835604 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.729598144 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.726554282 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.727587367 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.729538909 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.726961409 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.727939637 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.736089966 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.728051182 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.730037868 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.7311517 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.729541549 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.727577347 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.727288631 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731692692 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.730375412 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735292729 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.729072808 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.730389556 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.735932698 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.729562709 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.728492142 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.7331557 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.728699418 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.72834889 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.733929206 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.736927258 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.728980184 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.728741388 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.72988945 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732149851 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728780387 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.73667045 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.729736699 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.730356657 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.729122368 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.730903947 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.73003365 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.732232965 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.730827776 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.731075981 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.733732038 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.730132731 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.729818096 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.732740627 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.730122132 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.729486233 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.730010428 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734117379 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.738467655 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.736494193 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.730506366 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.733699101 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.731457415 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.734486883 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.732934642 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.730703045 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.731285826 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742193454 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.73938139 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738425092 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.73425999 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.730626654 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737073095 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.732236817 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.735804314 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.732902729 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.733599823 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.732723831 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.731989282 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.730705499 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733980578 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.731717877 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.734044268 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.73388366 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.7343267 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.730668108 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.733171314 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.732325666 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.731083898 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.730968202 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.731888476 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.731800995 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.735126398 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734977907 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.732521407 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.734778965 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739620175 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73430332 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.734545836 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.734225866 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.733366818 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.732591744 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.734126961 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.731892726 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.736197961 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.739901638 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.737110302 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.742706753 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.734404064 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743671376 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.73286397 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.736766559 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.741274071 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.732545151 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.732844029 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.732889485 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.733326148 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740745234 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.733114049 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.734084589 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.737298664 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.733596177 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.733039836 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.733329063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.733883022 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733649401 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.733612661 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.741438273 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.735878467 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.739264339 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736359064 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.73303641 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.734294563 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.733459785 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.733999706 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.73770988 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.732815183 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.736188827 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.735266955 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.734951619 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.73425033 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.733572218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.733387906 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.733966256 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.733181586 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.741968293 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.734926241 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739510755 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.734816196 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.743115325 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.73374613 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74255486 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.734406907 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.735789155 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.734554385 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.73502038 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.737294512 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.735044793 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.736584303 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.734680467 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.736205447 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.738728274 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.734986151 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.738596945 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.737463719 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.735852862 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.737048649 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745934297 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75871076 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.738061701 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739048329 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.735817805 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.738690813 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.740359227 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.734976744 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.734833825 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.738986094 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.747170553 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743261294 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.737112232 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.735272498 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.736824498 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.735474146 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.735267663 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.735420958 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.736126433 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.735792871 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.73665735 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.735599506 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740696106 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.735706079 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.737860753 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.738522979 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.73769612 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.748206639 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.736965548 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.737852594 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.735921462 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.736282822 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.738886191 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.739669429 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.735642597 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740306517 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736833989 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.739865675 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746207082 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.74402246 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.740462321 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.739048084 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.737848798 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.73978898 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.738331851 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73700297 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.737604504 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738522008 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.740662079 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.737801153 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.739079015 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.737553139 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.736950169 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.739228772 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.737175453 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742322491 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.748164743 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740087564 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.737472862 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.739227427 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.738322899 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.73773355 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.740886468 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.746500285 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742569534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.750770129 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.747250111 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743098727 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.741424475 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743470733 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.748957894 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.739393355 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.740822295 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.737740346 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.742320158 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.739545108 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.74461175 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.738988062 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.746524747 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.7412173 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.739127857 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747396685 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.742715725 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739264746 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.742587844 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.745819295 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.740335996 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.73909061 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.739026236 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.741036708 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.747764317 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.742594158 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739941788 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742436307 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.738444927 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.7417426 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.74426831 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739844971 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.742312478 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.738945356 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.74277624 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.740236044 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.738831028 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.739995378 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.740750246 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.740364367 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.745264491 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.749140571 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.740307248 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.744912577 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.74207819 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.742915504 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741559699 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740567833 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.740773071 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.740718412 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.7410275 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741201051 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.743200995 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.744699408 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.742024338 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.742722466 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.744930718 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74197187 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.746137441 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.753375987 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.748767221 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.741075619 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.741716574 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.744074809 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.745900944 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.741447721 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.741161472 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743490085 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.744831234 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.741977298 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74142145 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.743557018 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.745981791 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758770004 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.740918348 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743286556 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.744690359 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.747817716 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.741579721 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.741236592 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.74208278 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.744929177 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.746521126 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.750219812 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.743245465 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.750965566 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744231528 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.743787948 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.747208292 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.746406622 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.752039751 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.746927057 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.741693175 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.742695828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.748548391 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.760454194 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742342123 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.752012719 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774968489 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.743624484 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.744929305 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.743094194 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743875571 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.743730058 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.745785942 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.743808441 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.742876414 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743527882 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.743951705 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.744681564 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75217964 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.746680488 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.742667176 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.744395314 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.743922595 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.745950133 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.743591335 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.744330323 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.743589357 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.744611126 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.744497473 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.743999829 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.746244621 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.756044018 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.755310584 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.744069473 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.743147228 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.743624905 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.749558915 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.747893337 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757177964 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.752533451 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.744808064 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.745168207 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.747551095 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744843325 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.744264656 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.746354136 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.746492338 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746881038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.74400631 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.757012838 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.752934151 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.750853052 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.744951707 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.745280606 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.744925782 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74765898 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745278368 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746119082 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.74826325 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.746865626 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750319064 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.744694577 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.745298602 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.750363888 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.753377698 seconds)
  done (took 1035.29238776 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.745565316 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746349049 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.746045301 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746498048 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746424617 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746048017 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74566693 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.746517108 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.747044847 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746582768 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.746418159 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745853613 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746760581 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.747051707 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746310779 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.746767505 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746601112 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747194936 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.748255546 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746953298 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74770602 seconds)
  done (took 38.359676027 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.747560657 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.746857186 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.746562504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74664893 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747505808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.745668586 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.747454573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74713672 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.746972492 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746056765 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747183771 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746928454 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.746555072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.746508348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746511597 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746352497 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.747712843 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747074457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.746450365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746931262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.746267407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.747801107 seconds)
  done (took 40.113014871 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.748353581 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.7475677 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.748559102 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.747618815 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.747226648 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.7472614 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.748237087 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.747017458 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.74929448 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.749120762 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.748234127 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.749277287 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.755908664 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.756836952 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.75138283 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.748927778 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.894537893 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.748423894 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.74929128 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.748522501 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.748362641 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.756197033 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.749360877 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.749319127 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.749791924 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.750186766 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.748807053 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.749271685 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.749914212 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.750582495 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.753250261 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.748471611 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.751860144 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.753842928 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.749549282 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.750802779 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.754032885 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.749315339 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.74903687 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.749705748 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.760220173 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.77299533 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.750136179 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.75736461 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.749465865 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.748933193 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.753546214 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.757993812 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.749308006 seconds)
  done (took 87.627312023 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.749969847 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.750131186 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.749962041 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.749639801 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.749470597 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.750106712 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.749670425 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.749901582 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.749525549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.750738636 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.750610532 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.750450512 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.748822964 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.750379994 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.751150064 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.749901493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.749548204 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.750270597 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.750842445 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.750447038 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.750268516 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.750551773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.751675771 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.750994653 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.750635958 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.750926088 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.75052285 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.750815797 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.753287883 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.751062958 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.751731545 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.751657448 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.75118764 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.750973792 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.751847844 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.751106274 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.751537605 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.751123714 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.751487336 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.75107453 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.752087055 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.751998183 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.751154779 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.751694077 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750952181 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.752236833 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.751761735 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.751733607 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.751787296 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.751599725 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.751691554 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.75218201 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.751910455 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.75111949 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.751556327 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.752827316 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.751761226 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.751190722 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.751811543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.753212769 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.752409331 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.752222084 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.752717368 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.752106964 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.752047787 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.752849837 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.753923328 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.753064716 seconds)
  done (took 120.77075771 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753383917 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.753832886 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75378084 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753030788 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754132525 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.753520326 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753979796 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.753721222 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.753910739 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.754604975 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754438528 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.753208366 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.754139249 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.753773807 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.754908715 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.754607504 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754646888 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755904501 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755524207 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753647892 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.755275891 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.755518808 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.755357571 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755598413 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.75513914 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755135706 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.75483621 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755348705 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755664777 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755195312 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.754547027 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.754852548 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.754213551 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755496905 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.75534798 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.755585016 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.754569876 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754822637 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.755395674 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.755050167 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.755344948 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755845187 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756023298 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.754816961 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754981233 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.75623449 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756020816 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.756644599 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.755666749 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.755578164 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.756356083 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7559168 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755826695 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756460177 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.755918271 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.755315536 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756093926 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756316122 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757128455 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.757392288 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756383031 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.756437733 seconds)
  done (took 110.508788589 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755566256 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754619789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.756667354 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.755031753 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754765074 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755790005 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.755197166 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.755889899 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.756841313 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.755612068 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756717925 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756351348 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757325028 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756371348 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.757069241 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757720492 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756756889 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.756692054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757187502 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.756454369 seconds)
  done (took 36.815610763 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.756722681 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.756678346 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.757225344 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757895672 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.757176946 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.756907327 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.756867372 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756691199 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756388607 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757290146 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.757722094 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.758549901 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756812085 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757005495 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.757306287 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.757399927 seconds)
  done (took 29.807332181 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.756105304 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.75832251 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.758147286 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.757296972 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.758005199 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.757053275 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.758113009 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.760327097 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.757499375 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.757673347 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.757404141 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.757467341 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.758543901 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.758250673 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.758854114 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.758489925 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.757491921 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.758150406 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.758243082 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.758984437 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.759444934 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.758041992 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.759375805 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.758440171 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.759454778 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.758760717 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.759551787 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.759121856 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.759988996 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.760752143 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.760581314 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.760429249 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.758706831 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.760008839 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.759884676 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.759844073 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.75867228 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.759657497 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.760140978 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.760015028 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.759174168 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.760213506 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.759844112 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.759641255 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.759779878 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.759341214 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.759391317 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.760287035 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.760018372 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.760012951 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.759583059 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.759429815 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.760588674 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.759707292 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.760185737 seconds)
  done (took 98.442146871 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760610827 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.759892362 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.760104886 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.759784834 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.759915771 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.760179563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.760369658 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.76086472 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760908454 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.759295841 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.75957113 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.759849131 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75972025 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.760901451 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760583579 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760889037 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.761156406 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.760651872 seconds)
  done (took 33.380677953 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761402832 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.761354233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.759886467 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.761010634 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.76108238 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.761352712 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761624622 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.761004371 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761634671 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.761969295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764241323 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.761520493 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762290495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.762494696 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.762129345 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762987736 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.761428491 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762086191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.761747699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.761424395 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.763227246 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762559359 seconds)
  done (took 40.456259426 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.762233298 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.762575426 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.776976055 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.784863332 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.783231958 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.797199382 seconds)
  done (took 12.364187365 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762248567 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762641871 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763269394 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761949509 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76272685 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762594292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762504838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762843626 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762219076 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76333072 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762489041 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762560574 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762851726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762584162 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762970026 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762400011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763349949 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763498677 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763117665 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763182023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763094874 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76336853 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763409925 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762867688 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763952197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763718861 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762932638 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763831435 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763387585 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763458411 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764024207 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763071861 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763926572 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76445786 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763423293 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764468678 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763585736 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763899667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764289187 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764941101 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.764200473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763931374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764042818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764101156 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763618671 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764224957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765135806 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765089746 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764154858 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7661098 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764840079 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76457111 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765315555 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766220971 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765245666 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765614873 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765607214 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76577825 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764634144 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765465047 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764336181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765603531 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764935086 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765258849 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764428562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765856604 seconds)
  done (took 118.116898925 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76589129 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765289679 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765792858 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766100193 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765228161 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766328908 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766679462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76557712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765666593 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764948709 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765544483 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765343317 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766537935 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76582358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765830875 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765983697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766003266 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766179206 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765495507 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766681338 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765538171 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766812873 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765992829 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766285342 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766199273 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766206751 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766682555 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767383201 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767316849 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767036005 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766315637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766276492 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767372282 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.767161291 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76656263 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766166706 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766387731 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76604975 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76725159 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766367854 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765818488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764415468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766373451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766071923 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766170052 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765255544 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764805664 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764522327 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765433662 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765153966 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765340551 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765653753 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765067791 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766365157 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766326059 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766893233 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764561396 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765556989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765014868 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765697254 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765250413 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765580614 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765283096 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765006805 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76478325 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7660114 seconds)
  done (took 118.253599835 seconds)
done (took 2412.231427466 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.844044564 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.016648379 seconds)
  done (took 15.561506044 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.925911586 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.880053876 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.764540011 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.800394362 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.764730245 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.767596852 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.781949602 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.75946434 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.758311574 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.758831787 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.75863755 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.943128213 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.762580922 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.757902135 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.757740757 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.850087938 seconds)
  done (took 50.493379025 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.760207366 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.762101175 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.770727341 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.763715183 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.759751311 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.777287175 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.792229803 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.764600099 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.818696339 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.772852393 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.881963429 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.777154853 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.760700991 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.812656768 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.773983978 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.774193388 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.852292428 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.841383266 seconds)
  done (took 33.908692618 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.838105585 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.777095663 seconds)
  done (took 10.315191224 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.773017539 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.774942102 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.783398139 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.759571022 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.764220913 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.770988067 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.763247057 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.834637044 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.767863353 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.789570133 seconds)
  done (took 69.477922864 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.764426524 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.762552926 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.759097466 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.758059466 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.756084637 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.763016494 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.759521528 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.761447203 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.429758928 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.792826222 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.764619828 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.761914952 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.757297263 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.757460959 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.752378143 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.773626314 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.861756887 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.750232208 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.751889741 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.756755074 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.751043093 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.810979289 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.765872237 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.75385296 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.784485974 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.422375946 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.759972796 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.757827764 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.862244981 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.750186941 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.751135318 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.937048288 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.754730708 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.21457715 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.019805007 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.756206595 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.761982855 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.755442078 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.745529502 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.868370757 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.748198883 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.754126047 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.731962131 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.9930337 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.839871797 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.792495022 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.056339965 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.766978747 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.747849876 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.77580198 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.751340035 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.74802705 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.760485526 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.266856327 seconds)
  done (took 126.409704389 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.744930168 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.092192888 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.912255604 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.747902351 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02919328 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953839906 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.749092934 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793443405 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.749078873 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97500082 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999074947 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85191327 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.747324885 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.743574259 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.74592592 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.741856951 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.895713064 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.815422136 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.744311697 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.74031244 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768164373 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983467116 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.865962865 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.742973253 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.768949282 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95415225 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.865764647 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.842537985 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.514177557 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.738598962 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798900151 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.73933583 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.735830863 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.735383386 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.891784399 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.832214828 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818991134 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.744058172 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.735421876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.735564109 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.39061914 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933007875 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.830612414 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.868743376 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987878231 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.939409081 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.513481375 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.735161409 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.469830744 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.896319217 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.962178551 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.962560794 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.855218586 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.738295498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.071226112 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.732541745 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.733247242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981682151 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955827656 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.831713578 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.73556205 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.732638594 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.731157464 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.970063918 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.736194274 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.826285621 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.735035803 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.732132759 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.825765378 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.828432741 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.962161489 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943360882 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.761640286 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.072903808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.238519082 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975632751 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.794513779 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97981745 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.733462496 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.729355038 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806964826 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.568681152 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.980629311 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.971978583 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973242543 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764809874 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.445865152 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.727710595 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.953562635 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950138292 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.988655231 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976006504 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.966389645 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.053843939 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.729053838 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.72883596 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.049174828 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.851777727 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.731185491 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.068362685 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956087036 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.254477517 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.754440014 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.029856585 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.85839155 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.731144709 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.355959774 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.726537927 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.953856205 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.76746651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.729302442 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.72818816 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.94597967 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.716737894 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.729620282 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.388805687 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.788478527 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.731735051 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957814556 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.731158057 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993281966 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.729463322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955899347 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.164257332 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.755768138 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.900279515 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.970724342 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.728888398 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.962831686 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.968048982 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.840037313 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.947021577 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.42883411 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.727295715 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008267884 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.727571527 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.725638052 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.893397626 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.72814745 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.867617663 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.72874463 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.01840052 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74854046 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955444228 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.730782698 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979083786 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.759032207 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.775697464 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.72913406 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.846423405 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.728807732 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.962181525 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.881838609 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.729560284 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.729311599 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.280679076 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.725846318 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.873618052 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.953392857 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747950212 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798074939 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.387378223 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.726419316 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.807859294 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.749784975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.106606426 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.726218533 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.976577564 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.73020561 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.727277566 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.728412332 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.962210464 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.909982618 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.729682614 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.727683851 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.631719518 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.72809558 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.72711041 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.90847138 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.048759537 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.727537031 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.928469494 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.734626117 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.855235362 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.730553637 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.80187903 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.058886968 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.728257735 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.72911583 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.727306113 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.727273276 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.730364445 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.935895617 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.75318908 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.219457978 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.863424874 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998843897 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.036544745 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.967788978 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.771194153 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.733399299 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.982606657 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.731782235 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.790236165 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.731750611 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.747415874 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954316563 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.73313052 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.936823379 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.998356602 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.576743239 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.775397255 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.731432153 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73180056 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.73032984 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.872655949 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813543054 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.73224704 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.730562929 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.843438062 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.850688175 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.938648077 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.731945363 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.826253196 seconds)
  done (took 871.832074802 seconds)
done (took 1179.699524294 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.729804412 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.733151715 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.732974639 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.733423965 seconds)
  done (took 28.595349687 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.732024915 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.731094493 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.73173564 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.732012939 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.730949221 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.730689719 seconds)
  done (took 12.053640444 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.721441631 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.734142393 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.733878612 seconds)
  done (took 20.85546648 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.802355158 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.114834195 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.863184551 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.148567635 seconds)
  done (took 9.594361719 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.734113472 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.73143972 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.731872972 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.732807621 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.734709795 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.733275292 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.73235887 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.732926648 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.73320722 seconds)
  done (took 17.264394753 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.735931369 seconds)
done (took 93.765557242 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.891271287 seconds)
    (2/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.862076568 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.827320675 seconds)
    (4/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.118797396 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.860294007 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.731456167 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.860433437 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.23659865 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.856964721 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.832693161 seconds)
    (11/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.739861186 seconds)
    (12/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.860578979 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.829250224 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.691660005 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.817320615 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.750224924 seconds)
    (17/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.104721156 seconds)
    (18/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.10985567 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.873226837 seconds)
    (20/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.730964974 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.413717773 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.858037924 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.900256138 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.763486088 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.979159853 seconds)
    (26/309) benchmarking ("sort", BigInt, false)...
    done (took 6.742615388 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.896465145 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.362107557 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.05784947 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.843778731 seconds)
    (31/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.127236778 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.951457101 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.829979369 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.51858477 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.111801697 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.093868643 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.743765399 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.874795385 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.741207397 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.724350837 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 4.644376668 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.840584345 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.63735267 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.850225255 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.818680786 seconds)
    (46/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.743660735 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.111405978 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 1.964539232 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.899722866 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.937508858 seconds)
    (51/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.759936019 seconds)
    (52/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.080458036 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.772143913 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.466962847 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.768336873 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.002236625 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.996041056 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.867394548 seconds)
    (59/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.762103325 seconds)
    (60/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.766097661 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.117579954 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.899351221 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.903273374 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.764448562 seconds)
    (65/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.836709054 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.000423045 seconds)
    (67/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.935322764 seconds)
    (68/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.772320481 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.742219742 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.94616348 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.755175535 seconds)
    (72/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.977723993 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.749862436 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.750510203 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.746681281 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.991482497 seconds)
    (77/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.745903486 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.758412801 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.742542706 seconds)
    (80/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.939018026 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.421332585 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.746905601 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.261807129 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.898459662 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.745897322 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.493446348 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.856454782 seconds)
    (88/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.840974185 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.744437376 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.427164366 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.07599101 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.716691506 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.36915357 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.054176606 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.760189579 seconds)
    (96/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.821540409 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.747632802 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.765865553 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.888443345 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.886417543 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.74924893 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.8450315 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.747075844 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.176616438 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.766003801 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.767295375 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.041840672 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.962468706 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.613447569 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.991543091 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.847280029 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.058296338 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.74788072 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.83498532 seconds)
    (115/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.82701298 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.763271026 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.744855771 seconds)
    (118/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.074255121 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.807760652 seconds)
    (120/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.915168848 seconds)
    (121/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.961530852 seconds)
    (122/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.827844212 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.746052328 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.06726569 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.770802667 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.743897087 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.747769887 seconds)
    (128/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.982170371 seconds)
    (129/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.428247861 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.061631358 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.371425083 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.755360456 seconds)
    (133/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.851113475 seconds)
    (134/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.947862197 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.120257942 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.780197175 seconds)
    (137/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.835213402 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.636682664 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.97793174 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.663403494 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.811456415 seconds)
    (142/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.042343307 seconds)
    (143/309) benchmarking ("sort", Float64, false)...
    done (took 5.468644728 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.000735693 seconds)
    (145/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.746556005 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.68189794 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.000877009 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.932657355 seconds)
    (149/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.751361638 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.556764707 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.776593496 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.848522862 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.752969576 seconds)
    (154/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.176025915 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.753493392 seconds)
    (156/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.943627822 seconds)
    (157/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.968930651 seconds)
    (158/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.814600872 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.751889557 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.267535608 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.963590863 seconds)
    (162/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.935376795 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.883206894 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.057935361 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.769181987 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.950306908 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.138268617 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.578889636 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.856037007 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.753293255 seconds)
    (171/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.242615884 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.89243907 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.754626889 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.480235975 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.763325915 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.119768057 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.139947488 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.753431013 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.752752896 seconds)
    (180/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.79103873 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.997260484 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.427539911 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.790592712 seconds)
    (184/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.751766278 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.867178952 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.103487633 seconds)
    (187/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.009146792 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.881300479 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.99000895 seconds)
    (190/309) benchmarking ("sort", Float32, false)...
    done (took 5.440344259 seconds)
    (191/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.752631435 seconds)
    (192/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.513128091 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.836840522 seconds)
    (194/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.758560141 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.750313391 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.242843207 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.867356787 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.013483103 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.83166275 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.536283832 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.080123497 seconds)
    (202/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.927841722 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.099410405 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.832217964 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.889194498 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.920400317 seconds)
    (207/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.835824845 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.756443164 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.929565016 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.934564956 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.879984768 seconds)
    (212/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.081218973 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.755552686 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.648337525 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.883543405 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.907665245 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.927455478 seconds)
    (218/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.85560672 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.751273201 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.989468785 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.085316677 seconds)
    (222/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.012049295 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.406814786 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.964064199 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.064255253 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.755652554 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.711871938 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.941084046 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.159149808 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.752391107 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.146967773 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.912217569 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.756256881 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.776150237 seconds)
    (235/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.862092723 seconds)
    (236/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.872699454 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.064676456 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.833680695 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.774238816 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.771842141 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.08493232 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.753068553 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.315888764 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.97111565 seconds)
    (245/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.975724522 seconds)
    (246/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.757391963 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.81432972 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.950482366 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.754544388 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.144777546 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.068250426 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.528918071 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.903570875 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.974004224 seconds)
    (255/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.150372921 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.757651268 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.767914302 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.09595667 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.661527788 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.757331204 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.760190517 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.130709197 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.863318363 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.760514008 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.773970669 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.06882632 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.763119417 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.187033317 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.937927196 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.779633552 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.775977553 seconds)
    (272/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.775707645 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.230347201 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.789555998 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.939131928 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.82239522 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.757440537 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.073246838 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.759334723 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.132624938 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.836662051 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.228002289 seconds)
    (283/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.079547091 seconds)
    (284/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.892147131 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.752605124 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.171352001 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.753663203 seconds)
    (288/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.759261413 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.629652233 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.891955672 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.782029325 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.136258424 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.207262919 seconds)
    (294/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.994849938 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.498654678 seconds)
    (296/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.885805327 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.858347107 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.094366415 seconds)
    (299/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.274301488 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.765562108 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.981881824 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.251509957 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.110741159 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.916641853 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.97866367 seconds)
    (306/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.764064166 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.369971675 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.298792335 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.333004027 seconds)
  done (took 969.919036679 seconds)
done (took 971.648628932 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.801106488 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783133945 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.766069537 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.789625257 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.881977304 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.81239661 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.780372107 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.768245163 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.815766824 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.814554571 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.76999714 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.808904265 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.767936298 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.767456354 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.765657957 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.784919475 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.066053901 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.796632336 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.789418086 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.778189835 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.787910505 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.769378382 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.816070791 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.813870887 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.770891251 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.773039025 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.770150638 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.789892382 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.883743038 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.768772257 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.773233608 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.780138641 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.068475935 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.795602585 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.770522906 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.788950043 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.782268536 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.783720889 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.777816113 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.801744838 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.155058422 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.79898787 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.774611592 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.769547588 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.770961351 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.780252904 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.770046842 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.777836764 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787398884 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787009762 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.150866575 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.815949409 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.772227153 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.768636592 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.782954174 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.775881087 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.776778331 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.790508246 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.789132778 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791421956 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.058188679 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.802293402 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.773994767 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.789652703 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.779710548 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.189280503 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.803664832 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.77609581 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.159388464 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.814617225 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.191530061 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.815409655 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.779983368 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.788495389 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.803614344 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.073930528 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.79202434 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.771470085 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.782212126 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.772033521 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.786335986 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.786254277 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.777836888 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.776559317 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.785389474 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.820339664 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.788853169 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.77316566 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.789786305 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.791655321 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.784793604 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.787232276 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.779776283 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.773685339 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.782648301 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.780795956 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.776758722 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.777548946 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.776478099 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.788205122 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.161768605 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.823718377 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.774358636 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.76970577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.775064778 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.790877086 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.163722035 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.808580861 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.800846521 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.824018772 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.77570637 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.061890357 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.799953611 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.794274406 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.789336811 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.77648401 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.771888397 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.06153942 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.181728321 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.820536241 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.777416712 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.771795903 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.793230495 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.776858791 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.775954792 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.079210996 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.800520905 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.794988677 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.90064022 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.790374155 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.80687125 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.773142202 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.784048371 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.824232133 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.795273044 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.810693546 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.778188693 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.79341752 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.793429889 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.774277026 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.790092539 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.794369737 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.774860914 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.784296124 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.774334885 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.827121753 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.794026683 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.793993262 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.798025529 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.897296256 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.772535214 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.066982626 seconds)
done (took 279.063905901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.852789601 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.774978044 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.870896939 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.772577788 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.866775278 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.85487076 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.777086051 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.776617519 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.775508105 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.317914497 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.774617498 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.779605723 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.779433768 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.775826203 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.849309089 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.77966431 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.77464742 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.225233759 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.774864015 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.861884403 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.775870081 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.774639639 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.7747434 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.264933938 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.771377203 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.776390076 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.853208384 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.773802277 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.21675977 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.773568488 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.778309813 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.216367483 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.8517968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.802442078 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.780459811 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.784028605 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.866237052 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.785020652 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.841349405 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.845015197 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.864824085 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.806533274 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.774007128 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.775877017 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.781800304 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.777688499 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.777241772 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.809692868 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.771707158 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.78265788 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.260178769 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.784766584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.786011504 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.780078274 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.777248984 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.807717106 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.776580352 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.778780351 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.861863443 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.778887865 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.848850848 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.268930268 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.281427298 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.776846252 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.780103153 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.777093399 seconds)
  done (took 179.074501791 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.842586539 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.853449413 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.844739495 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.778644071 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.826578318 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.844205122 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.778087404 seconds)
  done (took 14.476332838 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.787112499 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.776970837 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.824706883 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.83013823 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.778128826 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.932598171 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.778281885 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.790038981 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.783887331 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.806220805 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.781404538 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.782636577 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.787374231 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.779124048 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.824699729 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.785905797 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.897239831 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.779384776 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.778096321 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.927687134 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.785497171 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.787689054 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.807528898 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.791425395 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.779921055 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.786934084 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.347243273 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.781029796 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782883643 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.784781795 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.781273312 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.818736628 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.780185577 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.779034434 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778039925 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895166458 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.777716143 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.777109633 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.779247949 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.777993238 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.780248636 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.782211281 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.780639728 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.782357322 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.780545307 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.803368654 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.780791891 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.781321015 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.780719483 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.784291256 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.805466228 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.779032019 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.782752734 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.789196614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.824459632 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.788392395 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.777912655 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.781170783 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.779138541 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.778592297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.927704767 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.831583757 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.78099957 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.832937521 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.779287963 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.78088704 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.785336088 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.783068349 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.869858664 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.781936172 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.830078351 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.782602921 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.943459486 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.805470828 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.785966597 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.783376572 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.783862046 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.787990968 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.781188107 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.790456433 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.779994123 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.783429477 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.787601042 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.7844101 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.785232413 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894523765 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.922999559 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.78263528 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.782191578 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.790652038 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.781293957 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.828333631 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.784287302 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.781731906 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.839437169 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.898312828 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.809925532 seconds)
  done (took 197.070965536 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.792283878 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.789261772 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.78295857 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.804287141 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.785922396 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.785279574 seconds)
  done (took 12.453030195 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.789914138 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.783860341 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.779956279 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.784407567 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.783177166 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.779812491 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.779589649 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.786170765 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.788073031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.780515288 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.780491962 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.786163585 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.786600639 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.78537682 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.785501601 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.784251278 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.781239072 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.785246168 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.781042558 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.78297611 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.030442649 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.784939407 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.78901596 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.787324097 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.789866538 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.785219776 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.794813054 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.781320117 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.787835353 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.789597228 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.789837686 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.785281236 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.789038314 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.790215892 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.785251258 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.7886243 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.788062144 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.784379117 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.787476321 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.788776918 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.784130828 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.786134718 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.78829395 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.786699747 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.785347704 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.791802999 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.789742856 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.801591596 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.787176037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.784624348 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.786985353 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.786253005 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.788494455 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.791172206 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.785606734 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.789902934 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.79176374 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.785964655 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.785374178 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.788919709 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.790572601 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.783502115 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.788069255 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.794613605 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.795043709 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.786600443 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.788863437 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.794021121 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.789565294 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.787981649 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.788403258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.784511317 seconds)
  done (took 131.624402113 seconds)
done (took 536.419829418 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.035565481 seconds)
  done (took 8.752591218 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.984202147 seconds)
  done (took 8.76173677 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.118701324 seconds)
  done (took 9.837299017 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.81587458 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.793336552 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.794734797 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.787408709 seconds)
  done (took 28.926904573 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.12544146 seconds)
  done (took 8.837923329 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.803165603 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.78127769 seconds)
  done (took 15.369650899 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.819048167 seconds)
  done (took 8.535406625 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.843404203 seconds)
  done (took 8.567073632 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.806359249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.825179359 seconds)
  done (took 15.371278083 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.793509483 seconds)
  done (took 8.505811001 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.930341937 seconds)
  done (took 9.751097027 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.800580093 seconds)
  done (took 8.581973498 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.848886236 seconds)
  done (took 8.563096931 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.895229951 seconds)
  done (took 9.607390162 seconds)
done (took 159.68729043 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.803730395 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.787107446 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.785217814 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.787560225 seconds)
  done (took 28.875149464 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.816316209 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.820798952 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.821119298 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.826973719 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.824692975 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.819816587 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.813282381 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.813021134 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.831771408 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.823696639 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.824385133 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.817611331 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.816115529 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.815533803 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.818195303 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.821158201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.832654314 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.82214673 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.814125668 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.819970798 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.78387708 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.833209936 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.821269188 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.789357974 seconds)
  done (took 45.355789644 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.975746656 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.85993969 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.941670378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.84475499 seconds)
  done (took 9.334411268 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.839165964 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.836948799 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.853141908 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.89124512 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.909908777 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.850744912 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.810303432 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.808919803 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.796762677 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.833891479 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.91645027 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.835346462 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.925509293 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.785830702 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.976306163 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.785557683 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.782848486 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.841151781 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.887776047 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.904925833 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.788477324 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.84333925 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.843768316 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.835627084 seconds)
  done (took 46.10004655 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.788695468 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.79584791 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.7960062 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.787036403 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.790068517 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.794924083 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.800114402 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.791147776 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.813809751 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.794664653 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.788025243 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.788438782 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.796782389 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.787649503 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.794570351 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.803151573 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.806106935 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.786217659 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.792224897 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.792977653 seconds)
  done (took 37.605886898 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.787845767 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.634363316 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.133728642 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.03772746 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.787087298 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.782541656 seconds)
  done (took 30.876133571 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.802930462 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.794112533 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.79128566 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.841618666 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.922852776 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.79145129 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.790676946 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.80088651 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.831937966 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.849470712 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.803457015 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.819267938 seconds)
  done (took 23.553817668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.791496997 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.791121799 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.791946998 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.79394968 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.795419996 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.796843427 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.796691491 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.785106277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.800240811 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.804950044 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.787863155 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.79836243 seconds)
  done (took 43.255437011 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860973634 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659415477 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222102703 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25031069 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307385854 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986216092 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.786565493 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.881130538 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.793010248 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065539278 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.125024699 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308943256 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046027003 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805313387 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908228927 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.276562628 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098655983 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014740778 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826093587 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473691149 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915070164 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383006338 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.44070018 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915352763 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007040585 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.928007302 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.064090607 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.755811582 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854319229 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805835405 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806379636 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.807991869 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073377455 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921886643 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87565056 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811088957 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.225807275 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.508136117 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.845428333 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.430196695 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.295076628 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927611173 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807597354 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803580691 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.729760156 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378389377 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894110748 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.809408698 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.507603064 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.80416209 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809484177 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884067125 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.806416645 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.611649814 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49814297 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.067050903 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.803869646 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807265671 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36670562 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815491702 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.515307324 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.740298156 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.892262153 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.429523594 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260174135 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.960159207 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.807095178 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.806657104 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730099524 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.426214535 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926008718 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944546679 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.823273277 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444729262 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086270666 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.198736898 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864203283 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07736106 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.639577697 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.736129485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021651193 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.757766056 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734329417 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.63833344 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.735836059 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01606575 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839122592 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.405868965 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843340844 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894320703 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.808697668 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820154342 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813862153 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021168786 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.700798252 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806671911 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.088408966 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071069649 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82393022 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.889358074 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735333574 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.805861083 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050901445 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.008988444 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.098668185 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.287290625 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896215615 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772105 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.818579199 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.771267303 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.817966813 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.073730044 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868535511 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816180519 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928705967 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.754725309 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050876791 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80122099 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.904204369 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.172513991 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052863658 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.151586938 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048969175 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869816204 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.809920211 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.811814241 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.499138465 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422454365 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.026058579 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.822290098 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336745043 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.818293856 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.811111423 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741231143 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.657904209 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.141074409 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.894062529 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.025127772 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.781694134 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081044752 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737638524 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950022141 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.8099017 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.019344467 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.449140613 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.89744724 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05779581 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08838084 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.084478515 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818888653 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821913002 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901845963 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825353578 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.271985837 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054493602 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.811786841 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.812215226 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.488064274 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.870214546 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815551952 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.811192918 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333594424 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079604561 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.830582221 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.813045727 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.685608687 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.820184495 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873044115 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813177262 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817205236 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.372414691 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314566499 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.816598438 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.525372667 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02775955 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814621607 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.438619532 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987109852 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.82348557 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073886284 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877162996 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.735210432 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.510657565 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.512123453 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810845091 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737116883 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.810173296 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812602007 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820477486 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.998939312 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078844678 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860762365 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.480828875 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914669162 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813826895 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.810842044 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808760052 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.307938331 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815027266 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331736373 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926602937 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939531732 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.82435232 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.736233494 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.811749923 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812495462 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.809093389 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.760361668 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857582214 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.476130566 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016810325 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057346858 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.219507444 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827777047 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.484025433 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.927519951 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.82612511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.104386083 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34435509 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.923258492 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88363478 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.817290145 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.48254541 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.54261804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373861472 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126191529 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124140716 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157172143 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.193627023 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.135207348 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898919909 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035753097 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333170119 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871370768 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.902704946 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750130431 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823688921 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.456593334 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212876867 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81689647 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029309007 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093164922 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.142221757 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947291555 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014858463 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841135925 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.630131715 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839518825 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.348074408 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830637113 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.177236141 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016791712 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904719991 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.082850336 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.897940891 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.816080301 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144129094 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850175403 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.518364223 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171529628 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.212079401 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.255078264 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037182864 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.817937791 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.252427085 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159434916 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.0115866 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.934717034 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742524465 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.821249732 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.818130639 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.82676172 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.795256604 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.714405905 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.057776067 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817543869 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040389867 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.952323669 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175999176 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.719277117 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.818965242 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815339059 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05656507 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49809388 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971181993 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.1337946 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.390270607 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82956749 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.742569928 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739841825 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.51628 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.822093459 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.782901111 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01632784 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.917138429 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.505080737 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.238581328 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125977212 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.059428378 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.826197326 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.079487557 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086418 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.306346564 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835303985 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.913344189 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.087197495 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.506821494 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029267134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039682794 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347184456 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028672856 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252716494 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.782429115 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.815724467 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022299703 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.030871215 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.151105301 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986201686 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.52646171 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.83107477 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184083238 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876972525 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.14371666 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994285859 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.904369352 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822741969 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892343574 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818999936 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.820514815 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.82060596 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824586313 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.143339559 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928048627 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.830780249 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894679508 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817910313 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.386455135 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.825845867 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078604183 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165830981 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139491888 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87498121 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.815663844 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818667741 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744971592 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945781632 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.256011844 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089543568 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935398395 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.949939929 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83725132 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.087096086 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.078635519 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127381941 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091312616 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.69971002 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.522090345 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93814772 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.034066122 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824164632 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.021344057 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02858978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106140257 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375230293 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.958193142 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011613715 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091205271 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181346101 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819815946 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396170134 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.827095199 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21253829 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.849781879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.149866625 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072436792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822462414 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940003401 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823785244 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.026757019 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.271396255 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.497627078 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162165511 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.684667565 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823954666 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089810685 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136028759 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121560135 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894690435 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825736378 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.518552608 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952943378 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.706571545 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.036761948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821778338 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025401853 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.531470987 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.824641374 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08720656 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12224089 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.822754495 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.686590654 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825282158 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.823757084 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036066964 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027671193 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063965621 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82405075 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.827559021 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.628802398 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089252106 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878034538 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750426793 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.819734799 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86653697 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.050871572 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842140882 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.336268677 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.522698373 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092428369 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.727054902 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835295515 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.230234352 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195363558 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141137094 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.339333777 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036539544 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370582718 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.659072188 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197155675 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.824613004 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.261703753 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205505027 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.821404942 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337998436 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934685976 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.086915573 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145104038 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.82897954 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552841854 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.849670126 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036829143 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180119845 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754858914 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824178481 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.871574809 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.824232827 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.806293048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833090787 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.710863453 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.243328175 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.665707651 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380409922 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.82321014 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.942052652 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.138752916 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389196735 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930136087 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845441603 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823582596 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.518623621 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.108622004 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06733414 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332012804 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.918831639 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.825497802 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824632036 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744140137 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005434994 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.009570982 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100819095 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.166506474 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.933659478 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830760928 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.031411908 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029197956 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.158225402 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951409367 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960263494 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93913734 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.769875854 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529532543 seconds)
  done (took 1634.576008139 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.847142642 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.895380539 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.90987345 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.885450711 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.883378956 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.860592205 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.89866904 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.856262256 seconds)
  done (took 56.790851161 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.824788471 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.978273039 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.830862067 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.827649255 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.826214852 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.827225914 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.986960319 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.840122588 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.827948756 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.833412502 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.826477473 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.823843373 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.124822735 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.844758324 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.828273746 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.830081455 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.827251904 seconds)
  done (took 73.530755698 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.828429121 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.07521687 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.858368121 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.833635179 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.830743359 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.838136671 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.915892401 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.85176223 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.827909606 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.07688043 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.122649022 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.839139511 seconds)
  done (took 89.655158886 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.84231795 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.829183688 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.83201203 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.830550184 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.830009318 seconds)
  done (took 10.927165965 seconds)
done (took 2132.24268078 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.062338453 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.040769792 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.077492445 seconds)
  done (took 5.872466328 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.968711282 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.02054591 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.132868917 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.140631707 seconds)
  done (took 10.022470646 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.13525602 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.204721919 seconds)
  done (took 6.096294536 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.148183452 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.854664003 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.24635533 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.832761027 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.833675003 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.829921298 seconds)
  done (took 22.258978013 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.829833428 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.831594747 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.830648773 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.830872412 seconds)
  done (took 9.080841862 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.830767647 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.529032896 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.830422227 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.842865571 seconds)
  done (took 20.788693577 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.019028962 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.945260488 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.976020461 seconds)
  done (took 7.697489846 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.050183155 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.623507089 seconds)
  done (took 6.430242832 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.992556629 seconds)
  done (took 3.749197243 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.859192788 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.100040899 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.333498973 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.369478217 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.431128927 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.655004792 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.131386587 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.046876989 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270227311 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.278337502 seconds)
  done (took 24.23662184 seconds)
done (took 131.299046019 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.170295452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.847795451 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.036306518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.183334207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.062534023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.034476731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.043131773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.169506284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.861678828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.84767011 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.187368097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.066207628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.992181098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847767683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.99988514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.845527177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.060168467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.1903418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.871161995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.133822295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.050443493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.830658435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.021646014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.843803131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.059704687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.985171454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.376053592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.851478466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.014741303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.384561056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.056650253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.230788285 seconds)
  done (took 166.915614843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.835829016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.833246376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.832863472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.826630496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.284463378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.831179937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.831902469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.829840512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.232866225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.229290616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.830707896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.271796803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.832173777 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.828975247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829061584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.829403949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.385154957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.831608561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.829896812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.828660396 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.828332052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.105378465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.831930363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.110434479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.382926552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.830139291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.83091559 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.832043577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.831443773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.832994409 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.833297801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.830310373 seconds)
  done (took 207.707125385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.834702595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.833164866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.833215544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.831584095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.832026028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.832426891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.832942051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.834504152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.464914306 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456930917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.831044618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.835719903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.832600243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.831523723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.831805925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.833744754 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.830672696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.830531583 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.832282052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.834373817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.832789785 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.558643236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.833493489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.568953195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.831742814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.830085807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.831599932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.832643174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.832008542 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.832385659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.834439529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.836374617 seconds)
  done (took 219.127962699 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.07909329 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.837730504 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.838722464 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.754635556 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.838853732 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.836811311 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.829597986 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.083446872 seconds)
  done (took 18.864104455 seconds)
done (took 614.382181628 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.244777552 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.090613572 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.013763516 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.863235247 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.137611454 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.904193486 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.854449035 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.921160682 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.68141355 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.936904789 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.507256481 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.87523142 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.601142822 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.879644632 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.983172691 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.909332171 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.465895555 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.569220495 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.031034832 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.92832099 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.039016555 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.757832825 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.937853188 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.701412145 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.621865285 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.806809783 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.888815725 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.472902144 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.866953196 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.019170095 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.525263073 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.114056343 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.872630019 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.859139927 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.910334 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.890500901 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.069103143 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.868707566 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.984854094 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.557779417 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.929432677 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.593201579 seconds)
  done (took 101.448729824 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.848098095 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.844505511 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.844203128 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.84449989 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.852170892 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.844818338 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.843493776 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.843942755 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.845026355 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.845254164 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.843676552 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.853411899 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.84472871 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.852377705 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.845420199 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.843813362 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.844247835 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.854025278 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.84449469 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.845501699 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.843675767 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.844410024 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.839186877 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.845114824 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.845348342 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.846716139 seconds)
  done (took 49.77498029 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.838771182 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.011382848 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.085226956 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.859106722 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.840435794 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.843855823 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.858540253 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.846013184 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.842182488 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.842722133 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.944450274 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.846569718 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.8594095 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.083029417 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.856333451 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.839375952 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.841339608 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.841101135 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.019194304 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.858384728 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.860887448 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.844042923 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.859935587 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.854680573 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.843352125 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.840944556 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.844808225 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.347928989 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.85214039 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.944969353 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.88626684 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.863128519 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.29317914 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.093839513 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.894200383 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.846630008 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.841078435 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.950854003 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.848849079 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.842558771 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.858609123 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.848948476 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.083822288 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.375687728 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.857102206 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.841048513 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.35423508 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.960874911 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.883936067 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.84702449 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.08647257 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.857384537 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.843208652 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.843912212 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.878249274 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.847620869 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.842151341 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.217709248 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.853944105 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.861084506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.845750948 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.847139969 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024555989 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.852071765 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.01317583 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.851935226 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.852908029 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.846479606 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.087430291 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858070748 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.389127401 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.856553414 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.84252363 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.947823766 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.019576536 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.381574954 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.853984458 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.027830198 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.309955662 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.865825743 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.850961589 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.334268241 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.869896953 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.850905015 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.846069491 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.846065207 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.842834935 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.886867559 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.860634215 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.301411813 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.38763576 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.23035592 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.868708687 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.858569117 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.846994432 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.215677214 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.849733999 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.844310988 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.079496552 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.393803356 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.857376798 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.853072625 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.370730114 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.859876604 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.863469039 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.852044676 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.092198201 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.858225317 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.888757967 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.845895248 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.852416157 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.849100223 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.863668556 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.851306016 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.845382463 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.361852123 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.966423392 seconds)
  done (took 229.694763818 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.847216657 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.844190353 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.846699378 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.846378481 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.844193567 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.847455159 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.845337505 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.844928253 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.846725801 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.845218149 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.843526229 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.845633961 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.845745238 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.845046169 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.482146929 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.846978621 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.451380727 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.84814139 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.846513028 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.846011542 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.528412207 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.85058208 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.847227526 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.843071685 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.847740224 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.847290494 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.852257635 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.849092096 seconds)
  done (took 167.400080048 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.847113407 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.034758095 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.861009981 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.877353077 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.855673326 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.847339579 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.989228706 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.865691922 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.848915209 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.845886142 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.848710567 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.909257924 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.857331385 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.946528781 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.875864177 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.950861469 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.949741391 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.85358466 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.847787257 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.849553194 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.877128553 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.858822511 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.909942006 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.968582875 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.86459352 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.962157135 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.865478124 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.850121908 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.850228136 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.961598301 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.863480597 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.910338627 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.872417203 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.867156931 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.963603074 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.965965007 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.951630798 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.949110483 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.853442025 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.84912243 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.848770222 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.851219811 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.963256944 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.864988288 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.849702333 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.966344026 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.8686805 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.850051732 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.852730055 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.850429513 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.863131327 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.86516488 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.912129147 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.976411857 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.883603246 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.875534718 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.949972666 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.969019153 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.851241806 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.948374388 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.853959889 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.964507555 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.865988603 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.851726632 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.855081619 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.855254235 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.882081511 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.958498464 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.951801022 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.855128564 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.949790255 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.88245912 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.860243466 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.852459342 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.851776632 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.965296725 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.966563449 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.882280624 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.889371263 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.882760518 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.858516867 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.852104291 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.853468516 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.86781643 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.854356836 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.96536653 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.964088255 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.85511102 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.850125399 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.852879038 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.853415354 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.876563104 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.969442874 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.883706705 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.958545159 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.91379778 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.923975564 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.863107191 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.866917514 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.854788331 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.916333622 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.863313272 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.865412945 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.138749632 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.913185262 seconds)
  done (took 200.726450426 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.226232875 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.897599293 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.904270418 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.168941534 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.208063721 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.84173215 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.895704137 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.894834799 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.924307519 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.083289172 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.969113659 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.918609641 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.889246155 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.871204684 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.894241277 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.923579683 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.903925415 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.239836675 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.122986524 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.059954319 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.887985331 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.20158363 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.209265318 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.505819572 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.946704221 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.296509128 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.461703692 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.030035267 seconds)
  done (took 61.16184277 seconds)
done (took 811.970052666 seconds)
SAVING RESULT...
DONE!
