cset: moving following pidspec: 17923
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.335579334 seconds)
loading group "string"... done (took 0.600121715 seconds)
loading group "linalg"... done (took 7.343453703 seconds)
loading group "parallel"... done (took 0.170240617 seconds)
loading group "find"... done (took 1.155839274 seconds)
loading group "tuple"... done (took 2.049601251 seconds)
loading group "dates"... done (took 1.303884596 seconds)
loading group "micro"... done (took 0.241366866 seconds)
loading group "io"... done (took 0.98696977 seconds)
loading group "scalar"... done (took 40.08213515 seconds)
loading group "sparse"... done (took 13.136518122 seconds)
loading group "broadcast"... done (took 1.024197763 seconds)
loading group "union"... done (took 13.893347239 seconds)
loading group "simd"... done (took 4.782918338 seconds)
loading group "random"... done (took 9.605653951 seconds)
loading group "problem"... done (took 2.011150594 seconds)
loading group "array"... done (took 23.128099872 seconds)
loading group "misc"... done (took 2.086827681 seconds)
loading group "sort"... done (took 3.435134508 seconds)
loading group "collection"... done (took 19.064765742 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548254978 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145953436 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120204078 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143539351 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189659511 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134412912 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.149748529 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087330409 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.060661792 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171740568 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143464918 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.493914646 seconds)
done (took 5.158741396 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.245358847 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09000573 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099091083 seconds)
  done (took 0.910407026 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06766819 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129408871 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082908645 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069346035 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068096943 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083491509 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068746557 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067256015 seconds)
  done (took 1.289575449 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076254688 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070291999 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086298481 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069526628 seconds)
  done (took 1.022672812 seconds)
done (took 4.266787407 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.923693961 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.253106248 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189651556 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.474111474 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153247807 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.19394476 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.729505209 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.362855241 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216801104 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104344468 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107957694 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390992194 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109612577 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.709842676 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078363093 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109806287 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.166177481 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.474707401 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081068947 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08408948 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106764933 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147067873 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104649094 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080540483 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.172441533 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071669171 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.15314148 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09831715 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069736319 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.25232676 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192097351 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.733638098 seconds)
  done (took 10.8575577 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104000632 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120358179 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071028285 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142634369 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105272002 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089111919 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073375508 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085344549 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094705554 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162382045 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118278071 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110552785 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084311202 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071729479 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103919003 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213826061 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109794488 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08713062 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089339508 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077964269 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125136025 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085979679 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097147148 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080343171 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155019698 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19768356 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114239888 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113868373 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071216969 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084150497 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13401179 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146007921 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069054232 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083839506 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.142890848 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113346631 seconds)
  done (took 4.662858877 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.071116625 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08919079 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.16549718 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.112963779 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158318174 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069965723 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133589796 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082623789 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102272258 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242677568 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.17868559 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49338075 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132115778 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.091416566 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070552403 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089672132 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069348622 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.597797356 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.117340463 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141584526 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087288628 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094514145 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073304245 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.72184429 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085485321 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069325564 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070410255 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079167047 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150909261 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071316479 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.240197069 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11552106 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070147521 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12550435 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199659613 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095829109 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.163274336 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085668813 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06921594 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176854042 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076713927 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086339271 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091381518 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123844479 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12504402 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071715404 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086069786 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185698506 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069713239 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102892916 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.920282782 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166865269 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080928623 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069085031 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299298574 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08710547 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08827268 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070989116 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279094872 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.158338169 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070502238 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086447825 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06890206 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070698009 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.742971363 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071306694 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.090444479 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071955116 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08020654 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088554662 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070342114 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091956464 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075132744 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082466799 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088254481 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068785523 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.088471319 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06958442 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08452635 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071527551 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10372597 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.21281863 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070114905 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068587423 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084398174 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089209093 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115132247 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073035055 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084482225 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103180232 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086932868 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070106719 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123772301 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069466323 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113506633 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087992143 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089572609 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131241936 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070412485 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082271678 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135132308 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069015947 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115389134 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.080380855 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11772723 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097950966 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070672068 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157808886 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066927682 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084779053 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069164991 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067383354 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087958323 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070983585 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101883587 seconds)
  done (took 22.669250797 seconds)
done (took 39.980769975 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.304755497 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095119446 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095807342 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078733057 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096699048 seconds)
  done (took 1.471040172 seconds)
done (took 2.240377599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124898209 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121298295 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066016721 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11699359 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066195178 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.122445524 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118113245 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084118746 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122859485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066577777 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11592248 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066842618 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06561681 seconds)
  done (took 2.06000705 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086944794 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087751282 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087608971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084435387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08126887 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084863209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081944109 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108417299 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082676262 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090758431 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066345838 seconds)
  done (took 1.709829939 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08527897 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086632256 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08829631 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084190516 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081334062 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084463765 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082538061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105517158 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083447308 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091930773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066168823 seconds)
  done (took 1.707419372 seconds)
done (took 6.237698142 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080972226 seconds)
  done (took 0.842145023 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.719305152 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.765227118 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084902172 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139147756 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.232573515 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.162416465 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.461668425 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111838185 seconds)
  done (took 10.62581577 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106829591 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089825624 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071475132 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092567427 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074831683 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089945897 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071263957 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072103398 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08651361 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074369055 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089279695 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074148558 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088631612 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072529561 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075321179 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087758857 seconds)
  done (took 2.149815165 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097057548 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09588701 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094308724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079106694 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093788733 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075626823 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095038284 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077345923 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089741238 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075828619 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09510511 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077936655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090928414 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068545988 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094081405 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079709941 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090538655 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077610982 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095334961 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078953528 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094908352 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06851953 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091135396 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077952492 seconds)
  done (took 2.936957655 seconds)
done (took 17.321536057 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136731268 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079729234 seconds)
  done (took 0.986757962 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085699007 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102126413 seconds)
  done (took 0.963422782 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086850314 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083465351 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094223161 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096948222 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068971972 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084961382 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.107203999 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069397473 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084302634 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069308244 seconds)
  done (took 1.621217795 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071807735 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096821664 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074340788 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100718852 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077080328 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083142469 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076471264 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087191044 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082545565 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081275022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07379647 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102637842 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074297461 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104991861 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07656237 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087270533 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089986658 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071015098 seconds)
  done (took 2.290205051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069347037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069778002 seconds)
  done (took 0.91779506 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07082199 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066236024 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085187061 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069029105 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081994236 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064907953 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082255648 seconds)
  done (took 1.2987945 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.42119588 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112058717 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253085523 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091800029 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107056347 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.271583036 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.086578579 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073641547 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091452896 seconds)
  done (took 2.328939301 seconds)
done (took 11.181488244 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082770299 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088163657 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115032695 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.437976211 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110285472 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068744484 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.134858844 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227823165 seconds)
done (took 2.04620001 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130334991 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637569111 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418242665 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.22256455 seconds)
  done (took 2.061951392 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.387988835 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095177316 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076080004 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070234101 seconds)
  done (took 1.416350906 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06920357 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072383981 seconds)
  done (took 0.928231587 seconds)
done (took 5.320937052 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07035701 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068106489 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106715532 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066398842 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084605042 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069669716 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066285314 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084816471 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068780686 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068863013 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086781314 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.072062065 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08515939 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066844271 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066424783 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084729837 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066488822 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06871053 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082568742 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06654854 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066633016 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08487881 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066513587 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066032037 seconds)
  done (took 2.609415562 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089249954 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086195837 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075030438 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09131309 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073934803 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090721682 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074678061 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069384921 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091510936 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071212569 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093774352 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07405898 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088308852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073942285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087507203 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073775922 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090729019 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070396031 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071009129 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090647712 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075583713 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086115348 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073730431 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090912527 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073298214 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090188762 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071608266 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086150061 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074953934 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089671565 seconds)
  done (took 3.229247405 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074709639 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065896137 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083897095 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073323233 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066252066 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084958251 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066082044 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083758782 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067181843 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066177909 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084449943 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06631696 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066416538 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084191474 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067521322 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086270045 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08392943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066950414 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083192089 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067225526 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069722779 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083444694 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066549496 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083258782 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066945845 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065938273 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083060312 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067013867 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067403599 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083613231 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069818252 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069446326 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083234784 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073893501 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086714804 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068684552 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070682221 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083261111 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067450496 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066175318 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082873233 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066528209 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065935175 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090268814 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066780067 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085374923 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066447051 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068149669 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084241061 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070204765 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08285203 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067290729 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0686401 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084562585 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070775766 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066193315 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084266982 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066880552 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084108036 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067775082 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066334741 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082736963 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069564972 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067400669 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099520091 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073360691 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083033281 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069277167 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067888483 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085973764 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068691371 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080571996 seconds)
  done (took 6.159784467 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122896777 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096311991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086341519 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068588928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082482476 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06800461 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070963553 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084882242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068899903 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089678539 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067211388 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067876765 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085912128 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080156867 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084734875 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069105592 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089985739 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065903837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067385018 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087752457 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067885208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087748228 seconds)
  done (took 2.556525785 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192799555 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091842645 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114123765 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094865716 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087885845 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077202465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072377584 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090453811 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073546865 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088136103 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071637044 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089757441 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071173989 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087898228 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071986095 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088306474 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073918029 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088305515 seconds)
  done (took 2.422219765 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082190094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068814713 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110519408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06950531 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087698068 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071975945 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091762775 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078345092 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089021985 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069307873 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095101207 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071520575 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08917257 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070114622 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072282839 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086893094 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072226428 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086251519 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078661858 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091419634 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075033648 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094589829 seconds)
  done (took 2.600069633 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085008144 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071172753 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105422079 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088851737 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065719524 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067605497 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092862657 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069895713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092274048 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071625099 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068806836 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084885995 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074524639 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086791056 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075071201 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086233227 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071440289 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069446601 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088720443 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065771537 seconds)
  done (took 2.380147887 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091314473 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087275762 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07090643 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096288951 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071022089 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087636143 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079852938 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087974987 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070611024 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111915571 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070936483 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089177557 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079651483 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092857646 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071228822 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097038322 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07989115 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096994634 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069752002 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08876714 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.228712206 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071153062 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095873241 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071341363 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087165832 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071212501 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070239608 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093029828 seconds)
  done (took 3.283072418 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070227966 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068644263 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083835605 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066935639 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065997864 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084199066 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066626055 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066842922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086882118 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067183016 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068420718 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085832121 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069408614 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085367866 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069473759 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068661346 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086254251 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067552908 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066676045 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084382958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06940364 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068700585 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086565948 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066966977 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083090019 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069646191 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067025436 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083575327 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07004957 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06649022 seconds)
  done (took 3.01567161 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079779424 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093799936 seconds)
  done (took 0.979132045 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067315476 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084189152 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084609975 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072790498 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091374406 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070321845 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095106177 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073818797 seconds)
  done (took 1.443506919 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086198169 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081287147 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088494254 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081639342 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09890072 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085649919 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160285267 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088722082 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076720963 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085031365 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084485972 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068050482 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093493475 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070151573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093114093 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076514008 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067783111 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092774884 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072652403 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08556264 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071726116 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095537507 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072294831 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06618857 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089279535 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.079090462 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098889842 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070705371 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090016829 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077599798 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074775816 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08164554 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069345083 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087308885 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067506073 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097407943 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085612329 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089349961 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079134685 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070468589 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097473792 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065032775 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091995815 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0763035 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097473214 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07125835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069663567 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082757127 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067330449 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089223867 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065548329 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069501245 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082265969 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077418166 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090295591 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080952501 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071396556 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089274904 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072203178 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091259353 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07715951 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088667144 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072383507 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069373202 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097013194 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07484979 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09645523 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06541904 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064223103 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084636002 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079550709 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110332199 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076286496 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088002099 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070987294 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084253789 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073354089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070889116 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093232414 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075653107 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088137891 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075803855 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094904807 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070458266 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07232644 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095783081 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067484387 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089764242 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067732137 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104366721 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068668872 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084333557 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067920684 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080469749 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090321142 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069992878 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0847739 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077702601 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063459999 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088129887 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071532594 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087551233 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081082847 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092324123 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075698151 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096077383 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07798523 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070008726 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091236683 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066431386 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088974048 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068710069 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076409701 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081801458 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072644783 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087957863 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070924597 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078832602 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086375836 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069920265 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095207913 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07566922 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086083697 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066893256 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073020632 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087907093 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07365206 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096022757 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069043667 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064080035 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083072039 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073312675 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.087059951 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074299971 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091756217 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073311829 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064619066 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085667139 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074455351 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096775692 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070421915 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070463029 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094705827 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070985765 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087727963 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076849819 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089793236 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069411674 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076286251 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088546764 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065165576 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090311941 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073243432 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068154419 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091479475 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07316504 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09020825 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071102034 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085367814 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076057516 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070640237 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086705841 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070154605 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085660515 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081010711 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071904295 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08321013 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067316428 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094606127 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068118099 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069359268 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086994943 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071895478 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088948437 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067852106 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069299124 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089517447 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080519611 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092080177 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070926089 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093055204 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081889304 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087742502 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073482924 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068999907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089000571 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070892917 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096747967 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075636006 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092714707 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072262125 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066163158 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093729323 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077627018 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086965833 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067941005 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068562318 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091608207 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075744479 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091205042 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070554033 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085474657 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07054808 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07357449 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089904932 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069362787 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086714878 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074780565 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086326342 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076880789 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070897567 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099232725 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07299694 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083739775 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073312731 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085355196 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076881289 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06535918 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085210147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069748921 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088570675 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068944595 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072139392 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082362707 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077261761 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095737658 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070490637 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06961157 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088260654 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077507796 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089272614 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07394139 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07313076 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094197514 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080372303 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087414659 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073276 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099141516 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070329581 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064147285 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093466863 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069326049 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086303358 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069419224 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067805513 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09132029 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078747166 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09574056 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063985006 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090028284 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068688181 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068332033 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083867587 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074550888 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090367495 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070496567 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076577764 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089291582 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07144414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092514503 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070693739 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07010398 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088834298 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073088236 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088617503 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072870174 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068555566 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091962054 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069011231 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085646303 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072198557 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069955731 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089189746 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075169023 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087471304 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070411082 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089515615 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071535156 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070530327 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089020483 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069424698 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09058435 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071049397 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069806495 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090345057 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065397657 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094285121 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070181328 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077552463 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089000723 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067165598 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092631173 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072750376 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07522523 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089557064 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071307506 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089593452 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070026888 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090353256 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077347648 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067829745 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099693866 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078135386 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089033923 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073224472 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08714402 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071734016 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069245382 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088686597 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071126894 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069818736 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088592324 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074913394 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091614993 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070917305 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070685039 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090970174 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069750931 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090072981 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064408453 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068905821 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087713523 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070102616 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09828937 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071639489 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087430809 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069783506 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070751083 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087439969 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066736322 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096105517 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079168847 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089162065 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077343602 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068467012 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090049894 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080938156 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083052361 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068402704 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085596578 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068422168 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076682867 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08958208 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080105948 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08782518 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069922001 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066880401 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088674821 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069081901 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063257498 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086510181 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073524836 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088246216 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069352098 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070011844 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092147515 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071317365 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098964802 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06995298 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089477009 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071094106 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066986691 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087609325 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069218084 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090940709 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071412586 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068286659 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085549743 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070301361 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069958547 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090219846 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069936923 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089589469 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077150356 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087271667 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07374276 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072998151 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086198958 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073603433 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088077292 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070369118 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069057505 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092279533 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074303108 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08916742 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079783334 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087573968 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070907304 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07005087 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086867031 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070317586 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069223147 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089585809 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069648661 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089511864 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078111772 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085668296 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073496227 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06961107 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088880991 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077167602 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089095041 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073544069 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095290026 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070974524 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07216258 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09604653 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074178116 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091262685 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071432842 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071058989 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095401227 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069403362 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094293942 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070426221 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088378515 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072459048 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067858035 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088367478 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070259719 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068326718 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09579347 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070381617 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088112082 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069288266 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06787617 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089824752 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074721547 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096263686 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072256207 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091835512 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065343201 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06672392 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089791042 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068844999 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089845199 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073292209 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075954087 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091011222 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070509878 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0870104 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07931237 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094084701 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074015346 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067851738 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092945437 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071236693 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090251289 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072439457 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07020998 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090282669 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074237575 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08941095 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070270378 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076531691 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093093695 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071012867 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090004668 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071251224 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069931084 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083974572 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070685031 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090093889 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075777191 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072261761 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09000515 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080575671 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086828928 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07062342 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091923345 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069812428 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07437914 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083850665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071502238 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089514055 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071955831 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065527655 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088581279 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067939321 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09053365 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070111798 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064819136 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099729399 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079927075 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092060052 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069824288 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068096365 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085419684 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065931107 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088055186 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071630881 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071654061 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099791372 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068918553 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08783888 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066016324 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069665406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092643996 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073057722 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086436242 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06594643 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068734477 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092540102 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075688366 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087791708 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070252948 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072719473 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092268915 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067600298 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092949668 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067288052 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092322487 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083627398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069933479 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089802451 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076257677 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097573123 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070973736 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083871755 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071817284 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073514354 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089603843 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071348511 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089930282 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086111401 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09135318 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06945535 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068305074 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091880339 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069682433 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096827422 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071837387 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070011943 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094805618 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071961425 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098206706 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072955392 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096635378 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073671368 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091902298 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069738252 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069924283 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087259728 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069344628 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089245252 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071876114 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074140913 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.097186248 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068984697 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100507827 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079200084 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090820368 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066990993 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068403933 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088325327 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065378705 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089494718 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069288522 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067838765 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087271948 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070126759 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088509855 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077620948 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070845317 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.090338384 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070200058 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082677815 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072478685 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072638444 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090013627 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067601449 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069777221 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090353952 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074145208 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092628996 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068406478 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090129504 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072954498 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070464643 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084512119 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076908251 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068829837 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092584656 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06910984 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089299467 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071504945 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091564994 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076003005 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070640863 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091298435 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078861158 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091639209 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068252063 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066898367 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095255105 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068346312 seconds)
  done (took 48.296745609 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113317282 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08647157 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065919285 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084982486 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079022869 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085922733 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066048969 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065977498 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085966564 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068752194 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084585044 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065746812 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093740401 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090860478 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097915545 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069866725 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085253845 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067140887 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08466371 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067108618 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093888575 seconds)
  done (took 2.55800242 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080119443 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.094177841 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077505946 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099864042 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070925279 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094010188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076517901 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093802643 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099334949 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071252461 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099231102 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074980107 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09011536 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071666754 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089449582 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075282714 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099338238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07191884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093278011 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077168848 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094295487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077994689 seconds)
  done (took 2.722990388 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071329749 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068645362 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090041302 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066079873 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068178886 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084169316 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073181037 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086535644 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07400523 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068502853 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.088298835 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.078772423 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089677298 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065583544 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069732182 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08646149 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137486003 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074689556 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068643454 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091095725 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06559595 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091081312 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06585978 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065259561 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.088008919 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073710934 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089307508 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067856649 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069117779 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.088079672 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070031649 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086022082 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07114957 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06983954 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087797468 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069146812 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068749198 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088814124 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065546407 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08623314 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070741413 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065906081 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089228862 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070981666 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066901788 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.087459419 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071500848 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088781267 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065060834 seconds)
  done (took 4.66086454 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089420491 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.136422157 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091987509 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093567153 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106952019 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097731477 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073393642 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116409783 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066910289 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089054328 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086472423 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108246619 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089642811 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074830191 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094963977 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070211497 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070120145 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08920083 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073547707 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089588117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074267957 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.096307504 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10396333 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084085658 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092742503 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069208249 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088375264 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07460388 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102711835 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074934473 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093902738 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076161704 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10498459 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071385633 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089151977 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072054215 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106886247 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06937813 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091656243 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067730776 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091232166 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074188252 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095959135 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.087211954 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089689753 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074679047 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089409761 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066705648 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10436977 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07176668 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097921179 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104337233 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07456537 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088795975 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075121517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.105058548 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070348014 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087199314 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073302988 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10262415 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067855666 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091861778 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085000678 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091619226 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077723727 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104708514 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075036558 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093640991 seconds)
  done (took 6.918149424 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080083839 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095782237 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085366719 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105659159 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096009011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077444728 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095781558 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076706789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09576186 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081924881 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096205062 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117690496 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072291642 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099413599 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077239545 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097187518 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077266431 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096966512 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076417206 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097708506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095366166 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085218445 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096872758 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10484103 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107900884 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092115656 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077247856 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095483456 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084981024 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097401201 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108772564 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077003162 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096361234 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10438477 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.089397342 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095207596 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069171356 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09582278 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0773995 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096018278 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072062261 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105137507 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076274858 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.091617651 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076032932 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096663223 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105009863 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.088585196 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099786209 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101326256 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077213105 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106040782 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075901049 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096835249 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104336502 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.112027832 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1059671 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104819279 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077016951 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105443378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104546512 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11167185 seconds)
  done (took 6.602670867 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091953996 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099624058 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101931586 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066196928 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06783162 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095051537 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067544334 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087069702 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078626897 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098904395 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081824634 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093704926 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077331269 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102900305 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093239242 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077212214 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093856634 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074920775 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098778187 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073769861 seconds)
  done (took 2.587067034 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080125658 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107379407 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071165892 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075531368 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094210303 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075202789 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092562854 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073307111 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090088141 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073163045 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100726414 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080770535 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09035918 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076817529 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099753197 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07657716 seconds)
  done (took 2.226960966 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083285106 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.101162994 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084649851 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090456457 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06842145 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086756547 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070516321 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06544709 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087005624 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084618657 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091005833 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072684816 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090261314 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068534585 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066142308 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09350931 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066153178 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088067353 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06992988 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104739658 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082224574 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087831479 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071555105 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070879843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091545045 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074822624 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.09112251 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068032708 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088195341 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070344834 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.09017316 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077783627 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086627441 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069293428 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067899901 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087096314 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070145569 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090147501 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072933927 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068855557 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08817357 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069809834 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089583668 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070967445 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08525085 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070803954 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06576307 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096539853 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068335986 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090459351 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070228946 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092217908 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071536721 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079665829 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094241358 seconds)
  done (took 5.285868789 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084681651 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07262419 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085985555 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068181406 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093032896 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071409487 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072610185 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092828272 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071552535 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087884038 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072051189 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092374472 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073010487 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072456169 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092197024 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073914323 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085148464 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072290418 seconds)
  done (took 2.308374878 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07630514 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069353308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098253567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069893131 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090210659 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072536609 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066023713 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088823362 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069055834 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08968873 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070942971 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072154329 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088552082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072219696 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089691024 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070507934 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071720147 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088952523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070478553 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085459153 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072931579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068021107 seconds)
  done (took 2.588094588 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076107277 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09722214 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169217807 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112987827 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086807846 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.104654359 seconds)
  done (took 1.523763768 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095721821 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10383041 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071274585 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111303307 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078578192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091155525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071997619 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091377651 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081602742 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105776722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072310511 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10204952 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10010765 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081421525 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098189393 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077464776 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092707297 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071452483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091587385 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110519824 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072205024 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100688396 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072317531 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092228491 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072515313 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101269911 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08064133 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107067096 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092235908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080898154 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097910597 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072498316 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101053173 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105397468 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074364957 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100157683 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072670919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111450295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077290725 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102174283 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072516646 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099377921 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100974047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07681107 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101577327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07258602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098520687 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071283297 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092804509 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117603666 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078003302 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101303697 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097801558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081538429 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100844824 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118778754 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085605551 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101390906 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097959507 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086070196 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101895374 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07722562 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10170185 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106604834 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077775737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101835842 seconds)
  done (took 6.886056514 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089447242 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110851965 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072769554 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107089235 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100919413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072635326 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09107365 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072482058 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092001486 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07205955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13446892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072379472 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101773088 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100244182 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073152404 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092246514 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072564241 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101270216 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072180168 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118379674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091773045 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079980406 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101311041 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100168778 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086173137 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098244214 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071792964 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093017982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072057051 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093189233 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077214693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093249279 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099867752 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071722451 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100752456 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072340362 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093104624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07756139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092618366 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077802713 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102340853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110560088 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072819764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09215948 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085068791 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093149947 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071397213 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091796948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071498575 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092882037 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085941824 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108469319 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106681852 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10052759 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072641617 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092014031 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072617952 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091994438 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073195732 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097839168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08028369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091946469 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119455173 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072840916 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093151569 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081127884 seconds)
  done (took 6.769967731 seconds)
done (took 133.39966781 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220355299 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198593114 seconds)
  done (took 1.295895778 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072593993 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099963214 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10423487 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.161076947 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088911488 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.109515566 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120303814 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081191351 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069526198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091055857 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070991011 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091519661 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173898597 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067996829 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087913991 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071993801 seconds)
  done (took 2.448002737 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107133846 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.207494541 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114099301 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068779151 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104884705 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081863076 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089464094 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080696944 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098917817 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069370738 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08113523 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101090502 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068197529 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10072739 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078654733 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102799872 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068070115 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102967427 seconds)
  done (took 2.614733723 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109499463 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158537999 seconds)
  done (took 1.1541903 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.211711872 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124834475 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206322567 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.418084291 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.211158498 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.286624283 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.182406929 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180532729 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164736553 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.173226798 seconds)
  done (took 3.044210312 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103910847 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177736934 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324918682 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143850953 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090811042 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122203016 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145237429 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.093112634 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.107077321 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105285147 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084174055 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.103294317 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102274581 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100973102 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077553711 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101967257 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126741715 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078425296 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.10060275 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080221069 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.12325677 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070426302 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078399091 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.100109723 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08071893 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10383701 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068913069 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090502049 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079423465 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099620188 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083145533 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120417806 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102831814 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.138491286 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.085423342 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.138358766 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103304372 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07564081 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.100112574 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075596661 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102525354 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081226781 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108534089 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080416758 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091195881 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080921814 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090700021 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069627815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10423082 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.082055558 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103899372 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082462581 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13737908 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102908745 seconds)
  done (took 6.491494332 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.779466129 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.115781018 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099189349 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.844441531 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093084132 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111687588 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.743404491 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123304504 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21778394 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.798068939 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095555399 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102935821 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.189402138 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240037426 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.885117564 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287159181 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.6489225 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111209804 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114225105 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.139716584 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144292825 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.182052069 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.154237837 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436497735 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076701461 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094152479 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140153848 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075497568 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163760947 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085909922 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094981977 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158566035 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.227985901 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.159158239 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099071367 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070188435 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093011942 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.157098038 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244644298 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.175188338 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161632541 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068803138 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093661167 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143846552 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134809162 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069342847 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142830678 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176590295 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152353689 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074284653 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096988123 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146495268 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141198825 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145969578 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102486207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.266683424 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294651961 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092373493 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101568254 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105472738 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240872388 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084770635 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204115748 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14195265 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.172344994 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092879539 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.735697956 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149309248 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092987736 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075032183 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121896056 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097121056 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142149989 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147713855 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.348685158 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166967789 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074189877 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093088409 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209698784 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084014553 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09263955 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144634293 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076309163 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124300445 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168547191 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146265344 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.150621216 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209668169 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14488318 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163314702 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076221616 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127234653 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076071278 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19242666 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198286257 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143904862 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18787292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163114595 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.144920903 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150730277 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076478189 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173946317 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099871635 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102633673 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141271348 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196767485 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125743251 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083306342 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096960588 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144641765 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128718813 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086698025 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.163473425 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152953022 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460165263 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.14990675 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089218936 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08893852 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141542713 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.14258555 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098484131 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216412499 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124157399 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.149109243 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123362197 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090782293 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121320557 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143617852 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07894632 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124159204 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140844315 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100812659 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216928546 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195792684 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07891536 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219915948 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.142332019 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098061595 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152026935 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123109727 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14908883 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077609364 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162468436 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077466718 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773412319 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147702447 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124554813 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074659646 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177021146 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070508629 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106794985 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105372134 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069498525 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760233308 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087159531 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102492237 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08427364 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097412973 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124658594 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142908771 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076174713 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146361345 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210520033 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098596231 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0985312 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106482901 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142452912 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098393086 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084811742 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106958975 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084314368 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124639352 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096136727 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084407082 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171377327 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145466706 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.175146632 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57520743 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071183082 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106177418 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183460698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093601868 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269101565 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140589917 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.179762067 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142973924 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10289118 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.296784573 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146974654 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176573023 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086996737 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154291156 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091294296 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140474441 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.145891186 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091913048 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076921004 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144987149 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146839679 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166315681 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.923378056 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093341575 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207159296 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069022284 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.152021733 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099066802 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078775412 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266928761 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070936175 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.170828585 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.146767441 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074451804 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105453497 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67765928 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106304236 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143693347 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07566794 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202785336 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.146945878 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140321949 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162776215 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077071242 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144432393 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.193058911 seconds)
  done (took 41.156840352 seconds)
done (took 59.091477321 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271221988 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.18803302 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259483568 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15381556 seconds)
  done (took 1.861590615 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152331322 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109293972 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124486484 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090104408 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108979588 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090853504 seconds)
  done (took 1.585691029 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.424014736 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278123736 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239636866 seconds)
  done (took 1.852828133 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273297819 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.223492777 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469991774 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.312804877 seconds)
  done (took 2.325583329 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.184538658 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120441103 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070282363 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111792677 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.168291654 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266081492 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.134500628 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197496629 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08377455 seconds)
  done (took 2.298838157 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207517189 seconds)
done (took 11.044783699 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108598471 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.190710024 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.199654185 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.102839243 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 0.131176859 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.14498308 seconds)
    (7/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.213927903 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.104236116 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082894266 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110157632 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.253141648 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081708208 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.159875786 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076129078 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.103445329 seconds)
    (16/309) benchmarking ("sort", Float32, false)...
    done (took 0.132953746 seconds)
    (17/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.105037227 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081627732 seconds)
    (19/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.263348539 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.114997577 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.23882451 seconds)
    (22/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.223817812 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.224304826 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213270881 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082724449 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054141456 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.204822594 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.131902587 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076194125 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.125405139 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114529194 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.220037504 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105659213 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.187039039 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083429754 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09843829 seconds)
    (37/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.205300177 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.159413987 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12386735 seconds)
    (40/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.11290447 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 0.171602999 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.167230222 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05581521 seconds)
    (44/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136401424 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073371408 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.105167849 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.141850083 seconds)
    (48/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.218689246 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.100965074 seconds)
    (50/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118734138 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116911512 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122946716 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.177453656 seconds)
    (54/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.240376907 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081153054 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.103021547 seconds)
    (57/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076365591 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067536394 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103654303 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077958768 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094873315 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100567503 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092363024 seconds)
    (64/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.114773933 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11922434 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078732195 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.201022615 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093885557 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104579936 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102241131 seconds)
    (71/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165443517 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07607129 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097151943 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078966724 seconds)
    (75/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.133710362 seconds)
    (76/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.226110714 seconds)
    (77/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065544164 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.180551139 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077046653 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115208097 seconds)
    (81/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080449313 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.163007495 seconds)
    (83/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164798372 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.094486682 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.229844782 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100333891 seconds)
    (87/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091151032 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095163913 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.102905731 seconds)
    (90/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07285745 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095452137 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093392449 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075768642 seconds)
    (94/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125582538 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162485477 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.201099663 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055513656 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098211315 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.20754393 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066883805 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.198430548 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069574601 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.119049229 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.154618885 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136695781 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084597041 seconds)
    (107/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100635556 seconds)
    (108/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066867367 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05397168 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07799789 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071574783 seconds)
    (112/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.2382638 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054845693 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10928058 seconds)
    (115/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096778771 seconds)
    (116/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094850916 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056452898 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.197118977 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075272735 seconds)
    (120/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.187092929 seconds)
    (121/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056536735 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076196782 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101357767 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20359805 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151001047 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.088188355 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069514478 seconds)
    (128/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113258231 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.093995003 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071348751 seconds)
    (131/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166849109 seconds)
    (132/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071588567 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119649384 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070184465 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.176848961 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07771801 seconds)
    (137/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079660635 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076782871 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069188419 seconds)
    (140/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092808341 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075556381 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.099420695 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077311573 seconds)
    (144/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.105887967 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201580054 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.13253027 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054698978 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076480584 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.078258279 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.212091387 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.16648805 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078603357 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055155348 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068917627 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100401099 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077784427 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117803926 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094709373 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055069341 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054328266 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100100368 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05491817 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054006041 seconds)
    (164/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090794733 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121328008 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.123733765 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071910489 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077807895 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08001667 seconds)
    (170/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.144403849 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078079471 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055737181 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054614655 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092378462 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076060768 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055544866 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202033081 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07716117 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.079542059 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151879033 seconds)
    (181/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.101660174 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054881661 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068615899 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095944056 seconds)
    (185/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055696305 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069010879 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078225855 seconds)
    (188/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084928707 seconds)
    (189/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.127021338 seconds)
    (190/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073975054 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127423909 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176450658 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167151304 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053685939 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096531208 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118043372 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080060086 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076430971 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117905451 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073985525 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06882802 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.121741506 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079741842 seconds)
    (204/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083690559 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099728656 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074882175 seconds)
    (207/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.384923526 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055753731 seconds)
    (209/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.134305239 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103229359 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.12285893 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178194831 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080175018 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069352954 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082526246 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092798962 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130143983 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167505304 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068875223 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113558539 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056085972 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168847975 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054818915 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069966489 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.104051874 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076784007 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104239182 seconds)
    (228/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080581198 seconds)
    (229/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071787164 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116819463 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074769927 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078567056 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065664541 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068151574 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098988987 seconds)
    (236/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066284426 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093061281 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094536187 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071179372 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093530613 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145350019 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081193255 seconds)
    (243/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077321412 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199814407 seconds)
    (245/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056343184 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069627322 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095094263 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071118183 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.117226882 seconds)
    (250/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055814379 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109605546 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.165054916 seconds)
    (253/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054688848 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134194143 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.1080817 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053609426 seconds)
    (257/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083317142 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069281229 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054191979 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078306538 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077976819 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104875629 seconds)
    (263/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066482924 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076029993 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167246182 seconds)
    (266/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067020256 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 0.221256295 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097355678 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094945529 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076758127 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.097663533 seconds)
    (272/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103996511 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.128842345 seconds)
    (274/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084213168 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093355894 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086689869 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054630682 seconds)
    (278/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100289181 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124876382 seconds)
    (280/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.0783508 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057611495 seconds)
    (282/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071392822 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.099924448 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054801516 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077113549 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125042346 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070340676 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091470433 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056126544 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067992138 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103320127 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09331353 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055429415 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078546283 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075494672 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068684501 seconds)
    (297/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.079137623 seconds)
    (298/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054318838 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094406491 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094785572 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091087483 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099422473 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06944723 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.120450914 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070828863 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206907289 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070650957 seconds)
    (308/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064689996 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081211718 seconds)
  done (took 34.733585073 seconds)
done (took 35.65674759 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085887476 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121842392 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078771604 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.122006426 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085593102 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105718606 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076444863 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082187731 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10942764 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08521592 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.1056463 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057349309 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102594319 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078858017 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100859652 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093703221 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104045215 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074351016 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076333025 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091534682 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077972672 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.09223043 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071202843 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057933477 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105796332 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076889906 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075615049 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.103661254 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069548602 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093570665 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07312083 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076751301 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093553809 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083150908 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09926537 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077606757 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079344214 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104386257 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.0710748 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.09302148 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07838808 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069323506 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.100567904 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076854079 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074587825 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098996687 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077695816 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108026104 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096711254 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096783171 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077931101 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104451574 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081560567 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076128875 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.097668445 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078316919 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09844365 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097712043 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102138982 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072507174 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077478917 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.10310654 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075106069 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.100797297 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077570689 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079630199 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104945151 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075440245 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103047409 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0749737 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068789304 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102143297 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072771389 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06871744 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.104311459 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080359536 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091807735 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075172295 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076022737 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.100298959 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068672879 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094596633 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071199365 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075930225 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095820239 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057884975 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072810725 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099550518 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069036127 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077491734 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099492025 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076641503 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093850506 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080454464 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069186704 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09876651 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070292126 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069017178 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095470712 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073396847 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069129308 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096294266 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078597501 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094900676 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075683031 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083840121 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093931002 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075958401 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091732198 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069145886 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085200708 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103733732 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069448214 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096059169 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068595866 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076211169 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092225048 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069364882 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069644982 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.093114714 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075747612 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068613446 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09679607 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076632033 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106786249 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06924055 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072234019 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097018778 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069666145 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074332938 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093746528 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069568266 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093681814 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06695796 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072096865 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093672493 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076605111 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071959622 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101706499 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070782837 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101628122 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074370172 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075484436 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098438208 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068546321 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061757297 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096881808 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072005278 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070987406 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093552481 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070799673 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068261539 seconds)
done (took 13.797977179 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07028871 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176183632 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132423002 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101443742 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11639936 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06993831 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.106133429 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.107386438 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095159485 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129774234 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089793465 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109193521 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116915864 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092454587 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069976702 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073250794 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.095421766 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.093344187 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.131943291 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090496984 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143770655 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091320664 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124432758 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092939352 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115033085 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096664862 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093556133 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073325985 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072871969 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132430659 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114597297 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073693958 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070219769 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13061315 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122501476 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087487049 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089935115 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087635373 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093275652 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070114774 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120091732 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105305801 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111063044 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086663708 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.100791743 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071902397 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094860596 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090897038 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120574706 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085209764 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.118338256 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139231887 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071350288 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110713142 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066794151 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11365297 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084031343 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093741736 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068658157 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094655696 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069199353 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073245852 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116751794 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.119427221 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072554201 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107809214 seconds)
  done (took 7.521276767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089241663 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.12197385 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088883073 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113083887 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069704428 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070048393 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094920879 seconds)
  done (took 1.628495132 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072103414 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093053132 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118776766 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094130211 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.115341911 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091542075 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104850823 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070183356 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113319425 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071343275 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116510494 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109876516 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096235053 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078104614 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09554246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.096021213 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095404136 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09496837 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07418133 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120037837 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073944479 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.116696887 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072945312 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070146714 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110101981 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070732533 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145990785 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075103255 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09612745 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073600605 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06849272 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147795046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110601317 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082277856 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069954298 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111193589 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085633977 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093287379 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087266103 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100465359 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.0855042 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071128427 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096723232 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069667356 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074440219 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107359403 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071381898 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09610284 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073497625 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091181977 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097645785 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085788991 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095280462 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074736477 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071744062 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102095344 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080508462 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095875693 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09251306 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071657129 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113744492 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088335863 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.110594479 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087952136 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098677731 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085176353 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110151748 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073204293 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072301592 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.099268098 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088249347 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093706398 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0727634 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082205035 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096807848 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095315545 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.120531309 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071961643 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105901186 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071583351 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070701302 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095689902 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095119947 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099797953 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070283942 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074803263 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098764694 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068650085 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069477972 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09985509 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068806555 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09694671 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074165888 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071016888 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098289735 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089383132 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.096211914 seconds)
  done (took 9.7509929 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07312226 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07208938 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097538071 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072405725 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071672778 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09737146 seconds)
  done (took 1.477414906 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103621397 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098574231 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085667113 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.101805378 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109979141 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109816745 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087231964 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11249181 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089491478 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106300031 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085383518 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112282095 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092392285 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102144215 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086777891 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101481053 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0875016 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106060586 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083506546 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102287039 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093200335 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101991332 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078059424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087678432 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.100003237 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076793341 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107968746 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0847606 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10830265 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.087723339 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101926162 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075023439 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100634947 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.087646212 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111046848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076800495 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101452818 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075042449 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102322992 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07226716 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107716769 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075212308 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079539528 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096268506 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108475824 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07406067 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072271869 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102202079 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082822453 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096863057 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072961151 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097890142 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07240351 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096599136 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074322985 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107848113 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073640601 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107212167 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075280172 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073816402 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095596236 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072807607 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10785047 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072371384 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106356131 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072654712 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096918519 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074805154 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098549617 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074891561 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072885328 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09504465 seconds)
  done (took 7.578601126 seconds)
done (took 28.936903131 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669382178 seconds)
  done (took 1.659816825 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.807011777 seconds)
  done (took 1.800301325 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.955151207 seconds)
  done (took 16.9568969 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.65271409 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.789901369 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.813842547 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158122105 seconds)
  done (took 3.408499986 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.915246547 seconds)
  done (took 1.937695265 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24630963 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23444572 seconds)
  done (took 1.48048297 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769075754 seconds)
  done (took 1.777813694 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.309533303 seconds)
  done (took 2.309956721 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337317869 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189759004 seconds)
  done (took 1.536523158 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.542389826 seconds)
  done (took 1.55206542 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.126597968 seconds)
  done (took 8.14012229 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240333335 seconds)
  done (took 1.263501454 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276728687 seconds)
  done (took 1.286981933 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.356811555 seconds)
  done (took 4.36836561 seconds)
done (took 50.47745086 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082171058 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086126433 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107937809 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080233808 seconds)
  done (took 1.362782995 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082430976 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077263518 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105512794 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074385488 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103196187 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07528826 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100566609 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079022292 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07332214 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099890375 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.0747973 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097637435 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076874183 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100360355 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07307781 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076984235 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101841102 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074255516 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101426007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074839078 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072015849 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100089734 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077478426 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097298505 seconds)
  done (took 3.087480635 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082282828 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077347152 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103996289 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075906589 seconds)
  done (took 1.353285516 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081497909 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.122703001 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093376635 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080509452 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09445893 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112432016 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070545493 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070059719 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096363864 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07849029 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093065892 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100435815 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113316016 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078089718 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104569499 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067399257 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070182588 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113417832 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079135284 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103633294 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071188319 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080641519 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094090543 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092039601 seconds)
  done (took 3.209835274 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081483808 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.132516939 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080605429 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.11594468 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093745265 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090944005 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076921238 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.116943231 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127791765 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.091486652 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071341168 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067035529 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098590975 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066551427 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077562198 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135152298 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.137962325 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070434097 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123803284 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067348078 seconds)
  done (took 2.948720088 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078882916 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074186058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094948064 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072037185 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07963372 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102459079 seconds)
  done (took 1.528835922 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072037773 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070704275 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096000186 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070195036 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075470064 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096494455 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069079701 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070355409 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096737716 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070480003 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070261925 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095034276 seconds)
  done (took 1.975169755 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.440198654 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071419594 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095456843 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070153776 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074884691 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095361582 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084889667 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071203995 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122771141 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069977647 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096191137 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072683318 seconds)
  done (took 2.391672098 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271453849 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07879114 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.332287784 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171726238 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143563436 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159243187 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107534179 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143401132 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203287775 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142120561 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204778469 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230331627 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137715176 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171444379 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117787664 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.135512762 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19146216 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228290267 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133221437 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204371712 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211099719 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159586197 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184263751 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131316905 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138077209 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153298019 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073451845 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107805983 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23906456 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164601099 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206607734 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141397255 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098815929 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237086265 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233164235 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200914386 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167482112 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087285294 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163720603 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172622701 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271953032 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121878531 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205336564 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142164616 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113273664 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182936228 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155139755 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.156068976 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145949123 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122641914 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184157382 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255093734 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176565085 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120371608 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144660451 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149987979 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152766444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109072577 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2855666 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208387051 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168883662 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102290317 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131086699 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197930486 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16895041 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150693095 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162931169 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127436462 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178514513 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225378128 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15628594 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182620003 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.192029526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093300338 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15529892 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207891969 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167620059 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244072209 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164069343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078173266 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163137897 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139135831 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114209924 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.150924601 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107975673 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219977134 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132451187 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.148165927 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148119609 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144187924 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145155418 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206394134 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214673927 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137298331 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070287516 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139504046 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159092869 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186335771 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120875811 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142782614 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156903668 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08380193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204592854 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079608791 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162333337 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.110565157 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159757057 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171797058 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105934223 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163880744 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108316275 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.136823514 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173581281 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233100814 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12315657 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088802896 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240256429 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164940679 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141012239 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186433817 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228311818 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107098707 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138506075 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217742929 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256143247 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094741313 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238027587 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143938575 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088316057 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119897749 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159695785 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143062161 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152234905 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111725187 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157400287 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233193273 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076801908 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124118572 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17073933 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083534923 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109960933 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14401233 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131244793 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097831647 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130203795 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136943946 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199900076 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15872949 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110954113 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183547063 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101807905 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231117761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118593998 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133832995 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132604605 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071886654 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168443581 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22174718 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081680691 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231567194 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157365952 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135491521 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151301497 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084873748 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199002827 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080893061 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071905233 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204566316 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141391308 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139824672 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188804247 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134415348 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159151643 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154657342 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166723097 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191058205 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165583552 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136650622 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090129356 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143852627 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158174006 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101857902 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123754325 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087155561 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136594448 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127473562 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088346152 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208088775 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16357777 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131915053 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145525439 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102780586 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217934913 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081942433 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167995222 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.156289142 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128147718 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224434437 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197381522 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174764033 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133294054 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212304764 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075124666 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105363546 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09687206 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164806769 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115493359 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087568938 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174273513 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183448987 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159531958 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170161791 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141200756 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152173081 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217076404 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075018974 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148531083 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183251403 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157042834 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158782238 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11529373 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101454396 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206188209 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139143871 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252160501 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147324356 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154923982 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185666898 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133307446 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108562531 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108161172 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197910718 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136343106 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184898283 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129559421 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116919062 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141000474 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083954676 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134319541 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160000956 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152838381 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193098865 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147569034 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165765695 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078152566 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175524726 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154657172 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15466285 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066272569 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152427417 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226112548 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123417051 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150016258 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196815327 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108606647 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156181125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249134106 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184715505 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114061392 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141401881 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153237205 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163390729 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152192228 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175940268 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142117816 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167470502 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142274665 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086883177 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116313542 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127606295 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137163781 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097568834 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.166997085 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148533604 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097099635 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163623535 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142310223 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140153625 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14917998 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127738116 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09367927 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126144828 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240302299 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153350034 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239742852 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129552948 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184483393 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232238568 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077170616 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107940867 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082783894 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198828364 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086826775 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166044318 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12676976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135025671 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159135249 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177497474 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125801652 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070134496 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139681232 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193800574 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115746396 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127987724 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135440852 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226868442 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105750951 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109311161 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157281136 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134589771 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105713602 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240075385 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.090158549 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100901322 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104518208 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083280353 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160901266 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219630498 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111423395 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.132412717 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147505628 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152062436 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187805172 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104696965 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128329941 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14441076 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182542989 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186567762 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092456274 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144175724 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162754646 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219448267 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137298919 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124598702 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210107391 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217654355 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22689519 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091870079 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146663681 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146931808 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139820498 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203135476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085291288 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232468677 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111492859 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171405908 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134385525 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122508687 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162659266 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127868742 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091120304 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214275276 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15579149 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106364886 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110748774 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150553907 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155569659 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137767849 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077472243 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199925247 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074376845 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20002106 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20794598 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110363475 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13653302 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100484511 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116592809 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140539196 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133635028 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090706299 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148669992 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242843387 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123672339 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191156225 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203133285 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145935498 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172756019 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12990399 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666725187 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081246367 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219157641 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152708087 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244805827 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127137643 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151094299 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114081545 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181998586 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178768499 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136877367 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206358492 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166458323 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153551244 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106725742 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106665664 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141081304 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121330202 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138102238 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147020903 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149717136 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129934897 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153154088 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159065434 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109755646 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098224643 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222047946 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148664033 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177334999 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172909353 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11424987 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150152789 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201322088 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082474228 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154671825 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220431243 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138849939 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128171348 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083994162 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136372407 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238989656 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074646129 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226324081 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155828371 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141331126 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144555186 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150383927 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192662556 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138627665 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157840163 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098790888 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16976238 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120573789 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113305172 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106422042 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109765399 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142407673 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128827855 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132757414 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125208245 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211799389 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072415393 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125797061 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134048302 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178047346 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24465177 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118475742 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084354205 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150144143 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14339305 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14659066 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184379823 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084728232 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112154192 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084618504 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.141524213 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140231078 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144609372 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107923686 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141522117 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231322052 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113535382 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227904026 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125732998 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135988245 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070651902 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109019799 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098629042 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127212025 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138987273 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130283783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238613808 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099759973 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12098876 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122460585 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075273321 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111828177 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162882624 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141433664 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153074978 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12826901 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06518905 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140341505 seconds)
  done (took 73.569909989 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149310131 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125312175 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.138376282 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193671357 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162777319 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259684901 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.198787656 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24433753 seconds)
  done (took 2.578221968 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075070628 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124833579 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106687857 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.124280198 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094806294 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072464917 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.301999503 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.116815695 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069614475 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119599787 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120650283 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093221869 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485367406 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068740917 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099939769 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091668765 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07141108 seconds)
  done (took 3.336095819 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.4488511 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.664998567 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.457697238 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074604815 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.082669899 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.109008257 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.691695495 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168875202 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093798689 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.448144205 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.734578425 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159150314 seconds)
  done (took 18.24207355 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080741865 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073075945 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11753117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088415231 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.105498452 seconds)
  done (took 1.57380928 seconds)
done (took 118.164811444 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084676346 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.368931264 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056127594 seconds)
  done (took 1.568196464 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088778832 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089133762 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118318604 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087656547 seconds)
  done (took 1.502072213 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079291381 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080166536 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.118272425 seconds)
  done (took 1.392810434 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.293757064 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175890451 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091642381 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087057385 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081428416 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.11128302 seconds)
  done (took 1.395473746 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076664919 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078869397 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106614662 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080838402 seconds)
  done (took 1.452370734 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081016806 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05572384 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058309595 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088300449 seconds)
  done (took 1.400073628 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094030025 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.112614553 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08484802 seconds)
  done (took 1.403223971 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114211032 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.119454937 seconds)
  done (took 1.349610429 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086419362 seconds)
  done (took 1.196719058 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099850831 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147979396 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165534652 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.146647124 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176116355 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14564043 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.120724383 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092162444 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110712166 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.123210944 seconds)
  done (took 2.446408503 seconds)
done (took 16.85625273 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083007218 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.402567609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364853182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126045492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673444775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359428286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.014921416 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126794646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129212359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100875484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088601535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681961801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973809677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.355734914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961295252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325041267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683842388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071592696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099630085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072046977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968587501 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100123679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071116241 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071943672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.682274067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375317597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100880164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325299008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07176959 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102977965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358168134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100879921 seconds)
  done (took 16.127798831 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074919484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152563051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077149387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087923354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103136785 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073723498 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104265218 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073035674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162539084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071187765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11901121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071143793 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103752213 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072853182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091746989 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101278101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072622937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07209254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10124173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072049726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120864127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071428791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072415328 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101707959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071944994 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113318204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072874659 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071842592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100831648 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07371439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103838629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072819233 seconds)
  done (took 4.021936115 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119979107 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162222943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07747845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137043409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11867215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103559876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.179523217 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099302752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164277708 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071740143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118687242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071650465 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135765745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071948932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121797972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072623371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072718814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101182879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072039275 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100773888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091503936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099431089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072783036 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072621809 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101303104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085968367 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100472452 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072261469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072481307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102988359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075490643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100507941 seconds)
  done (took 4.34552845 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076542687 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078646924 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115856598 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08734608 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102010565 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075619256 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076203517 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102768529 seconds)
  done (took 1.835015757 seconds)
done (took 27.440964337 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082103097 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073741024 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106141821 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08437748 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105415771 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083201024 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071093509 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108129327 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080949177 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076502277 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.108428788 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071265117 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10389053 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071282966 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077419476 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100418319 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083969969 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104646952 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083493373 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083223242 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.103130448 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080589536 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106920126 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083941681 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.112681081 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083795721 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086472345 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106643848 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073324006 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102674202 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080637137 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088024587 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.102150495 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08367559 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101271647 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071201108 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071255392 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100598218 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083891515 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107800605 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074033573 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106351289 seconds)
  done (took 4.883577531 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092782078 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095310126 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119847076 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068454834 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.105332034 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068918943 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.122187942 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06685237 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061656852 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.12319848 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059089775 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062227895 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.096186201 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057332226 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06194755 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059324662 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.095009641 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05886324 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062053753 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.092836761 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06122706 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056536878 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092251399 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066503361 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059146465 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.09357523 seconds)
  done (took 3.184124667 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079008263 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086933594 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120876163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132906129 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139784117 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081258865 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111898603 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091320088 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.119484169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070815787 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075323849 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.129669185 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091633831 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106693091 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069780538 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118357758 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084245592 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070817546 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103674137 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093109033 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115752596 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079659997 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.125015002 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083343683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069622158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10325439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075303235 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.114948819 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076265738 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080956291 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.105914051 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07496956 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102399117 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083437471 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075400354 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.102635894 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094166462 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111135959 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08130515 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071244281 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.105616212 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071481925 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.12238698 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115775145 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099872039 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079195389 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078600952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.110648071 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07076488 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119740807 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093107645 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099722057 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074636582 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070282397 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100661178 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085624984 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072609349 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104256997 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081314338 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104026203 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084645662 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075062451 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117913295 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070722155 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.108717118 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071016551 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072033375 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.099823403 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095622715 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102581128 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114610263 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10274971 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072931642 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080386 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.109124258 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07756483 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101282622 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087667376 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080784551 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104815221 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080313179 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104181651 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075400849 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091137459 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.103583278 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072941188 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07179984 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.108696317 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073875105 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.102093961 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086025299 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071177757 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.104359555 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090092095 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.100471972 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073227941 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077629731 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10741064 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070823864 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114471493 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07680824 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.101582969 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080987734 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070790035 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10464071 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081339719 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.10555975 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07063539 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075626377 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.108248766 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072166371 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072239186 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105068079 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072615929 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110874899 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078178486 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076187663 seconds)
  done (took 11.869219239 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20203075 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.195872127 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074691321 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.188899585 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080108459 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115366622 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.188783783 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100896741 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102945091 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071881052 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072563454 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.139226033 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.13139311 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113117618 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.11388193 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071083975 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119999225 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.109734449 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.191672513 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.186251403 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.122811576 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080718576 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073327387 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.104319511 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073820316 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080647265 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.121460705 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080409045 seconds)
  done (took 4.453984422 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086805928 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.136587602 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07747478 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093250876 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126883708 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072208721 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.108050536 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07291142 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.114516104 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083932656 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101159533 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078100912 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078018415 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.112973391 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072010925 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.112729027 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.082014087 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072568237 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105084014 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076382448 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.111630016 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.085778318 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075639888 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102401781 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078010107 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.101088906 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068157461 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.120695149 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071268133 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124374953 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069804335 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077805772 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116041888 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072335121 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101178175 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074988016 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074212442 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.105294975 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073646019 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070406828 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.100414331 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061023055 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070784281 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.115619351 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078043234 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.093736279 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077852929 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077003091 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106820217 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069308289 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10456576 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074920936 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074481266 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110884945 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076807899 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076426047 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.106450655 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069659496 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.108851923 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075053265 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06722463 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.100056904 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076672261 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070748285 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109807112 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075871222 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.100742608 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075338003 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076543217 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108980976 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075109008 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074653541 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.099247128 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073732357 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.106232253 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076146553 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075551465 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100888039 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072033173 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071594679 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.089558313 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072046703 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057354251 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105565154 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070216928 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070546906 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.105149891 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077687914 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.116053918 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073037235 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.108262252 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072767316 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070933411 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.105358259 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06732521 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074060694 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.119231808 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.118560717 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072080774 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069170942 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.118055201 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07677348 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070907904 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090545144 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078449788 seconds)
  done (took 10.357225026 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.101328713 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097140191 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104674346 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086823194 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.131748215 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.099324789 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110457602 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07800771 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073295433 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120324827 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070984667 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.111115923 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072209814 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081409812 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.132766221 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079397127 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.104015825 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08060427 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076000629 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.14440476 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087305614 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.116887118 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.084857567 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.102954543 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076610847 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084303718 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.132870489 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08311034 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.113270205 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088770331 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.084047016 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.13184711 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.089987715 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.106870673 seconds)
  done (took 4.496912183 seconds)
done (took 40.363935048 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.213626697 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425843904 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.201473074 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.182967261 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.203860718 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.231144468 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.216735511 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.203191597 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.583328305 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.204841207 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.443263803 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.917821623 seconds)
done (took 59.173204005 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.206665677 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.34199511 seconds)
    (2/2) benchmarking "String"...
    done (took 1.47457746 seconds)
  done (took 3.968738451 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.561378331 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.137056026 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463289686 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.212177332 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.203025939 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.506015177 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.903538894 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.113126744 seconds)
  done (took 27.680141214 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.204035759 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.591728067 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.818157587 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.813659469 seconds)
  done (took 18.572342649 seconds)
done (took 60.135333391 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.217962412 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.259971283 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.241299326 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.184515438 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310488305 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.244292317 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.265641939 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.266737166 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.205286534 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187266097 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.205850029 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.208469854 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.215638034 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.274946652 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.212422777 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.204898168 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.282887567 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.785341385 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62431817 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.22132272 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.23329075 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.22886223 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.213953409 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206090933 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.232581363 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200552931 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204716557 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.213749199 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.759920312 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.205209414 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.203568995 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.416953235 seconds)
  done (took 190.082205343 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.205895284 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.249904691 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.340192458 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.243342011 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.456118139 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.401424652 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.339279687 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.719951699 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222346651 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.222605172 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.4411291 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.20389592 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.531378796 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.172358915 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.213669266 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.273996211 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.389024532 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.527125879 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.216269659 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.477527229 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.226907063 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.489304932 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.428162273 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.375227422 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.261802737 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.239774696 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.212677472 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.236020889 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396361117 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.290650345 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.233982332 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.20670672 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.822831451 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.064784677 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.207506068 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.239555692 seconds)
  done (took 149.928648583 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.479255747 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206231605 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205982445 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206461043 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206906973 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.240534192 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.206570747 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.786014281 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786825779 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.753257246 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.754857351 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267935553 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495083035 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208282834 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303024411 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220241115 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.209313137 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222920914 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.23331979 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202896464 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208364022 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788648492 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.221455029 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.735769776 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211351831 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.208495642 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239896959 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.606146281 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209666024 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241629348 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.53414569 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.252158791 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206906642 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.553243743 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.557968067 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320058433 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210433537 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241387535 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20818994 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.488105796 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208828032 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.208729346 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212468672 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.8441255 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209845578 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790050069 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209293002 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170020295 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209649351 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209765764 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.729240174 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.771083517 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.210149772 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209102805 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212524792 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210074143 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209300702 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.243227646 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.703328521 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.312018256 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.211008316 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.213408076 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241880567 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210824839 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.499614923 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211829366 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.900240961 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.260680157 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.437141327 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791213024 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210805163 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306187181 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333245659 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.210030736 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.210788208 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.210739265 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211385132 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211835007 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320120107 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.210956628 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.635671776 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216318215 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212958685 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272218678 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309448328 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.210839591 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561822382 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.212749034 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210572167 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940007826 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303788505 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.210418919 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211057973 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212110591 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212417845 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.636136106 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791365617 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.43650364 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212123418 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212197701 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.873114322 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215609002 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.653227977 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.759332951 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.834925841 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214323976 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32411133 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216740747 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214881833 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212072575 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.240603059 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.213098488 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.271364437 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212598326 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.613180668 seconds)
  done (took 348.901260727 seconds)
done (took 691.536775065 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.902467581 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.877231911 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.993381706 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.876594376 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.855300207 seconds)
  done (took 10.655668837 seconds)
done (took 11.808548483 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.402996134 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398640416 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272418997 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40479604 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239973426 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.421238258 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377667712 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231308371 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318802601 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289650155 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318451739 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263119933 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242211422 seconds)
  done (took 18.332708886 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.529881083 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523482609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273248523 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537946318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250627423 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528481685 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407475966 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41802445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412380216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229671024 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229705132 seconds)
  done (took 16.493951621 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534070483 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517081468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277500025 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52640509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251655978 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528942539 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408238043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420957095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410946634 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230985168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229295393 seconds)
  done (took 16.489507921 seconds)
done (took 52.468651633 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.224164434 seconds)
  done (took 2.377666219 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.2587108 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.427980699 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240962759 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230366039 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22736618 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225238943 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228218489 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22501709 seconds)
  done (took 11.219627785 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223294181 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221458587 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221231783 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.225536609 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.224947493 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.222000551 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220988655 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221366261 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222519121 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.224193911 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.225265391 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225534991 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.224929435 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.222752369 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225385134 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.223388102 seconds)
  done (took 20.730954866 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22365786 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22236405 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.222926816 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.223784007 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.223337895 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.223821987 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.224712385 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.222822947 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.223129701 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.224495643 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223736119 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.223644701 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22345105 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.223471584 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.224276516 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.224676127 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22347857 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.223562262 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.229688677 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.223674225 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.224793576 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223138123 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.224833148 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.224486595 seconds)
  done (took 30.534703088 seconds)
done (took 66.016795431 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.414636619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.986666172 seconds)
  done (took 9.556642782 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.225963406 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.226266848 seconds)
  done (took 3.611393681 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.225327827 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.227104499 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.226313439 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225625502 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.225873077 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226598464 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.226116325 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226046269 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.227167662 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.226768333 seconds)
  done (took 13.420183037 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22680386 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.227218378 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.223951499 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227674677 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.226706232 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223755773 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227081807 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227387597 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.227064105 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22408834 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226646577 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224655754 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.227407284 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.225111944 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226311001 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225467202 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.225078401 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224959576 seconds)
  done (took 23.225726718 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.2268043 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227781601 seconds)
  done (took 3.611859832 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.224496985 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225277483 seconds)
    (3/7) benchmarking "month"...
    done (took 1.225032705 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225338693 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.225026343 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225359774 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.226026353 seconds)
  done (took 9.735568252 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.228417917 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408007004 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.492704222 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.827913952 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.230285534 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.232073741 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.081158254 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231674274 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234976243 seconds)
  done (took 14.125926031 seconds)
done (took 78.44349438 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.235043851 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217925929 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.158473058 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.242883539 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234256676 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520095111 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.263673875 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.350558037 seconds)
done (took 37.382883438 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.23166798 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.955225314 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.959533808 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.233628756 seconds)
  done (took 11.308069317 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.210277646 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.171527007 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.213771003 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.264305439 seconds)
  done (took 18.020180075 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.871110188 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555303501 seconds)
  done (took 4.587546164 seconds)
done (took 41.307011016 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230276463 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229995715 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229401873 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.227121455 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.227782931 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231035304 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.228423939 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22789955 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.229782026 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.232084466 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.230866446 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.23051029 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230205259 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228347012 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22820049 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230062657 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228565739 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230764202 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228347902 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22921815 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228877648 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229884982 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228489159 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.228442208 seconds)
  done (took 30.664634533 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.230096998 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229616653 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230699432 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231803739 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.229754966 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.23156543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.232456341 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229944094 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.231557297 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232032971 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22915126 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.229495223 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.23128818 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228383415 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231169222 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229702449 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.231179771 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229752316 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231446301 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229824508 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23255571 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229474269 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.22905601 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232640629 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.230476934 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229025116 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.232483521 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230283023 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232978004 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.229969855 seconds)
  done (took 38.08245976 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.238121272 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.242194585 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232297853 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.232943215 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232687205 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.233233088 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232446196 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.233300184 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233660351 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.232376691 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233196688 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232905325 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.233481097 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233925392 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.234216932 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233624496 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235279562 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.232939632 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233810859 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233675775 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.232509453 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234009643 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.23368709 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.234646115 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.234598511 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234149463 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233495061 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233504843 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233536205 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234392905 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233825158 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.235060811 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.234620725 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233691931 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.234937528 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.235666043 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23868311 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24463989 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23520167 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23538523 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.235060863 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.235151097 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234968779 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234317593 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.235102625 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.234048838 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234797867 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.235136232 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234923317 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235860119 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234332418 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235543565 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.234936366 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.234071995 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235402145 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.23500226 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235410947 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235437941 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.235800553 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.234758133 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.235047456 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235560283 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236217274 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.235731713 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.236849404 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.235676447 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235598049 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.235671202 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.236421822 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237037595 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235615129 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.236222547 seconds)
  done (took 90.077846113 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.236348296 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234153554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234428516 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233879804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234090365 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.236806807 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234716404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237193816 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235359603 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.237447909 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236778078 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.236390385 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2345733 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239206688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238030069 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23435762 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238390874 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235760536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.237394736 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238593471 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238827149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234869693 seconds)
  done (took 28.364967203 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23715117 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238060095 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234944089 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237845003 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236331626 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23796861 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.23923551 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237543789 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23804134 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235664437 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235414758 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238838901 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235209969 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235416368 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236008801 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236328644 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239007586 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236501644 seconds)
  done (took 23.434077961 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236194458 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.236573447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237979617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236143788 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236402424 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23934885 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237437385 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239732193 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.239623465 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.236727986 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238913772 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239756242 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24004292 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236182725 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239113475 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237515955 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.240220276 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238148616 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240437659 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237434049 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23712607 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238718416 seconds)
  done (took 28.409971035 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241559642 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23986956 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23715945 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23795598 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236855506 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23971915 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.240617921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.238230303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240513636 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240603778 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237560097 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239666085 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238218398 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239408251 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.237059162 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239388315 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.240202326 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238308207 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24036443 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237380719 seconds)
  done (took 25.951523711 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240209527 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241119553 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24047499 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240510962 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240627522 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241363847 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240017412 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240861965 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241015373 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240218653 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240513412 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24242657 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241323772 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241749973 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241810663 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241453577 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24209181 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241728727 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.242262832 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241800576 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243021334 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241097624 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24247747 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241834515 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241309841 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242107301 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241931238 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241338038 seconds)
  done (took 35.929570568 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241665583 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241839238 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240229784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239348387 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238271278 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.239456931 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240202236 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238723608 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241190094 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240159009 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.241903419 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.242237843 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242485844 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.24361991 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2435356 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243618363 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241686153 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.240690737 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241138076 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241578745 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.243140308 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242539352 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.244114533 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241317864 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241343454 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.244465819 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239809895 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240571806 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243104904 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.240053929 seconds)
  done (took 38.417087944 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.260802921 seconds)
    (2/2) benchmarking "in"...
    done (took 1.263163622 seconds)
  done (took 3.696774655 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.242029305 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242988455 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.244161355 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241215751 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241935 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244790119 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246150199 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242326396 seconds)
  done (took 11.119235916 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.243850782 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.244955832 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245128587 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244269887 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244933572 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245040548 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253441541 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263282041 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.246688229 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.246234786 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.253467073 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.257400263 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.250192943 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24444174 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.245309202 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248486378 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.245325196 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244579952 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.245193636 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.246281533 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245382409 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249114763 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249132015 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.243681009 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247680784 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260895088 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.253535748 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245731571 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246335639 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253480995 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245398483 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.24378076 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.247763389 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246744682 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.246415648 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246451117 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25791985 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266358625 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.256073725 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247596395 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247099857 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243848617 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248937639 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.249818547 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248135949 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245886862 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247365079 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244234897 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245197822 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250139888 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.255394826 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246542 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.244319278 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255080957 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.250186829 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25653594 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.267529375 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252094798 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25876265 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.262136582 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.263659791 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259736828 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250877106 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249117893 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259355586 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.277433226 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257390707 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264132996 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.246330036 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.247892199 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.257363776 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26369813 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263047866 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.249408312 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248988004 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249207852 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249192558 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249507205 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257753674 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272571836 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.249108647 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248921695 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259309853 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277463095 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.247960128 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249549398 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248452639 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24883914 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.250621347 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26269429 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268061828 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250335115 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249187695 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.249797192 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.253654511 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.249654125 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.248869288 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251699841 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.247996362 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252104292 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250522322 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255438969 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.261739079 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25040589 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249633267 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260063424 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.250579482 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250781735 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.261441104 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252562114 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249381242 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250963555 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260012196 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248467736 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253935494 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262594426 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.251014094 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252735676 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25158392 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251651399 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261752443 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.283658098 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.251517424 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.2520612 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.257535332 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265864816 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251779523 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.2559304 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252753238 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249906532 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.249827524 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254406281 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251470086 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.25464893 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252035084 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254864874 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248774855 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253155864 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252723593 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254377735 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.255260725 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.253614486 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.254812792 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257270601 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25219638 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.255708962 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262793882 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.253730584 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.254519355 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.254060925 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.251389599 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254207796 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255222837 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252355764 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25425748 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253909979 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.253267628 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253896517 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252920498 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253757018 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254025659 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253636864 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258369481 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252876431 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259686817 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.25248949 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250795467 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253766951 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.253669654 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254453431 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254143969 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252013326 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257045826 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263928828 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253848439 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254358129 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.259870202 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253793294 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253398594 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254578436 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257108698 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.265559329 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254138484 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264003436 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.25556336 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254937234 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255152999 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255546898 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255253924 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254087802 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258210781 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265009421 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270546061 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269391002 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256881219 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260590276 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25744042 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.260511065 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.262829007 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255547806 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256462021 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255682531 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255938523 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255556521 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259335637 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255616259 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256192774 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255391614 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.255304773 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.257121466 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256587453 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.258599786 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259138613 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255036541 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256692147 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25535019 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256677018 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253744588 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.256031463 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.256195718 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257298207 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256357148 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.267092815 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254863648 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258420179 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25866689 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256733221 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.255030194 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256951008 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260600553 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260280112 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267714194 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.278060579 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260109043 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266677679 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.277087983 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257499091 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.261065104 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257710785 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255681081 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261042104 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268696772 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257889329 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259168361 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258878041 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258073921 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257729179 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267447157 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255915921 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258825054 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259089277 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262152572 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255193272 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260479623 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260415311 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260141195 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262528998 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259072148 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260269169 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26157793 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258624718 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257962729 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259044401 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261638828 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269855248 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267154207 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260911912 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262875921 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.262385333 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.264131104 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261598092 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258721163 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.259513263 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274076816 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.271645075 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268194048 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.263605371 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259802901 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268181246 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.261612661 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265329009 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259370621 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261462099 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.262066347 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.259522999 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.257442014 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262850111 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.26069179 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263160889 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.262905894 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265802484 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262591691 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261431627 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.260916703 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260148978 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260434764 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.260509181 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.260967042 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.26636521 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26486572 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261077795 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261541491 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269371127 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281320406 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26471466 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261760225 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262450513 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261553032 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263436928 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261816848 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266214476 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271527589 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265249243 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.276446535 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.263799768 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276420803 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262791392 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266251538 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272179888 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259247929 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261601317 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262980602 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.262193298 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271708754 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281382077 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264076103 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268465571 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262107232 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262076284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.261240987 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262957051 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263247422 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262608498 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274181645 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282132682 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267687103 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26530418 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.26031615 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263273142 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262578665 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263196176 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269140119 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263029709 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264273312 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.264142039 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.266166119 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.264546604 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263022794 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262802033 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.261087396 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264631204 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272476954 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.284412284 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268728997 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264298177 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.276410101 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264622366 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27316698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283220104 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.264623648 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264527505 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26431096 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26793011 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265316356 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.267405958 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264479862 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266972907 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269865235 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264271663 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269076322 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266684924 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26490917 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265678796 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277195359 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294413518 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.268359129 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270544662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26364621 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.266964977 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.271185263 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.265970488 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264446128 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268290564 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280393622 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276684909 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267128722 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.266563199 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268930716 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266545371 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266438569 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.266526314 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26637365 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266335274 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.269067395 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265523292 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273815741 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266243964 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267936288 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268711414 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267407381 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280164774 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.267146168 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268902619 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266361781 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.266606242 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267176557 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267463421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.267345177 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269172047 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267333495 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.27022938 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276261234 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276385801 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271134365 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266666294 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267501763 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26938138 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268552728 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268177684 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267284903 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267863003 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.268970267 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268405138 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270785257 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266223385 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267818663 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.268979189 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269005582 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272476993 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.278389285 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269308085 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.266118362 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268311395 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269176569 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269378595 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.270538552 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28102089 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272479986 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282842366 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280700924 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.273694799 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269709173 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272560369 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280737413 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.268058524 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269990329 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269398603 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272020651 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.269898248 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.274339854 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26855658 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27812972 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270601044 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269900407 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282100357 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.289456891 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269797158 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271173265 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275558212 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.271010871 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267778752 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269710643 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268663586 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279508526 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292394777 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26959212 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273272385 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269859496 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273371814 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275796487 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269428204 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273749622 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.267608195 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272172084 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271372505 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269944171 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268105838 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271805687 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271369998 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274684994 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281288814 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.2684253 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273830881 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272087453 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.273132899 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272575166 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271132367 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.269695384 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26883609 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273332444 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270831558 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273044459 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276232332 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271495011 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.273276114 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273591341 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271129705 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275633357 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285881585 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282457057 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.270023403 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271391807 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273066979 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.27645132 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272357476 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272754637 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273855295 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.275966964 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.272304277 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272764514 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272837932 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27625267 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295401096 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.292155197 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273308636 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273827529 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279948113 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273379339 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270880656 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273372649 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276707332 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27725969 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.282923348 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273478228 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281953744 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292872379 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274447234 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277836381 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277967861 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285185916 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.27871784 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274263875 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.273808957 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280114835 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.296917229 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275209461 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285690462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312512333 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294079244 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.277068943 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.2749539 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27374492 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274283345 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27861385 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275295592 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274646154 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274901698 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274725737 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275992837 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282465713 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.277066222 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275374694 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275256603 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.275894352 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279272406 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272800423 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.275163166 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275628033 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275124852 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27492638 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274020095 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276641081 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291784104 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290090394 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27563081 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.275186826 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272319675 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280717337 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279225065 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291389496 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.286779893 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275447631 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276092842 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277453961 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276048149 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274181924 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276898083 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27697794 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276590562 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273150128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.292036725 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288692348 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.283566368 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.278152553 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276286814 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275828616 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279148473 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276783086 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27650767 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.279787808 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27802095 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282165964 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.275762217 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276928072 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.28148222 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287752904 seconds)
  done (took 754.712239878 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275239962 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275725112 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275441855 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274328157 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274740513 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275305679 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275661095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276237846 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276315727 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275240946 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275646892 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275742176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275369073 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276304708 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275902901 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276307494 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275505135 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27704488 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276614802 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275603737 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276396512 seconds)
  done (took 27.997463525 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279189161 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276461633 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276560911 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278879818 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275928892 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279518256 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275834686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278744058 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27905076 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277234262 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.280205065 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279493284 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277050395 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276526257 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276754367 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279117382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279096581 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276160299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27882026 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276821873 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279185945 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27626616 seconds)
  done (took 29.320648699 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27988438 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28039005 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279173891 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.277411222 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280731134 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.278647077 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279939801 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.280354857 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280803883 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.282268632 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.279106617 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.281430795 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.290228675 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.288947918 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284515958 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.280324986 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.424132392 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280501441 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.280956744 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279977389 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.278039401 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.288284373 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.277808029 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.279161328 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.280660556 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.279860546 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.280656533 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281408408 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.28178812 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.282565787 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285418524 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.281575711 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.281111757 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.283791082 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.281833459 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.282442799 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286744975 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281408045 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279113884 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282803723 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292954989 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.308551262 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280838322 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.290765368 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.283445434 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283099136 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287650372 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.293193728 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.279648228 seconds)
  done (took 64.215330389 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282139527 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.283459465 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.279091658 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282888174 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.282819108 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283087235 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283109911 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28285283 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279993963 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280093165 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281926482 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.279921149 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279717529 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282904901 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.283156765 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279613616 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279954582 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280729044 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280569085 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28045295 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279023244 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282625515 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282857321 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.279519868 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283068381 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281008239 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280283688 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281841062 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280404643 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280360237 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28348919 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283125183 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282630766 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280500894 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28123891 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.283781088 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284126657 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281138337 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283394802 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280473263 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283013598 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283076482 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283570973 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284361616 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281605897 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281678076 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281970436 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28197159 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282558307 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284081677 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284893732 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282951491 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284782504 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283545081 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285003811 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284640401 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283824227 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.284255165 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286481052 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28355014 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.282098067 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284851228 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282654988 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.285469875 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285454664 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282556644 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.282254872 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286161775 seconds)
  done (took 88.420364151 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285172182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285910429 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284775236 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286493536 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285202324 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285605356 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285390131 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.284764987 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286367534 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285772716 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285384138 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286176969 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287048554 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285699369 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284928806 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286045971 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286193457 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286114675 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285984976 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286122797 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287004272 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286061212 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287197007 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286609549 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286522114 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286368845 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286119387 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28586333 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28768936 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286040311 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286912115 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286866543 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28692343 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286440732 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.287328026 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.287254253 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285934552 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287521604 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286697468 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289279866 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286458115 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287666297 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288285075 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.28856336 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287782986 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287653749 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287638903 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288890047 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287476726 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287809664 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288475789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288126393 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287224461 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288171113 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287554964 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288766566 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287561965 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287764051 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288059181 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288174888 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288012891 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289237493 seconds)
  done (took 81.002346673 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288171485 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289358372 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.285429869 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28710659 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289131798 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286979967 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288912116 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.289861626 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289679253 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.288982433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290959367 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28777949 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287425684 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289203304 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287737591 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286889158 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287470294 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286589925 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290153373 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2870765 seconds)
  done (took 26.982104629 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287139346 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290430261 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.286616209 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286836804 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290898059 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288790878 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291189593 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290090625 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287950839 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290517413 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290368813 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290315638 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287698469 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288560182 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290719425 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288284017 seconds)
  done (took 21.844796206 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289121032 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291134645 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290549881 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290093983 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288212733 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289463461 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292288008 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.288072032 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288376442 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.291764784 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290731467 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.291423966 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291285014 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29131292 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.288673114 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.291061372 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288787803 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290092477 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292514968 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291673779 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.290216453 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.289236697 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.291212993 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292584341 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288523436 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290917886 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29050664 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.289645659 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.2890382 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291769104 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.289856913 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290169253 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.289430625 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.288729119 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.292505569 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289228079 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292217927 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292978797 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.292527992 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.292551413 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292791428 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290269205 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.293466865 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.292425863 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290179197 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292601602 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291187218 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290886708 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291010216 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.290024155 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292772862 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.292863538 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292438566 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293541877 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.293538117 seconds)
  done (took 72.221041312 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292959363 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293110547 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290867923 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293832033 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293990126 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.29128879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.293839538 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291306606 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29137811 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293271418 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291799175 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295396807 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291619572 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293889538 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292185586 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293858311 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291886741 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292744222 seconds)
  done (took 24.490168558 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.292437535 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292070808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295142452 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292104978 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293231948 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294455427 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292883439 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294671493 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293708545 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292834106 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291735559 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295259288 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295125624 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295796143 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292578667 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29295529 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295106456 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294466983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293499525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293416412 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295435495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295804451 seconds)
  done (took 29.688247221 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.295039925 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.294042373 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.312651402 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.34491069 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.332482287 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.295358392 seconds)
  done (took 9.0977492 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294251011 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296566678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294044334 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297917395 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29628225 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294154545 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294382555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29492217 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297569924 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294511208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293569997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297370363 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297182851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295581085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297408561 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297576219 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294306889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294262282 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296011253 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298901899 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295180054 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297082874 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294772878 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294683797 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295992008 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295679644 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297607691 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297275817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295812909 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297206034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299267003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295406313 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297936208 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297020847 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300097239 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298934152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296739264 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298581534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298692827 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296282543 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298101358 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299358639 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298464937 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295824391 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298904465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295518746 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296351374 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296753378 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298368841 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299571026 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299375024 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297335694 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299428651 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299899714 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300129959 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300029052 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297997109 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297712548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299603914 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296247952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297564217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300176517 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297508321 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297698668 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300130721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29751956 seconds)
  done (took 86.838187717 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297608203 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296458335 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296277046 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29811408 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297401293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297606714 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297941847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297483569 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296888578 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296713896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299819504 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297479633 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295974203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297375708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297443691 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296709056 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298024169 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298370285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29750671 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300638085 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297485574 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298067979 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297750023 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297749237 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298776974 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300655036 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298113902 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298573268 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29785444 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298253219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299930607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299672093 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29942317 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297647434 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298320949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29882931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298798176 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298710834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299849428 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301133841 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299794549 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302704174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300620042 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298337211 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299910172 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299972804 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298788776 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300006441 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298928028 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299444608 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299973133 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299292221 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300763129 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299614954 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300358497 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300196863 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299514849 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300506835 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299717434 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303786205 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300326121 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299928677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30326812 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300602586 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300508212 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300002697 seconds)
  done (took 86.963201538 seconds)
done (took 1759.103539999 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.308310073 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.29623062 seconds)
  done (took 13.834464509 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.465417971 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.417419634 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.300648291 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.313934212 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295496874 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.318566652 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.319238092 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.296546549 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301266251 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302298095 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301273206 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.488171449 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.314719744 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296062907 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30299322 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396738891 seconds)
  done (took 42.666867723 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.332597989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.309103093 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.430443338 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32482551 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.332171931 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.499111144 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361395034 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305871061 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.495937705 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.352023202 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.987925078 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327771256 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.30769482 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.580370231 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326080261 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501608502 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.575942458 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.109078781 seconds)
  done (took 30.691730595 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.803344226 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.34209095 seconds)
  done (took 9.378240688 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.309056013 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.318593609 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.331095206 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.313940004 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.325090282 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.297027042 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.358817399 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.370567771 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.314609203 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.311912393 seconds)
  done (took 64.489763548 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328358893 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308323952 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308876697 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306374675 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.299858115 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.307866467 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307557195 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.301998774 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.286522012 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.446338441 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323638831 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314240205 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.310692522 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.307623298 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305073626 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.346054825 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.455130492 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304712019 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305344521 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.313100632 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.308627727 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.433450723 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35069206 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306457893 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.445836238 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.308209818 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310856382 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315145624 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.428908801 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.305972106 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307829724 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308852974 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.31099222 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.909939834 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.873079015 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.317833308 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327685084 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317971966 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.306958093 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459318012 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309274569 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315460469 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.314447676 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.846843012 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468272527 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434146433 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.701867575 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309406616 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.310979718 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.376145786 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310525273 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.310840422 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.340019272 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.116978465 seconds)
  done (took 111.144130068 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.321508937 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.791536154 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473992321 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326340493 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979566722 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027252629 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.303083386 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.625611489 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.33820253 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302949695 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610357231 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846881038 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309905579 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.315648296 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.962129377 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.309804507 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304427598 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.143239771 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.303371732 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.303023237 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741934857 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31982396 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29792772 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.5751073 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.342655645 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800418613 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.863883747 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.815076346 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306000349 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302783906 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80676945 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308576941 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.353542957 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.297742943 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.60080451 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687422089 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65607861 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.307385368 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316837267 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305022423 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.32417998 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791862725 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669668653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.298815428 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.305359854 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789395844 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299679438 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.304598071 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.3045362 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509952257 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.231719836 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304783311 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.863632958 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300453641 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.561869224 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.324644244 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.395270264 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822240857 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300379154 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.448390483 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.311991995 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.306303207 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304502168 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309722419 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302440117 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.673375086 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.629395696 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306761349 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.675575863 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796192716 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.306086316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859945941 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.22960965 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323448033 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.34889519 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305558278 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.946236579 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.823547714 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.322030194 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300500572 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666385336 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.30162661 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.610960712 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320030896 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299163751 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75308925 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.33105155 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.318915144 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.307275541 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.320191914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.957771011 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30805517 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592857168 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.377263968 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306797485 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.305092025 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.30968118 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307446282 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301506393 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.305775073 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864892979 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.307891021 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.462631095 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329968 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308527875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306537563 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.310053582 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307979791 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533378371 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.840426113 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.308143342 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309285695 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.319489908 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.303514273 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.55946584 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.308856912 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.659920891 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.308705455 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303569853 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.32024249 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06753531 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.308002825 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314657387 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.308279295 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188154095 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.5190886 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.330116761 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.307024405 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308810931 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328401282 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.884456618 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310566276 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.3422554 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309141124 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050574677 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.350249292 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.349045062 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.904746206 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.309381575 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307595185 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317211888 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309326433 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629859492 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.608422655 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.570300643 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304072513 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.325362227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.045452461 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327919159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459002274 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.332321802 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.301605587 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512033127 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.607095894 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309144436 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.878192559 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.312049021 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52743063 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311605786 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63821397 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837333811 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.311588836 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313786493 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.047867189 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.976751764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.117102637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.311808133 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.60990432 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.326619434 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.849762167 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308730731 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311668812 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.761725467 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314169565 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310000165 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.310893617 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.311471354 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.444803933 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490410714 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.52556625 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318160637 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822665801 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334061279 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30585556 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316377572 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313179219 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.666498379 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.405485748 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.315033164 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.355739957 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.311588991 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318142459 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832108039 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.27164887 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.313577824 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46940972 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985167916 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.312822647 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312163424 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.021410227 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.583234504 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.904955125 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.326609602 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.671451873 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.320488355 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.354484468 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.978681501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318126412 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832041172 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313902407 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.313919807 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960375379 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.312678667 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.444125975 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.311482238 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.314132941 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893686878 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.313568744 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.314257025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.789453401 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308319532 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575593658 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.313289075 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.355561879 seconds)
  done (took 1108.202287298 seconds)
done (took 1381.638152819 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.315271442 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316016592 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299987147 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314922168 seconds)
  done (took 26.49437873 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.32298958 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.32072252 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.321619566 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.320559822 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322725884 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320968966 seconds)
  done (took 9.179985056 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.013157139 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31352861 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315477509 seconds)
  done (took 19.890967803 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.557148615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.646233144 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.712504904 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.642020822 seconds)
  done (took 10.809206943 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.322147666 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321611692 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.322764346 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324606797 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325306344 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325818457 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322905124 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.324233257 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.326342188 seconds)
  done (took 13.163489464 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.631572846 seconds)
done (took 86.417541391 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.823599407 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.993368561 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.416427484 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.342103628 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 5.730655947 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.317419782 seconds)
    (7/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.9812027 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.422448969 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.31655006 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.584353444 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.133913335 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.357394532 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.359639829 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.345514005 seconds)
    (15/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414940362 seconds)
    (16/309) benchmarking ("sort", Float32, false)...
    done (took 5.3608754 seconds)
    (17/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.330020262 seconds)
    (18/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.322015124 seconds)
    (19/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.299506008 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.14135584 seconds)
    (21/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.490073534 seconds)
    (22/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.317732684 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.900387882 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.763820296 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444757919 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.030095302 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.559356371 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.931222466 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.414491171 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.301603358 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.410045115 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.318864696 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.421216882 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.324543389 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.328128712 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.382747845 seconds)
    (37/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.898727757 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.303935562 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.754932286 seconds)
    (40/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.759896752 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 4.351520177 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.968394657 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.945144792 seconds)
    (44/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.725884241 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.372788205 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.443349975 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.467827781 seconds)
    (48/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303651911 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.621825347 seconds)
    (50/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.34756432 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.472511446 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.298513322 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.313841897 seconds)
    (54/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.511146077 seconds)
    (55/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.364428908 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.346569655 seconds)
    (57/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.402745904 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.401971382 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.421249329 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.320751442 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.440920314 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.704673103 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.339843168 seconds)
    (64/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.756130271 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.316429313 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.319672904 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.070847195 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.003032636 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.421760207 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.321365779 seconds)
    (71/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.359474372 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.828887982 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.378595334 seconds)
    (74/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.346509631 seconds)
    (75/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.316538801 seconds)
    (76/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.900448802 seconds)
    (77/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.819673995 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.429293857 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.442313412 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.092434054 seconds)
    (81/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.33624185 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.319685552 seconds)
    (83/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.609604031 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.64479184 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.31894422 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.313283847 seconds)
    (87/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.315260374 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.341314298 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.368380395 seconds)
    (90/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.382981031 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.62880543 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.765975517 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.420941612 seconds)
    (94/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.543737199 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.341576453 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.320308106 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.958289546 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.18350036 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.320685 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.314838112 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.316597968 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.382712372 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.964144289 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.667472569 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.975024085 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.872488115 seconds)
    (107/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426786573 seconds)
    (108/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288700973 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.266359744 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.30916948 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.376407496 seconds)
    (112/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.47553141 seconds)
    (113/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.25845861 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.078045783 seconds)
    (115/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.420782558 seconds)
    (116/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.444618027 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.975061321 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.803482472 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.551287196 seconds)
    (120/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.044692113 seconds)
    (121/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.324520171 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533470726 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347467591 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.604908547 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.344533998 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.75049885 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.75850728 seconds)
    (128/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.987349176 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.356953338 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.426464085 seconds)
    (131/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.987064633 seconds)
    (132/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.381093083 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.862982951 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.109304857 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.840699629 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.344924274 seconds)
    (137/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.623520661 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.589206081 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.943482683 seconds)
    (140/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.84093319 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.139761917 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.33401466 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.583747586 seconds)
    (144/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.74137074 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.284216117 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.638378259 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.287145515 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.42789861 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.17881586 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.949055022 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.863586946 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.848805068 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.616459984 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.183585942 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34631241 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.350153005 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.252510537 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.339520597 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.001323014 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.996659364 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.349869919 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.729120632 seconds)
    (163/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.804906293 seconds)
    (164/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.34103281 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.395564311 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.7924943 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.303286286 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.363608843 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.322325931 seconds)
    (170/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.170442026 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.641422007 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.219819708 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.56004423 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.156572307 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.171264208 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.309369529 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.325181109 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.330038375 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308137701 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.347469824 seconds)
    (181/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.345442108 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.785475285 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.703759862 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.13993761 seconds)
    (185/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.518599117 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.316868734 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.047265171 seconds)
    (188/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.087983783 seconds)
    (189/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.015656589 seconds)
    (190/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.410720682 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.32046279 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.43462475 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.438531213 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.928430369 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.40929859 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.400489245 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.522438584 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.369212854 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.325408055 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.527310749 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.418891261 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.910590842 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.364703683 seconds)
    (204/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.450133181 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.35133096 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.219073014 seconds)
    (207/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.323999981 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.854135274 seconds)
    (209/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.739233948 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.327652439 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.218363409 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.346925678 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.650643669 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.623432441 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.43029622 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.384953868 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.35132675 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.986111833 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.269593741 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.925317477 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.376407039 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.995532413 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.856011789 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.377056252 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.871092281 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.53193973 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338775433 seconds)
    (228/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.327809687 seconds)
    (229/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.409064619 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.34557343 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351574897 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.782539085 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.859555916 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.368368735 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.413042567 seconds)
    (236/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.529428516 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.517993167 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.337877077 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.325619683 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.380813863 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.331448397 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.324981948 seconds)
    (243/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.362772697 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.386519983 seconds)
    (245/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.166360045 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.332319137 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.77183189 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.374557102 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.118984759 seconds)
    (250/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.284723725 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.726404509 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.331928289 seconds)
    (253/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.875870048 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.402003299 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.343050409 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.814565805 seconds)
    (257/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.15444795 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.566324984 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.857674516 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.660434436 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353477975 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.883586416 seconds)
    (263/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.196737119 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351714715 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.157867946 seconds)
    (266/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.321784903 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 6.355021425 seconds)
    (268/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.364245251 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.78510444 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.730794085 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.43613011 seconds)
    (272/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.740544727 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.374889393 seconds)
    (274/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.908683397 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.213004467 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.864867616 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.316383076 seconds)
    (278/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.352242843 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.432578565 seconds)
    (280/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.700639768 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.31431918 seconds)
    (282/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.500000168 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.355679337 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.669674964 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.413681434 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.380087346 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.280681986 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.408544255 seconds)
    (289/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.382327459 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.466649266 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.492234754 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.12390317 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.637133897 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.001843274 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.386623679 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.012574281 seconds)
    (297/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.527603822 seconds)
    (298/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.669456005 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.219895523 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.350994573 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.788203885 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.367778954 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.847971258 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.371260087 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.416623338 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.331688213 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.32665746 seconds)
    (308/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.156542722 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.459265965 seconds)
  done (took 940.425510307 seconds)
done (took 941.676127072 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.363849566 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358777511 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.341931495 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.36285803 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.454730208 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.371895099 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.353222122 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.34345144 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.39098974 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.393110313 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.342546376 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.372269717 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343698389 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34260808 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.341822929 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35775694 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.510272771 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342848251 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359170926 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.353392089 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.359418947 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341870288 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393050036 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.374086318 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347412468 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.347117724 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.346240202 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.363897594 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.455984692 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.347831748 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.346515616 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356779894 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.512275197 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34377995 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339426642 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.364153438 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356521579 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.354122607 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.349027294 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376312115 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.90157769 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.339383977 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.346653411 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.345714943 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344587545 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.349100666 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346994758 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.352984807 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358375178 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359895811 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.999197234 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.360779747 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.348613232 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.345695567 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.356870245 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.345632119 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.349273882 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361591322 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.365685894 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360317132 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.509266748 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.350683768 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.34839168 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.363330754 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354054357 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.911093002 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.336452592 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.352043581 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.88698725 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.346696777 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.913452906 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.350112056 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.347552763 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.360354222 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.377842108 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.51828935 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.343037432 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346774647 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.355949674 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.345037112 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.35646863 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360689555 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35206275 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.348270687 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361115209 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.377799142 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.356599282 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348834456 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.358080222 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.366501748 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.355208769 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.358819005 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35111021 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344159001 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35866919 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.350948626 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350421608 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349926991 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.352252695 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358943221 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.887877541 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360377865 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.345694969 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.345210926 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.348485321 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362404404 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.880533898 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.343640357 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370609298 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.396817767 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.350249304 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.513346453 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.352503747 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364839683 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.358521361 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.351674197 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.345407899 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.514279755 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.885432049 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.359479601 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.352531662 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.347760744 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365843869 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.351753036 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345566294 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.525310571 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.351440713 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363803429 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.470121795 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.360178262 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381627566 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.34795284 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.353273873 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.377118339 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365692242 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381350803 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353681725 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366420843 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366433608 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347652821 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.360556636 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.360975597 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.352104192 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.3565542 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345056207 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.3770909 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363120673 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362407654 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.372198847 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.471526211 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347630739 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.516994581 seconds)
done (took 229.521254169 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409652848 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.340812571 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.429682321 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.34707502 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.448996862 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.443442362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344525491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.345138348 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.34537123 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.723941073 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.344581996 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.344669864 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.341983367 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345454043 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429583533 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.346925422 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.344997177 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.687944417 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.347350336 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.41807782 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.345721863 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.34618401 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.347695331 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.72829334 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.344508814 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.340857133 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.417859642 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347039757 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.692233861 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.345984975 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.342822914 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.693313098 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.439171864 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.367052349 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.358440415 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355423131 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450605553 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.365335637 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.428753427 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429665533 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.43263635 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386415048 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.349065271 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.350149556 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349023113 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.349009212 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347428059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.376508631 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.342713368 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34670416 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.689166929 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.359862655 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.356918783 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347552867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347615259 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.369144055 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.348252238 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.349774015 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.441209976 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.350668465 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412170494 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.730169864 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.726377494 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.350004237 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.346326179 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.348299469 seconds)
  done (took 149.393634519 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417575563 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.421971879 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471773721 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.34812742 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.402219257 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.47895613 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.349288668 seconds)
  done (took 11.165418037 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35682101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351702067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.400944719 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400425962 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351929732 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.499854271 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352237051 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363303444 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.350065551 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.404917233 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.35190789 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352624221 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359485834 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.345547771 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399507339 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363018973 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4675283 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354361696 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.353533297 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502994914 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349308591 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359541601 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.404400002 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362509181 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.352183524 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358432198 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923409116 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352224801 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349039079 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352634234 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350567225 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.391034927 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354154519 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.349099839 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351395377 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47125907 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.353225083 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35049973 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353388327 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.349159823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353739407 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354489038 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.35387502 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350195333 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35292686 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.376993807 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353938761 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353873151 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.353763987 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353894818 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.404098217 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354290703 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352167572 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351691414 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.40973929 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361453027 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354659445 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.351162076 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354606947 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352385861 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505743849 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401951025 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354126247 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402750721 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354968713 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355117223 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354690508 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354933404 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409037528 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353781562 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403145579 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352550919 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.510994956 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.378168976 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35638394 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357199865 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.356783187 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354129142 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.349671012 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.360881268 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352612417 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.3570863 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.361391716 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353025945 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352758613 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459113228 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464312373 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353429785 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.367518493 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363102201 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.353065021 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.409401896 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356488476 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353760448 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407994566 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470692884 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.4088647 seconds)
  done (took 155.175322309 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360743123 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.363208343 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357282008 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.373446037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.357391578 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.356507412 seconds)
  done (took 9.449365551 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359306073 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359146477 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356562949 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358601499 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355582778 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356710069 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357778532 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358059753 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361922597 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357976174 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358148108 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.361585813 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359047093 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.357384383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.357193831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357322533 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357316486 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355776591 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358276854 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357971575 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.460570889 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357825764 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35735746 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.360568111 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.363455657 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357557446 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366533337 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358089174 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357571088 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.366699009 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.3611444 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359414655 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.360118289 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.36626309 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363747629 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.360298468 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364681578 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36288759 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356897804 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.360262686 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363326815 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35988726 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359358364 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362360031 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360813955 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.365008004 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368674828 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367679035 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358796829 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.362715528 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363023782 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.360602136 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359928928 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363963068 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364629981 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364623632 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368882143 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360565638 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.35988465 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360580257 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362790678 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360901014 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363090219 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364875211 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.357866938 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.36397311 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360966226 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365915415 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360750398 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360154041 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.364564575 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358722467 seconds)
  done (took 100.367658195 seconds)
done (took 426.82360662 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.414175746 seconds)
  done (took 7.697869809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.52988492 seconds)
  done (took 7.817518721 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.305542796 seconds)
  done (took 24.59860741 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.416980668 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.454493104 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.355368086 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.349122494 seconds)
  done (took 26.8640608 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.469560818 seconds)
  done (took 7.756051523 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.353772377 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.362672439 seconds)
  done (took 14.004335025 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.57346192 seconds)
  done (took 7.859784501 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.851254112 seconds)
  done (took 8.142432028 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.374432288 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.385213005 seconds)
  done (took 14.316730922 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.33965889 seconds)
  done (took 7.62789526 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.083451858 seconds)
  done (took 9.374757636 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.366924521 seconds)
  done (took 7.65777711 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.423273759 seconds)
  done (took 7.711176543 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.186099819 seconds)
  done (took 10.474238895 seconds)
done (took 163.18943158 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.356258388 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.357503088 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.35817924 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.356582507 seconds)
  done (took 26.715827 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.396452512 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.397905788 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.398403276 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.408629218 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.400635082 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.397067523 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388883974 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.390494412 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408779962 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.4057902 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401937206 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399776504 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.397697219 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390710517 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399805657 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399644305 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409591339 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.398806052 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389861238 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40081608 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.366302545 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.409847935 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40185173 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.366690873 seconds)
  done (took 34.818223395 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.564379915 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436584992 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.518471645 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416561291 seconds)
  done (took 7.226314717 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417416219 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.4196051 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.430505056 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.469674111 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.496457304 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4292389 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.395090508 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.387641199 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373626148 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.419659463 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494808033 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434688755 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.502829703 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.366564959 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.552630226 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.366895481 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.36680834 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418947397 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470103995 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484755999 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367063689 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418202167 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.421693142 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.435274863 seconds)
  done (took 35.630543137 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.364365023 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.373282342 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.371350947 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.365931469 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.365592567 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.366307862 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.371792341 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.367805168 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.387156428 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.367944932 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.365352206 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.366619336 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.364409375 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.366313519 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.365053147 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.377549666 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.378902062 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.36676426 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370332122 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.373154092 seconds)
  done (took 28.687724513 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.360111296 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.273186869 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.712484707 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.619187465 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360618775 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.360789701 seconds)
  done (took 28.978384727 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.443736879 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.59495123 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368115692 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.771638904 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.870176677 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.367205186 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36921588 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.641085068 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.995453745 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.992184686 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.431296981 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444610332 seconds)
  done (took 20.585067828 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.364618913 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362201507 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.373135918 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.376348757 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432703115 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.372714374 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374178739 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.361497218 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43328534 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.435673333 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.373253778 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.434074949 seconds)
  done (took 37.990243556 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451591676 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417440928 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.480647951 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208780871 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.777698721 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570291434 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.267874783 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.831705002 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.368177147 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636256416 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366421411 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453400478 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61999624 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363041885 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364406445 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.497944092 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592010975 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921009188 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360281898 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.737251586 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390024676 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365468737 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928575585 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393868876 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57589729 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501677239 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624802113 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3642578 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678663347 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376544494 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375827066 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364279141 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637917718 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10583855 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458507383 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374715747 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245918009 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.078242677 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.352486487 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.836337046 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375662967 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366998924 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375612941 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365292382 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300573128 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364223044 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836665353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.371429954 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.076330225 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365508271 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375943846 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460721022 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.36986589 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.183544111 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565369917 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360633163 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.361460884 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372832386 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935477107 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36891569 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375689565 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.30177624 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.536309526 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822250452 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033624871 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.462910977 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.369777158 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370900765 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310795719 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.826821723 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384812064 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511818475 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.381890023 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059928363 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15956857 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376520648 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.309851233 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977884457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363757646 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.317816727 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594209218 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36706715 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30663557 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.314979768 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302733648 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190997673 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376135766 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.92825663 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375117956 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.83680559 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.379909355 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388430306 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391729558 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591885457 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.25425338 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367398314 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.375253008 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491903012 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384719421 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.83988693 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313188814 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366192583 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624842616 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579547911 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374839335 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.513152429 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59586892 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385445873 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.384010479 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379304504 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.378182518 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.999626546 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376579154 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412726607 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38730851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369940179 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230685361 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371181531 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.470372007 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369739672 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649656646 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.272176722 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372143756 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452703991 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37231536 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370427537 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.837628179 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890222911 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370926504 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.372184919 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371017634 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380294059 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.370274551 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368963509 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.363825464 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38030818 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.373267211 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59733579 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387960276 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647211862 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305382828 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515188332 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.462738211 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.588954905 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.665884011 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.364505931 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633310095 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372933784 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37111074 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383471453 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391073607 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470039693 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394025572 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.371224573 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629898534 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.376588714 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.37597116 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344640619 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374226581 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379802684 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.377134266 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321504708 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017217541 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359694847 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372340056 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267897791 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.386746784 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438021446 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378910282 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.38319803 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.453436483 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.346783212 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.377325467 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.385438713 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598038343 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385036769 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.762982674 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451222844 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.593327786 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023975384 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386243919 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.308017822 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083205524 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.066041543 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37383187 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308701952 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373713897 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381490154 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384172589 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.699646886 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.026159649 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376049396 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.766623669 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.381465477 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38516247 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.379412674 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373894751 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.448448083 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406588718 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377671474 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.386941923 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517418362 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.386483873 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308179742 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.374979799 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379849756 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374458776 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374771891 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407211143 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.78582591 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899082373 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629836171 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.226211412 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387240653 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.908451848 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.407047926 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375144761 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374454592 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392543042 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.390245206 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378953287 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385725266 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.864582152 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08655214 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938288147 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196419512 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9619239 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47350876 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.384096988 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376855512 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851791461 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312357454 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93502219 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593024829 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850837751 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3716021 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59376026 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.74130688 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250847751 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386180107 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605163404 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47079538 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.377468086 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38734796 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587520402 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410531579 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.377778427 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317214995 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.656910415 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626715558 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373018118 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456165856 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846023643 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387984193 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378771305 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.375881569 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.88720618 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5735573 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.096887637 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.588802755 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381920145 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377462185 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893696036 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379926092 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.607496127 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062749522 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385546987 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.601034686 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319280194 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.389362285 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.388543601 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.378758678 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.96455448 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.374322536 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.628161864 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386624567 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312806151 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383351192 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970141202 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.230269157 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383916912 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378530119 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24966273 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380031228 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697830377 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.385547537 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.444005872 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38453103 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312855615 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31191448 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.070406445 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385464875 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363936181 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941676039 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.494729886 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564372559 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402503805 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226501139 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636085308 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.392344573 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031953445 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606807658 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.330027282 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402786814 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.478914053 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387437066 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.365366106 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380835939 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614104809 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322608559 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600967365 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.593597648 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.284215961 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378605115 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592559171 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379082504 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388301051 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662190766 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.091591983 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.395109724 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200196046 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402015145 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379494009 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.331941327 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544812817 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387755007 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460811923 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392328077 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.392576649 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.392581902 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577140979 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388361895 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382876258 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.393879525 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474569697 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.47345982 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.45510285 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.386413022 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041980285 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19925308 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046703357 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390971925 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382085332 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38160684 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326739346 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52661982 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.612270254 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655393752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509486023 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.594748886 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40416133 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382072472 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383902659 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611765123 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655367082 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281271143 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379408924 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396553501 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.381324453 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392529721 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.594324842 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954499689 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998083151 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49616934 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397112309 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.855339651 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657394503 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383309697 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382549878 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979391319 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.402178317 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.903788202 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.387479786 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389782597 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531956902 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393614716 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131116977 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.393360625 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.541617343 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.156576164 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896983927 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640869762 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.931074457 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391184413 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047793765 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181940047 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650301834 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451319878 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395794981 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.496055101 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531067992 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.382255578 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384143001 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38464804 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234408702 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.093803317 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.393456143 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052023319 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652865534 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.382232626 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.388551572 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40828192 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394853318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6108675 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226795217 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611778687 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39704481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392316107 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202784666 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049336068 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398491629 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328209242 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.384113094 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662875561 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622537937 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407686171 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.836677716 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.096969214 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00714603 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.356294534 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406887566 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388736845 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.188559199 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034992017 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.464957423 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962670513 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.9477009 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4025173 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659812341 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390797507 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400205803 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663405612 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.391931567 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390202263 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398256139 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.048556319 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252127519 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.385934209 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.857667015 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.322652511 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.731989815 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100006873 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336968172 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392909371 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.597253507 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389881376 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514967299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394222197 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.401141612 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38654263 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.142458939 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701356616 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.389271027 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.383588196 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.36802418 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39143403 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409113015 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644656738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392827104 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.065678133 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741215496 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645538868 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387137314 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.374145625 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.393639925 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38878187 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.423520588 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.625695786 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.710752851 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003696035 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.386822651 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400286174 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392431139 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.606162115 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600565817 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405793127 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40112451 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398853014 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404180969 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.293136022 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.926829308 seconds)
  done (took 1631.675589076 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395023823 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.406647001 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.399167359 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.428395221 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388783502 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415193877 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.423866822 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.419115889 seconds)
  done (took 52.595871386 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.398753309 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.604585627 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.419422282 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.398643419 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.403299333 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.401990776 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.878011302 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.389736168 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.395257066 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.400131488 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.398728963 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.391209846 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.081052395 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.395493098 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.405084166 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.370369985 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.394560816 seconds)
  done (took 66.450735759 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.407443652 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.919344796 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.404081636 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.387459913 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.015177481 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.404211926 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.849213704 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.437738934 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.423199925 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.400224058 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.043331483 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.398539708 seconds)
  done (took 81.414184183 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.396088894 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.394899078 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.39585696 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.396365445 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.395791728 seconds)
  done (took 8.301568119 seconds)
done (took 2062.360691824 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.642776363 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.202573834 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.124011451 seconds)
  done (took 5.650065342 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.536942642 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.586592827 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.711766488 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.726774971 seconds)
  done (took 7.884344125 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.667062955 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.785020057 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58061233 seconds)
  done (took 6.3579663 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.984891717 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.391065562 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.481063391 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.39132498 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.388441181 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.390196295 seconds)
  done (took 20.495378115 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.3945005 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.396088299 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.394560681 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.397697419 seconds)
  done (took 6.907620772 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.374810036 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.147661986 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.372636484 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.390317707 seconds)
  done (took 18.609640154 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.139497018 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.153859458 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.137530316 seconds)
  done (took 7.755678987 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.389243258 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.231270057 seconds)
  done (took 9.943826613 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.731113565 seconds)
  done (took 3.054806313 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.526175533 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.659018795 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.568210893 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.513875161 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.620262338 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.716045942 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.24412422 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.767292877 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.489275803 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.854574636 seconds)
  done (took 30.286711125 seconds)
done (took 130.768849608 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.584346984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403907718 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.591468645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.555033078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.617178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.592022859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.669046942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.521278825 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.072989703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.047037053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.555508885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.617747545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.622833079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.406728044 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.621599152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409928209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.619971025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.632288271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.240606697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.404767606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.666178144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.188870194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.38236916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.210234824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.660442534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.541570088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.76766112 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410147412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.390650327 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.792431622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.542987198 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.401436336 seconds)
  done (took 197.066270792 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39448419 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.388624112 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.406338446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.421243809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.39889946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.39095133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.409459115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.409773678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.390221388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.389508664 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.390327007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.389350926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.389392875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404111761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.389877509 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.389709038 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.405511227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.406909391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.389672537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.397581612 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.390111385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420895742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.389266776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.410237932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.398778417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.389224556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390852435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.393181762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.390605898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.395492885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.389902341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.391946296 seconds)
  done (took 206.029207785 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.394250508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.390698106 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391541168 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.412450984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.391142649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40461204 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.391723437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.407671089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.407177732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.407916915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.390185094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.418774578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.391432636 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.398837487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394191602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.391883173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.391273824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.391706668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.391930093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.393516275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.3925195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.408691821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.392207177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.391573981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390643617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.392729614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.391778804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.409422076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.391179684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.391717063 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.393632439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.392586991 seconds)
  done (took 206.020047277 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593006029 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402348534 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403231277 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.33604999 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404762034 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.403946949 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.401467197 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.600641945 seconds)
  done (took 14.875366258 seconds)
done (took 625.315600985 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.835211852 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.541088522 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.606671015 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421044233 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.240242289 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.421726057 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42334169 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.607900186 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.36029799 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.611690854 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.763633504 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.418908534 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.91219811 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420059215 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.694863096 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525803556 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.347165929 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.466573696 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.759934684 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.003327809 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.689105411 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.985861431 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.603804093 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.361259771 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.912284077 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.986867567 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.231727403 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.347797409 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.419981976 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.764475981 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.25233649 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.507974943 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491016285 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.470932254 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.527621631 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.51397482 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.472166895 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.468976256 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.614504488 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.74158152 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.03614295 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.178682532 seconds)
  done (took 96.292014607 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.39324941 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.393527749 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.391775354 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.393194736 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.393868614 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.392817638 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.39246993 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.392745612 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.392933894 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.392039668 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.39269408 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.394162516 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.392690618 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.395050346 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.392392307 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.392419156 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.394216706 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.394760145 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.394218938 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.392360368 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.393442883 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.393478546 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.394547829 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.393792124 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.394092329 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.395265871 seconds)
  done (took 37.56126624 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.407787934 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.655337515 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.847134982 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.411265291 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.407761533 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411381129 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.498565655 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.404752491 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409521887 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.41115318 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.570250596 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408801373 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446833254 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.853197442 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.406077248 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409754933 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.407968752 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.406414141 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661556689 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414872981 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.498125133 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407330725 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.495770913 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.414682408 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.412611583 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408122596 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41345682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.911102678 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.408037069 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.570353943 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.287568825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.492742248 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.864954547 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.857432692 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.29094348 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.411679946 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.410442094 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.574893413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.407931299 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409135925 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.496079783 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.407293948 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.860278694 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.055568772 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.424366162 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.408387469 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.936912961 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.57112492 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.685060548 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.415569259 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896018418 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.411836224 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412271757 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.412585351 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.690118774 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.414136225 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.411756234 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.972530834 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.413719612 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.496787768 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.410319409 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412756856 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.670545296 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.409670682 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.660022027 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.410843366 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.419715569 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.413641023 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.86360815 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.412754899 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.073358939 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.427838874 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.413143156 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.574037796 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.658050519 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968113694 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.413849056 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.676202025 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.880905686 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.495645404 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.413309737 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.904709105 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.49787859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.414795742 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416341929 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.417547723 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.413992842 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.457749913 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.498848891 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.995467117 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.068201729 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.991543597 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.500629243 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.423262953 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416730042 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.975840935 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.429711071 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415042571 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.860868466 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075576553 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.428240751 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.424262958 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.061516961 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.432261881 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.501473553 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.416620862 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.871141014 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.411528462 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460330377 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.414345276 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421140392 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.418727663 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.502402719 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.41531985 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.414143588 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.052187457 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.597431631 seconds)
  done (took 185.424796672 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.421446694 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.405123799 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.415593739 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.404433556 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.408394895 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.415759164 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.409590053 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.411145011 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415445982 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.408986579 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.41022175 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.409648472 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.410055132 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.415246473 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.417726448 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.417012501 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.022544223 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.410807054 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.407722005 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.407195438 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.235966527 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.411759641 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.408448312 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.407662718 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.41155448 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.409931151 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.414541861 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.410357017 seconds)
  done (took 154.295804838 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.41906922 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065362579 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.415680471 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.570580897 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.439326584 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415658585 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.569902512 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.481475303 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416432561 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.414056351 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.415635517 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.757693449 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.416675465 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.99266884 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.629282496 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.571408182 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.992457965 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.415025608 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.413454937 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.414067821 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.572443967 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.426101051 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.753964715 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.045919011 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.414297501 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.048059002 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.402942339 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.418333405 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418000168 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.052300348 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.414634963 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.760021236 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.504412171 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.484166636 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.050404446 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.997034534 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.995758956 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.578075702 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.414966352 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.416732407 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.415317007 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.407455142 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055790761 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.41850151 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.418112834 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.047832219 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.433789178 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.420765957 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428708978 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.415957789 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.484917454 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.486897957 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.762972027 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.061223509 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.502191662 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.437281901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.564367687 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.783590056 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.418632721 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.999514961 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.404316113 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.06649637 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.420574743 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408506345 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420114882 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.425392142 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.587248565 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.563808709 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.994080472 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.41672676 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.997810786 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.584299695 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.417564899 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420678135 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.42485518 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.061116637 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.994827803 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.584256045 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.56555964 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.638621373 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.409315942 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.420874994 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.409631679 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.504383857 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.416418172 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.06058435 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.997968993 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.41864073 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.420992238 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.421230144 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.422039571 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.618581403 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.111669381 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.508650475 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.990170536 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.805409274 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.794726586 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.422972798 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.491347176 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.422323785 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.793263103 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.424815981 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.48861196 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.84739537 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.793491431 seconds)
  done (took 170.519842675 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.686298913 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.794187208 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522060329 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.541010793 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.998944568 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.016825132 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.74499373 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.555637125 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.540190638 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.680630743 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.770030226 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.515489639 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.623202829 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.509268984 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.131487554 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.49844595 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.524087908 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.558233103 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.541749734 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.584820477 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.124347346 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.725911294 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.605521107 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.776544211 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.52083271 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.259790424 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.996037898 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.94326056 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.6004577 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.87319511 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.957917462 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.635833658 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.457859181 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.147502088 seconds)
  done (took 69.314924905 seconds)
done (took 714.738647544 seconds)
SAVING RESULT...
DONE!
