cset: moving following pidspec: 17912
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.359183385 seconds)
loading group "string"... done (took 0.558537689 seconds)
loading group "linalg"... done (took 7.19208047 seconds)
loading group "parallel"... done (took 0.160504082 seconds)
loading group "find"... done (took 1.117864513 seconds)
loading group "tuple"... done (took 1.780490653 seconds)
loading group "dates"... done (took 1.275606868 seconds)
loading group "micro"... done (took 0.227185889 seconds)
loading group "io"... done (took 0.929223154 seconds)
loading group "scalar"... done (took 37.027300431 seconds)
loading group "sparse"... done (took 11.144433903 seconds)
loading group "broadcast"... done (took 0.917652545 seconds)
loading group "union"... done (took 11.887937769 seconds)
loading group "simd"... done (took 4.156259875 seconds)
loading group "random"... done (took 8.565116889 seconds)
loading group "problem"... done (took 1.865905307 seconds)
loading group "array"... done (took 19.863806243 seconds)
loading group "misc"... done (took 1.668673746 seconds)
loading group "sort"... done (took 3.096221145 seconds)
loading group "collection"... done (took 16.718687961 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.489440914 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123403309 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115369698 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118907647 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.13464879 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115176067 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124014822 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083714418 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.80431144 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146179751 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119347051 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418120456 seconds)
done (took 5.117115524 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174347684 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084107069 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081708276 seconds)
  done (took 1.305832796 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065677385 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12181622 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066215863 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067117889 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067686773 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066467914 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066167104 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066187071 seconds)
  done (took 1.662058552 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073743293 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069067235 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069684905 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06855873 seconds)
  done (took 1.421329187 seconds)
done (took 5.778766043 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.766759734 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206225131 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183617499 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401212278 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129196786 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15520917 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642007089 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.307612443 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184232807 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0825057 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104951998 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.320671342 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107417769 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636769277 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077385416 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090630132 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136346194 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420771027 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067776989 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082473552 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089409865 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128625516 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085902921 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074933016 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143705798 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067906258 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13094125 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080660654 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06704517 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208972296 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172515395 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651417857 seconds)
  done (took 10.182761522 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097390021 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098219342 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068829232 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137197511 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096553648 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069870625 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07122296 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067656804 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087317046 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128984523 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089701045 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102320909 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065655559 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06930857 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084769493 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2050637 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082722744 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083737573 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072371449 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0756468 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117027628 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078293858 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078496565 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07810796 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129238376 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180281885 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098896276 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097499379 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067545355 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081148469 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114919311 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126406775 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065931847 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066499313 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125421357 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094370413 seconds)
  done (took 4.630398549 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.934494669 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140543585 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091377887 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131377719 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065154817 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107443856 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065449316 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081399055 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204444075 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.300840623 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.579808755 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084566079 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110746715 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090966465 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100773784 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067931297 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068367277 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06701531 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.353333278 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107609669 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102703474 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081108642 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069262761 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06892711 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342846528 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068064426 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063642355 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068226816 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0578778 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122817385 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067953469 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.929423359 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126588825 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067636519 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102126921 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163142767 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.218669955 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144263089 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069344689 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064579348 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151302339 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071466759 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069132892 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084349797 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104314145 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113860486 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066181278 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066803599 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161745576 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065456766 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078833144 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.984301613 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155052763 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07682145 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064459974 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249471378 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085682107 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069546556 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065349721 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184450723 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135858391 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067575327 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066694037 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068047247 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069964334 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363452839 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066313626 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.724187403 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071415744 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078618997 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069702088 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069510908 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073141112 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073008438 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085919771 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066225576 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075266374 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066278937 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065963373 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066787082 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084465613 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360209972 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06707215 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068340135 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065091739 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086655158 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09722952 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067578609 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066140982 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100598122 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068283502 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066445555 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.172038969 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10698574 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067187701 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085066181 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069466837 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11384593 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070099851 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.112825784 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065455587 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096413876 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070139693 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099100839 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081954308 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06834033 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398706199 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065442867 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065494719 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068723432 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065750795 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067656541 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066782953 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064874203 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079107541 seconds)
  done (took 20.944163304 seconds)
done (took 37.829322037 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.278141635 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076908237 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076219836 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075932495 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075801899 seconds)
  done (took 1.816654578 seconds)
done (took 3.027672205 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120235656 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09902168 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064964288 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096085743 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06501527 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100588615 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09915631 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080929361 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099365617 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06483145 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096297267 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064642093 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064617075 seconds)
  done (took 2.34909087 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082504024 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083726396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070156337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082800577 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06405881 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082621804 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08077136 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089027947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080616776 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072179324 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063916534 seconds)
  done (took 2.06102095 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083531412 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083565941 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069758543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081408172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063520543 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08135269 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081017473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085648034 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081676976 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073349711 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064075794 seconds)
  done (took 2.051621774 seconds)
done (took 7.66434281 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078866396 seconds)
  done (took 1.270461073 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.600006774 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.106416696 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082050594 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11298893 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190116664 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124546467 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.288958372 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.0907889 seconds)
  done (took 8.972438106 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089590721 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07194673 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084165044 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074376878 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0740034 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073961501 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075088035 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073529718 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070409783 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074002108 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071410515 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070508434 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070747555 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070305638 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073008981 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071973477 seconds)
  done (took 2.454959847 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092916017 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091020564 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073703544 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075124616 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07231202 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072233781 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075339152 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074189559 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071204676 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072363258 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07532768 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074027892 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071952505 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065460316 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074378791 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075848985 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071357077 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074916201 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075574428 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075265111 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075149535 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065564137 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071657188 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074347031 seconds)
  done (took 3.094303824 seconds)
done (took 16.993868467 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112939396 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072082504 seconds)
  done (took 1.38752375 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081303599 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082736287 seconds)
  done (took 1.375359077 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082556931 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06566828 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091713743 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078994848 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067087843 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066359323 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088507165 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066810232 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066207547 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066473499 seconds)
  done (took 1.951784337 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068689431 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077978351 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070927738 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082153544 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07473423 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064419158 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073375262 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068133282 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078206601 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063360475 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071369144 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082869523 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071748142 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084735614 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073397442 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070076 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072958969 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069497676 seconds)
  done (took 2.530354993 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06671659 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06751048 seconds)
  done (took 1.349963541 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067484351 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064263169 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069233428 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068690041 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065558477 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064488288 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065447531 seconds)
  done (took 1.676144788 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397343246 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113392723 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30369989 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072575274 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084266183 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256425576 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067204363 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072725868 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072647114 seconds)
  done (took 2.69866642 seconds)
done (took 14.185456374 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078856805 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085608351 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097705308 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.370050384 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092317758 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066103449 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113915174 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196222723 seconds)
done (took 2.327846258 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213167873 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617355921 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384015597 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.201961789 seconds)
  done (took 2.423137385 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325486041 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088411833 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060521774 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068747077 seconds)
  done (took 1.770188156 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067039449 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068396357 seconds)
  done (took 1.361490999 seconds)
done (took 6.993861751 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067766827 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065993654 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065525989 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084509536 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068155973 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068434706 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065607776 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066987731 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067815911 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065159224 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070699477 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067796224 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067517149 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067716897 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065393115 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065625663 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06788751 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065683627 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065324807 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065309127 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071447214 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065119156 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065496692 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067484601 seconds)
  done (took 2.888029898 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084104741 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068038215 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074341761 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073561257 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072601837 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073768448 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07349465 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06855385 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073445376 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071187876 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072470816 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072365759 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070048855 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072562016 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070315943 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072498774 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073601146 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068399795 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070080028 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072606893 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073769419 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068484757 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071999267 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073169431 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072153486 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072010916 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070653294 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068967662 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073620192 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072132264 seconds)
  done (took 3.401054892 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070303857 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063605724 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065467432 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071926337 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064761867 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067371578 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066056103 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066267597 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066060827 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06506147 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066960164 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065311505 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065591251 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066584055 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066517897 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069445815 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081241033 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066090711 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06583538 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066087806 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069032935 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065462806 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065726581 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06536306 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065002 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065608214 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066418721 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065412138 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066217068 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065273131 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068449074 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069029846 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065872108 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072337642 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067819354 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063722748 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068641087 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063860494 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065894543 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065676224 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06501187 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065771043 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065927618 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.187150304 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064239557 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065247572 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064123338 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064925867 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064370915 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066556323 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06308275 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063921053 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066040889 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066087833 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069508586 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064634362 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066145805 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064892065 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06645161 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065044781 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064880544 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064836219 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067356201 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065879926 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079602446 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072084455 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06536582 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067324564 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066372504 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067909413 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066813096 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078344278 seconds)
  done (took 6.170301913 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091980993 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087946293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065599007 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065419752 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062605547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064852112 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067931586 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064283761 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065691786 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070095522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064364182 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065592434 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065371942 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077101678 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064624342 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066018174 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070385597 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062297565 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064362149 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067537192 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064530925 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068255969 seconds)
  done (took 2.755699985 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156047625 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07144188 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105568096 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073878072 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068085694 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073419415 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070154477 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070633391 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071537162 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070614957 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07050833 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072237387 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070210526 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070180886 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070317813 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070724984 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072287427 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071121512 seconds)
  done (took 2.639362004 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077290996 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066600612 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087772337 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06694381 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067067938 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069235265 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071878303 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074936399 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06872785 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066520866 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074902011 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070176435 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07114185 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068037168 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070369478 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067278217 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070033248 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068042457 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076719206 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073102898 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073265846 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076738186 seconds)
  done (took 2.818155326 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079754044 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068561807 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083761034 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069233852 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064096216 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065861768 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072608021 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068068059 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072403901 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069636522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067896953 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066438348 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07172968 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067855282 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07161005 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068076537 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069633307 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067846068 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069284812 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063606721 seconds)
  done (took 2.640827531 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087215567 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069460799 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069731915 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076957151 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068443697 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06803074 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076571801 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067856078 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067888085 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087975288 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06783194 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069039251 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076709079 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074039039 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069036259 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07734529 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077545275 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077966613 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069345022 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069424581 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089941039 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069533772 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077619091 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069511647 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068976913 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069324205 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069281004 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074965 seconds)
  done (took 3.302402998 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066839163 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066012056 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063547698 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06383396 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063941094 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063472117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063593152 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063656908 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065987263 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063675899 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065885102 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066422254 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066025954 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066111333 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066616136 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065982963 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066150933 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064625737 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06379015 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064224552 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066486897 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067349543 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068129817 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064627307 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063803144 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067054607 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065497901 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065144222 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066718815 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06502112 seconds)
  done (took 3.207453529 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075681298 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073987985 seconds)
  done (took 1.397855272 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06341228 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081142834 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06345668 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069592082 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071706258 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066967861 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074032472 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070268107 seconds)
  done (took 1.80341331 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083566917 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077909083 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068929077 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081259583 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077416811 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08294616 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132885647 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067481588 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073211885 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064586168 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080360504 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065650034 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072600123 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066623032 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072030831 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072556848 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064313023 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072616113 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068924825 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064960773 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067572702 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075359583 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068774613 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061821738 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067641337 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08836762 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077792129 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066195689 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06947085 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073984878 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072017518 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061056915 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066592188 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06715133 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064411076 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077189964 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084144113 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070392059 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074986369 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067295562 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077108565 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061529744 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070927716 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07261609 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076420353 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066686927 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066899207 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061435512 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064623917 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068567591 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061626708 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066474755 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061261695 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075837421 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06992551 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078222634 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065865028 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068477595 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069327904 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069759684 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072898823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068670045 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0689541 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066687838 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073186518 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071058343 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075824277 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062133159 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061179062 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065772541 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07805876 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090093741 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072921868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067167842 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067396784 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064728175 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069992719 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067899479 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072365118 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073135047 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066931878 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072580498 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074220512 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067089468 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06942045 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075457973 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064853296 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070411227 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064690994 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083691762 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066179627 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065833547 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066574078 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079456006 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070640126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0670578 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064653353 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073688889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061110038 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068114098 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067532576 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066977315 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075874971 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070200737 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070709525 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074193919 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073082173 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066031451 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068865386 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062367319 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066860958 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064735164 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072897181 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060167915 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068830127 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06637445 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066277894 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199770847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066025228 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068222384 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075548748 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073026073 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065809122 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063893382 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070791407 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067072572 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070426662 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075487577 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066065667 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062324916 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062153912 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070501644 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067036059 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070732598 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071872012 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069782327 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061180547 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064837196 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072922736 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076064787 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066965122 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068531358 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073584966 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068367831 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067191382 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073653391 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069262837 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06648068 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072617406 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068711295 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062229704 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069763337 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069870872 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065242027 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070235178 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070524951 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069420556 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068446256 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066200852 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074856764 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068408256 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066600357 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067154419 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065229473 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077223842 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069451282 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062216174 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063846183 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076719851 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065556257 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066501202 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066004943 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069486797 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067388195 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064942867 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065835122 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068668635 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07836498 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070450822 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067975571 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072697567 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078517272 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066718995 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069811665 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067217555 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067501994 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067404154 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075479928 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07259694 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072085057 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069875448 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063458849 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072505158 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074166689 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065781364 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064649864 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065832252 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071363152 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072427866 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071061762 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067284971 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064795124 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067113717 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069848589 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069152841 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066282499 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065835316 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073790545 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064690818 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07399026 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06771892 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076867436 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069915018 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061781631 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06982889 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06447945 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073117878 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061860935 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06430732 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065770674 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067592639 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065288567 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068474254 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060823438 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072180337 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073132644 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065598219 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064619111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065313648 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072224997 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067224562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069276946 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069188493 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071672995 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076257118 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065094346 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069009788 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076086648 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065409414 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188352067 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073639725 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065841799 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065935047 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066577363 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065809613 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070354776 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076611142 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074408402 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061281168 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069623862 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064905671 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065729203 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062974015 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071401671 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070783986 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067695043 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074245882 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068343381 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067847819 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070818595 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066851076 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068236102 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069063101 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070825678 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068451819 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069027927 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06672414 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069566603 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066628066 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065102152 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069353986 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066944717 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068674209 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074029541 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067037609 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067494265 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069268908 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068173779 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068219229 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067809449 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067210939 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071001641 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069527895 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067956385 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06987585 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062495393 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07440646 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066873544 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074702374 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067540113 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063963407 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075098581 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068988252 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072907814 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067790401 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06766988 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068868451 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066532411 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070120075 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073684335 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064815575 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078260022 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075012849 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067772491 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070183008 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067379954 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068709165 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066247439 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067275959 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068106778 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068705858 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068102154 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074258661 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070603502 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068813293 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070252185 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069241488 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068817464 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06964531 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062886388 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067906643 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067346289 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067894401 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077436213 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067082023 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066280689 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065356562 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067427367 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065899683 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063418618 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075604923 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076387333 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067436804 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074566643 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066004491 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068606537 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077383572 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061049847 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064957497 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064406249 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064633089 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074107889 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067040066 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075815721 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06675734 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065991466 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063561871 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066594431 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064664146 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060514654 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063481535 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068825109 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064889572 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064437425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065415891 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067918054 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066250322 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074842673 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064792117 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066341258 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065753003 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062532228 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064680434 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.195698175 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070922532 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06875795 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065685717 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064800128 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066466213 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067180713 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06835921 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066071625 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068643749 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076194139 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06635448 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069497524 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07052216 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062514575 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069670112 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067334319 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066712694 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065827607 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071303428 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071058585 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068234973 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075628212 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066804442 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068115177 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067222845 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064913705 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066968137 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067344776 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066817312 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066358417 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067949119 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075675913 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064454045 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070384506 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0678226 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068150713 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07387157 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067585296 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070173144 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07432404 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067046135 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069040799 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075231027 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072039477 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070169054 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068915069 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06869692 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072621961 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06643138 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073481545 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06706507 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068169976 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067947727 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064820921 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06702842 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066727167 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066163061 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072488729 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067642506 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065961101 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066243171 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064252605 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068184223 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069953754 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074484283 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069918898 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070455625 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062171486 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064203471 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06830967 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064726494 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069246465 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069846502 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072328564 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068705059 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066749984 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06540495 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075352182 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072412871 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070423676 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064441851 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070267557 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067273524 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068765594 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0673914 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066720507 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067718116 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070696683 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068139736 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066085367 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073884421 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070204141 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067719944 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068854808 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067861699 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067354124 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061872133 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067227296 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068686413 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072090678 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069084048 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067279779 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078281061 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064422559 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067276657 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070172 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065933902 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07142434 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061641982 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067818373 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067030829 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067152127 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061604871 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065061531 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063598081 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067572084 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064700606 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061200937 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075949022 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074341833 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068306232 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064514476 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064074979 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060757526 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060509221 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196350934 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06810514 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069423798 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077799431 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066381825 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065667318 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062085507 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067290299 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070614073 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070145265 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064237923 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062124582 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066966498 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07008674 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07274841 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066066416 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066740098 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06983438 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069094381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065073393 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070658624 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063735784 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070929363 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080085602 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067934134 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068070986 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073684227 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074649348 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067416213 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062016869 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067660018 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070429967 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067620079 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068469451 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068455279 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081448477 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070490787 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066333123 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066152709 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069968951 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06584759 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075462808 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068181476 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06843152 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071504894 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069731335 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075828193 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069895006 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075375429 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070521045 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070283143 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06620366 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067507875 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065131823 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066148904 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068671124 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067463354 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072400812 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076120168 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066602765 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077654586 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076964232 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068437859 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064012818 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066715532 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066647965 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062420013 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067793816 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065221448 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064679705 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065753734 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065617355 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067494778 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072431884 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067379606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067101691 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066323646 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060720731 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068847833 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068677562 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067572479 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063193366 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066767832 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067333597 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070647565 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07003446 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06441042 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068060018 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068244844 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067502409 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061860012 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073423984 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065438363 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068597919 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066279615 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066746916 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067745361 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070310161 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071667941 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068075101 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068901586 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070685021 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069127443 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064238897 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064256953 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07224203 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064871194 seconds)
  done (took 42.853554563 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100436776 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063348111 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061811433 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062707145 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07408198 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063306063 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06232942 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063426631 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063644969 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065693543 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062586443 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062325488 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071592935 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07844932 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074628646 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067276374 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06242153 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063627127 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06207627 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063458628 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071636183 seconds)
  done (took 2.76757674 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074781537 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070953438 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073235452 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0767521 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068565791 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071234519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073749963 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071157639 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076838577 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067460769 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076486838 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071003584 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067699363 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067817394 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067931193 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071453005 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07688016 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067881476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079455163 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073298006 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071166888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0730949 seconds)
  done (took 2.912246892 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066715587 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066307993 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068286313 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061764556 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065970948 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061965536 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069990823 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063966186 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070045736 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065226401 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06523536 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065388903 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068011469 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061540684 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066196321 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064034468 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109653678 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069139914 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066000935 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066677487 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06183319 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068170838 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061663778 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062013928 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065273272 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069867844 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066573024 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063981303 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065628199 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065446246 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065904181 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064150909 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067588201 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066553739 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065415778 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06505048 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065643265 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065769971 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061554776 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063955606 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066675448 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062041602 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066752045 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067652109 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064165235 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063814177 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067620904 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065513776 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060990923 seconds)
  done (took 4.575562739 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07992662 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109959254 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067794189 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088714609 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081043093 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07604397 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069728522 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09009715 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063654256 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064700986 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082266121 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080554665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066173301 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070723949 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073025404 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066085008 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067158573 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065292697 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070023117 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066090287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070202451 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072863158 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080497696 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079775783 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069959471 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065012444 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065240997 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070723796 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07902233 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070539613 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070698173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071379549 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081484714 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071307312 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065275188 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068321014 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082064052 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066493666 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068301702 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063733308 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067999068 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070164117 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072474314 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082664469 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066117921 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071303312 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065931228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062853114 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078995192 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068330763 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073563704 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080648049 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069663099 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066093182 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07035618 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08114092 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066047075 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064200508 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069321153 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.0787968 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063860867 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06999175 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080057707 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067621394 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07311365 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080455522 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071296307 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069837367 seconds)
  done (took 6.393835919 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076271881 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072866748 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081455561 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080889496 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072583981 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072902231 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073073597 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072669592 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072369833 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077641041 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073065371 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09411491 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068037692 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075466418 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07293801 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072951181 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073041557 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073211792 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073511008 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07293151 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07288232 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080843093 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07279804 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08077615 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098771529 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067901633 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072565463 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073425362 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081190229 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072759213 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079768171 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073552176 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072823988 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080948189 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08009032 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072637529 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065309966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072524217 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072846064 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072674206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067877575 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081012297 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07259748 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067920378 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072777744 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07261911 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081983338 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080730617 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075637178 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077935416 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07385613 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081767958 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072759885 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072917957 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081797276 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106307459 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081122458 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081577096 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072902967 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081404492 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081085996 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087757181 seconds)
  done (took 6.088456788 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08473794 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076088142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07738847 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061701047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064427958 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070413568 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064450265 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064428904 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075307558 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075102332 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077758174 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07035906 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074000462 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077884891 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070439954 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073755596 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070235687 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070287444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075503145 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070294676 seconds)
  done (took 2.788810596 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074238826 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083610405 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067394305 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071662208 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069086365 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072308682 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068620829 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069480851 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067178056 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069465557 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076615917 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077076728 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067634661 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072453589 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076584795 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072351838 seconds)
  done (took 2.495292827 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075475267 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072819188 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080118846 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066539618 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065987001 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064479051 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06796002 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063299085 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064046677 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078929587 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06632904 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068704963 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066468629 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064911879 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063706213 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069710071 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063100384 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063782717 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066205164 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078803319 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077136175 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064899305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067429813 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066091272 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066505543 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07155798 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065713143 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064398569 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06366207 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067097471 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067693835 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071547847 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065019415 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065627802 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06572457 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06420663 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066337368 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066871698 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069639416 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067464529 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065158317 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06584037 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066182375 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06708548 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062504149 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066881209 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062643189 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068179992 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063874693 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066313056 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06611856 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068612413 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066703948 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072714916 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069166957 seconds)
  done (took 5.05410029 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079168175 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069877151 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062037706 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063847604 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069418473 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067975999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070504033 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068799865 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068161634 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064378439 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068060397 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06878337 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068064374 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069882308 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068017598 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069941029 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062097744 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068017697 seconds)
  done (took 2.577222767 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071404031 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066633276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072972356 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066911714 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065919853 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068575708 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062181193 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064567563 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064787018 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066233159 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0663361 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068518736 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064748679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068612336 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066088422 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065945369 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068715727 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064770724 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065960498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062598218 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068143444 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06513636 seconds)
  done (took 2.809173121 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072134808 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092184452 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138396678 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084049621 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081413286 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07882497 seconds)
  done (took 1.891928133 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090195794 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080192923 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066882804 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088373339 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074011441 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067975791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068116555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068298632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076717034 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076742712 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068275019 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076759725 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076466496 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076402626 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073680747 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073475894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068208515 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067768391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066639437 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085048741 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067963015 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076522174 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067951673 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068069646 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067852005 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075920227 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076653906 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076828014 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067678278 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076573493 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073629099 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068322592 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076758315 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076610057 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070135695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076652122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067972055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08528918 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073484675 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07654002 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069437242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0742833 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077176562 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074711475 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078110003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069970484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075089948 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070195595 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070099969 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089989482 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076067149 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078327039 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076229005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078884891 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078141447 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087129771 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077356846 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074025223 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079420811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076464833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074250202 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076102493 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076774881 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074001085 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076353455 seconds)
  done (took 6.29332397 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082670103 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086149987 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068702927 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076951461 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078181031 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069551511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070106906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069023923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068795331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068831971 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108724286 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068526506 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076886159 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076523615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068646444 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067938244 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069045784 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076616514 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067637008 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087494609 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067939585 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076252859 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076471931 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076147626 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076947747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073891386 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068633681 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068222437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068193756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068362474 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073148608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069088398 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077262489 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068238066 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077932084 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069234558 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067848852 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073124145 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068260621 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073726572 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076711923 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08552592 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067832527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067842375 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076934077 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06799455 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068235132 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068158629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068814732 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067503287 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07717295 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077129772 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076936568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076398464 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068647401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068070305 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068043489 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067920951 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068562334 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074019477 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076304446 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067991402 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087040016 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068155327 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068068544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076430125 seconds)
  done (took 6.194279441 seconds)
done (took 129.944025076 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18385355 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174572607 seconds)
  done (took 1.702338346 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069052248 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098441403 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077135813 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12852505 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066700876 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101090344 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100057984 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078084662 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066599647 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066422731 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06675364 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068952144 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131784111 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066800801 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066571078 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069557255 seconds)
  done (took 2.677044889 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097070955 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158163537 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099636539 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064949523 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097980723 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073771622 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064968021 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075435179 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071261919 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065581192 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07327314 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071295004 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065257133 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071189533 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071317455 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07372038 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065379982 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073269227 seconds)
  done (took 2.790831429 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101895958 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09233923 seconds)
  done (took 1.556997043 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15519127 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.1058741 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.15046174 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349211856 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169418257 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231408882 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128133795 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130342582 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117574783 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124959209 seconds)
  done (took 3.018829096 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098795487 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153430341 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.258503077 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1159655 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072904065 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095957898 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117026768 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078331702 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081954733 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081334857 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081281073 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077153451 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099467522 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074618356 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073993356 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076518176 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102784655 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07277677 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074959931 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077284266 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099678227 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066652389 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074090022 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073116906 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.0780756 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078083234 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065744935 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065998523 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077534223 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074644253 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077304851 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094599787 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077644216 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108750233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070564768 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109665887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076858816 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074184105 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074958433 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074486517 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079464422 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079536635 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072751166 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077036254 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065743265 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077143014 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065763976 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065825558 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078848747 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067377467 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078827418 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077410087 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108672989 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068968957 seconds)
  done (took 6.004475817 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102178523 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106539429 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071836478 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109711174 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098062409 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071961483 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102458918 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092376429 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10344884 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093433522 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089574703 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071552541 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082927369 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08434587 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111092671 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103515098 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095807642 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071833427 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102917052 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103630581 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069113916 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095767409 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091841588 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102637936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068428701 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070811124 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068979204 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070928341 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078166758 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078892653 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07079821 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.103620208 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085524739 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079256609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067498106 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068224205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068455843 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08027963 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09865897 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07946356 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078484948 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068305373 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068543773 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069882836 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091266188 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06830408 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079701048 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081064582 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07993343 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070535078 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070832042 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068521521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070162379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080760235 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079036398 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082011891 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08117377 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06900857 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069628233 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072232488 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081317017 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080109699 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080137986 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093738867 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080692695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069221779 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081271805 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085838446 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068990223 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070909295 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069313314 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069924212 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07084382 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07929727 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079047124 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07026519 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07033098 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069054221 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081036386 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079326165 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068630482 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078027138 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068172252 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069470511 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070788948 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070634316 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079046407 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080679618 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070973476 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069049216 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069992258 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068690674 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066905055 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076606265 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079474135 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078553088 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078461763 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069554165 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.0791137 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078571066 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069560272 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079126845 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.199649178 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071792416 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070387912 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080592331 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078621064 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080972942 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070224957 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06933223 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080202351 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081701965 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069165179 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079727625 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081813173 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080768493 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06858394 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081698812 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069601958 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080829894 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071053342 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080774678 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069228416 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080445992 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06937062 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068859238 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069795188 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081219553 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071663903 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069975321 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070230565 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071334813 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079942109 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084031063 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071681254 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082384296 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080598684 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071096198 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080073116 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069994098 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080362136 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071155123 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070289039 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068385364 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082592608 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06905265 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069690998 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070542493 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082349371 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069537365 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080655024 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07864009 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068342084 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081751419 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080892836 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078572399 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081893338 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070993058 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069612661 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069259005 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070747469 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079796842 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081212439 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071209806 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06931588 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079091829 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080929521 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068183473 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079436916 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079661532 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079372782 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069293193 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070724197 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08153331 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082013875 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078891031 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079533266 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079501982 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068892753 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078385804 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079034466 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068714785 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085105357 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068845033 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083143106 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080604024 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077715991 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079955547 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081615869 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081773341 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081204723 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08386552 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069063698 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06893356 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080518405 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068857603 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06975935 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077816634 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069631703 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069931162 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082760893 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068285125 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079128851 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067319322 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077640164 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066468169 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069437657 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.214482865 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069776774 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070809488 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080960706 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070701994 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078679673 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082941757 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07948909 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069141905 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072429079 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080699953 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080230045 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069161972 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069003681 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071158973 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078796336 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078433506 seconds)
  done (took 18.966423509 seconds)
done (took 38.084640675 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212728386 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151449724 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181254191 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118785364 seconds)
  done (took 2.124814033 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122227374 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101750472 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.0961557 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065461981 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102994053 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065523766 seconds)
  done (took 1.956832203 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316263649 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212987786 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184173213 seconds)
  done (took 2.111172542 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200630645 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191253397 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395758829 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254692226 seconds)
  done (took 2.548674441 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147308159 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093305113 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069581262 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086395769 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138858706 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165165214 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102759936 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127620326 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078563403 seconds)
  done (took 2.461160468 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149367479 seconds)
done (took 12.749229011 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112202613 seconds)
    (2/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096434034 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.21837094 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.201448789 seconds)
    (5/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091261999 seconds)
    (6/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.147247965 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.212640005 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085359414 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.208538473 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082350184 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114805292 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077828596 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142256373 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078375848 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073875482 seconds)
    (16/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080267088 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.171949557 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.192335611 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107697009 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.151927341 seconds)
    (21/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110330504 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089950976 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07283696 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076399724 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098380999 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081542373 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172446466 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214920844 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.203476638 seconds)
    (30/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191977635 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 0.150160963 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.195395578 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166251695 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051066297 seconds)
    (35/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177381837 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124887457 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070279641 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05149382 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061900435 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071889943 seconds)
    (41/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069328508 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071953764 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091861131 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106524053 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052562311 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071590034 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074023462 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073777562 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174645503 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100190458 seconds)
    (51/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080688693 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.174171308 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.190007112 seconds)
    (54/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.150272246 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072936194 seconds)
    (56/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103881759 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077488315 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091939126 seconds)
    (59/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075570809 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071827713 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065411141 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07192761 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.140494349 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067157053 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208144165 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095341437 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.176409095 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090870147 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089583336 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052283197 seconds)
    (71/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075026534 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077168184 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077914761 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072888922 seconds)
    (75/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.062597131 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070983802 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071812601 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071977189 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.143285296 seconds)
    (80/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075709427 seconds)
    (81/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157887869 seconds)
    (82/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088012625 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 0.126071447 seconds)
    (84/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.212603969 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08002326 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161547738 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14279626 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090633022 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.066840068 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063580768 seconds)
    (91/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080449799 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094060529 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052696525 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090406908 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066748125 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082119852 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061978137 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092791424 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152032052 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066264159 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094941435 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05157939 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139019376 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15065209 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073568457 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069776644 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066066194 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.196873943 seconds)
    (109/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073385738 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068318945 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.408335871 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075569167 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121602261 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065203689 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169655106 seconds)
    (116/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.135345014 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092042026 seconds)
    (118/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110520411 seconds)
    (119/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149541385 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.174994345 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073249603 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118746178 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051431723 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051170063 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142445904 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051390405 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096025105 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08765357 seconds)
    (129/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.149720452 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090079189 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150848472 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065207576 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069991604 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.134251963 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073629787 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068454112 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072390137 seconds)
    (138/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072156157 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051165198 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070781477 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071797543 seconds)
    (142/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09723215 seconds)
    (143/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066327548 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099998206 seconds)
    (145/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097973203 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081028654 seconds)
    (147/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052302802 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051513784 seconds)
    (149/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07524244 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079582712 seconds)
    (151/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051317871 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064412474 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12128043 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072602007 seconds)
    (155/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069428247 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096854616 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051079769 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066789128 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065671403 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072257085 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051577705 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076112879 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060552959 seconds)
    (164/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108273239 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081747357 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054937175 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075489936 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122119118 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105175591 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074069998 seconds)
    (171/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052105108 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065619439 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051502445 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.103280891 seconds)
    (175/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098700113 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053260497 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061035433 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089638869 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075747806 seconds)
    (180/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069858006 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090397528 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06764925 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06684976 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064031322 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069228483 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053307537 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089482825 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073855849 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072013326 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177718517 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073622023 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085743913 seconds)
    (193/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060752654 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 0.12442766 seconds)
    (195/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.10836887 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.244732598 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069550795 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067382224 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188223603 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052412708 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052796273 seconds)
    (202/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053196506 seconds)
    (203/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05273489 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06556333 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064929075 seconds)
    (206/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0527388 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.164816826 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151642011 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109144741 seconds)
    (210/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051714722 seconds)
    (211/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067461489 seconds)
    (212/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073387177 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07326765 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13409852 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065375367 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168858749 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149977849 seconds)
    (218/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052356529 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094881598 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075518211 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072677016 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065337952 seconds)
    (223/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054358539 seconds)
    (224/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076480215 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068433579 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066157924 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054455425 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067700809 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071438195 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071709195 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.151521378 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066843362 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067127178 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064295579 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08756496 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051565038 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052059805 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137546148 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066494503 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064376379 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093512007 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066286947 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053084207 seconds)
    (244/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072224314 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136829727 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06690095 seconds)
    (247/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07962211 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065909896 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138125592 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142705635 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051743797 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051428524 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065664756 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137496866 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184461588 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05315028 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090000894 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076291629 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100697008 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086729772 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071879628 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065468254 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066535176 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071494953 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071734762 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052642674 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086186283 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052966648 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14611786 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051962891 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073856576 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073244954 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067775644 seconds)
    (274/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075666144 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052189316 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068439287 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179478438 seconds)
    (278/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053837321 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080439878 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052439116 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065569361 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067351039 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065981956 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052933847 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052502301 seconds)
    (286/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069162562 seconds)
    (287/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067561694 seconds)
    (288/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051460405 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072592794 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064167725 seconds)
    (291/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184544366 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064293698 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072912547 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067325245 seconds)
    (295/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109775224 seconds)
    (296/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052210015 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142472042 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065837931 seconds)
    (299/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051685577 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051305238 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070874989 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05132802 seconds)
    (303/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072939269 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089070095 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070981605 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051604698 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06612475 seconds)
    (308/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067090139 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051542954 seconds)
  done (took 30.663365827 seconds)
done (took 32.074254906 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0857157 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091805967 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074594112 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092183783 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080524093 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076467721 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072189246 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078588846 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079706383 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081412082 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07839343 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054683602 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073750805 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074184169 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074387632 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090932871 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078010334 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072566731 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073019328 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065086246 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073065471 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066175952 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067242659 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055031208 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077932473 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071946216 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072886782 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073924567 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066020251 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066039896 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068920125 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07329365 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065834071 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078075175 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07195556 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072912069 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07451783 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07714113 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06741252 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066086409 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07374458 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066332053 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07278628 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073599876 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07186084 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070986696 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073383301 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078476 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091376063 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068265252 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074342265 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075606759 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076448985 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072016653 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069175268 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073079122 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070781139 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091255544 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073842954 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068260237 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073689122 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073499522 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071172713 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072804169 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073000244 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074974846 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075571753 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070990525 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074454526 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070807519 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065856786 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073042279 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068716448 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065794957 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075582992 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076573008 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064522761 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071520405 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072367235 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071646376 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064930241 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06781243 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066802259 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071692065 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067597203 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054539979 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068862651 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071287372 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064345755 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073075887 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071552273 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07167639 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06718108 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074951961 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064577341 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070492611 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065649295 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065471825 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066852982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069385086 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065415945 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067549912 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074115767 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067360519 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071788529 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079522698 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065705736 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071509934 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064376223 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064690982 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079830197 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074898743 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06557356 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067495239 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06466986 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071943193 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064616425 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065049854 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065242176 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065297964 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071037041 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065572668 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06684425 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071541133 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077204725 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06478028 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067863894 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066921494 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064771816 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070111826 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065451323 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064497914 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.202408547 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063177936 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068128576 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066274657 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073415559 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068689498 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072901137 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067365157 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073850695 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069803768 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071528477 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071226888 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06424084 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058924388 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068810787 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068670862 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067660552 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066227149 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067287063 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066028061 seconds)
done (took 12.455961404 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067525297 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144288244 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101009518 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095455435 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085996647 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066748374 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076188093 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102693228 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067884339 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103026946 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087529448 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085094874 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11291795 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064723723 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066162376 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069606623 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067557571 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081955128 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101003001 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086189124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116836072 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065351176 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094707275 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08999181 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087926594 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092576931 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066807745 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069913322 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069840312 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100960289 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086179185 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069827817 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066544343 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100864356 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092658663 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083670371 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066697229 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082524629 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067055715 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065876187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067399673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098481546 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080340744 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080509517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070234601 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069178071 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068708069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085923013 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089276276 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079037908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087112761 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103427076 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069134495 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065494741 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064860793 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085574444 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065845313 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06877736 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066427085 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067988911 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065992616 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068986248 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081407594 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08224182 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069688479 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080255948 seconds)
  done (took 6.818719114 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085524113 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091808636 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085327946 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08473264 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067256065 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068770241 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069338941 seconds)
  done (took 2.052966782 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068636348 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088138541 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089943841 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089536116 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08744202 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089941841 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077344442 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067133799 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080597936 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067942465 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08713322 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102502145 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067299114 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072735205 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091378773 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06660865 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09063815 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068009348 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070548321 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090320398 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068518671 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082234033 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069925682 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067308034 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080664564 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066920079 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113842621 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070873367 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068038323 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06959756 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064590468 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108596676 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081810137 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07628882 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066546643 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082444739 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083767311 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067585689 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085837459 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07433237 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082834232 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06943522 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07011534 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066693842 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07225316 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078549246 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069088773 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067811791 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069716962 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086658699 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067535355 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079835971 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070850923 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069307074 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067883462 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070305046 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07597147 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067075813 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086283474 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067985729 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083228649 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082922492 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080301486 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082782356 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069221745 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079876495 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080452646 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069033055 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068431789 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070348885 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082796857 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065228063 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067991232 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077518934 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069001796 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089624743 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091493164 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070606885 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078975596 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069957868 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067760316 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067097492 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089788862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069496386 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066775041 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071091259 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069888482 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065457265 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065992188 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069946187 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064719518 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068127692 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069685508 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069814804 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069005515 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083067759 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069205431 seconds)
  done (took 8.834782686 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068981928 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068115842 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071872836 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07001032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069808127 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070946117 seconds)
  done (took 1.94190376 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093963733 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069714474 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080844544 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072480022 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104904005 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087263825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087450537 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079549175 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083922952 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079090643 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086686987 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088589861 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093649193 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073269607 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086897684 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072063525 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087601003 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076484526 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078829272 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074019103 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087562014 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073741183 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074471795 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081789333 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075901529 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072484081 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067541396 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078967273 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078869379 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079560498 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072882543 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075847476 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070977271 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079112861 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087624941 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070783832 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072463008 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077591408 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072890502 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07618518 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088789673 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07350674 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075238654 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07757172 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079120142 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070866873 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077421803 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076756289 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086719037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077601238 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077480743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071945619 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075442143 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077375801 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070745299 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078709798 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077134849 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086885639 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072642364 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07064784 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069321716 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075862897 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078373091 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075587238 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079830109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07713661 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070374646 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072702272 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07355252 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071943022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077350028 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069201803 seconds)
  done (took 7.120789478 seconds)
done (took 28.255493215 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546098865 seconds)
  done (took 2.035680161 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600532583 seconds)
  done (took 2.115527582 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.627571299 seconds)
  done (took 8.137932372 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.411337266 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.488832863 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.700900875 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132794248 seconds)
  done (took 3.297817712 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.683807137 seconds)
  done (took 2.205930418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215416796 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.199340364 seconds)
  done (took 1.950211051 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387283282 seconds)
  done (took 1.899112647 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.117934448 seconds)
  done (took 2.631541067 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268650042 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164922436 seconds)
  done (took 1.954647753 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465746013 seconds)
  done (took 1.983495592 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.942894141 seconds)
  done (took 6.463065145 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21539736 seconds)
  done (took 1.782399334 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244347843 seconds)
  done (took 1.764739849 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70815662 seconds)
  done (took 3.227309267 seconds)
done (took 42.967460842 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080710809 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081508782 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081475508 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078120244 seconds)
  done (took 1.829118117 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076609757 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072042147 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076886192 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072450903 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077463955 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0721892 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074649745 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07693562 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072166222 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073173442 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072263899 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072524748 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07514064 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074426294 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071170346 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075049861 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076206885 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072683266 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076028414 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072700584 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071350581 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075267448 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074981345 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072023288 seconds)
  done (took 3.300310762 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078497271 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072933446 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074365001 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072069135 seconds)
  done (took 1.827230941 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077626826 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093129772 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088988071 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077809281 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092540232 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086438387 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069049384 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069275944 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073594867 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076923848 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068096183 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096465045 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087851203 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076913691 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078944414 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066329229 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06877616 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087641765 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078066424 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077870646 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070273134 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077143467 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068027043 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08845495 seconds)
  done (took 3.421303867 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077215307 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102954976 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078128603 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087695188 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089725638 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06546864 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074810281 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089359323 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12283778 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065900617 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070068526 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065661203 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072628299 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06527524 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076113999 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104888485 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108622853 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069021436 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095856519 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065818435 seconds)
  done (took 3.183789635 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074810072 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069783255 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06562226 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069635657 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07821384 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073509748 seconds)
  done (took 1.964398906 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069236962 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067618035 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068761576 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067469129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071965518 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067426917 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066533143 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067363337 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067187803 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067038135 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066624526 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065746875 seconds)
  done (took 2.342957552 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.432569197 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071027889 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069950205 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066006321 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071333235 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066885669 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08018307 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068051631 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09093314 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066999066 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067545277 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068628957 seconds)
  done (took 2.752283906 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21126671 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076831976 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240778096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137836097 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112433167 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116477738 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104513316 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113505203 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145569666 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103056561 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169620058 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167703699 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107764114 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137959345 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089357902 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09847255 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157302127 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163701208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103944228 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166933929 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145728117 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125202043 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147952854 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101892602 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106541051 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123236888 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0713643 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080349501 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172615585 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132914621 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148373144 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111757243 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0942274 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178243296 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173708925 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143830716 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134329887 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084363603 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103456919 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134619189 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201998067 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088387462 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16478246 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107875284 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079710814 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131867786 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117664145 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118572452 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104595449 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087983425 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14250024 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177738625 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13517409 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084737879 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109227938 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112488372 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113121546 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101457271 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176376135 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152261162 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122542742 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069005028 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095029117 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145310346 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124953957 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103822136 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120187063 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090545898 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127249963 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146299399 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112947469 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135244258 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122950162 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085000099 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11408398 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134048557 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121010597 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160655642 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119183367 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070365562 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118970907 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099271536 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077458816 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.138302124 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072686468 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166438064 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093978491 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.102068712 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109795712 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104775304 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105760484 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153501193 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137363147 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.356158511 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068494876 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10591428 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122227734 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150731321 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089346872 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110592824 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118993668 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078945145 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142403211 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075498376 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124645375 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075779822 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126452993 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13533961 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076827588 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123430408 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102350008 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101116096 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134784717 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162888602 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090570668 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083417095 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16890139 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124285311 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105708334 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145994053 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160368211 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100979883 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103333568 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151923596 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182828607 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090175036 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165073921 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10810576 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084020639 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087979345 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125433828 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113247249 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124035159 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083089488 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121013077 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171644598 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07644825 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097799073 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138973215 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082917504 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08451801 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106981369 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1042029 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096734557 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100422844 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105025082 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139466959 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124712921 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105588569 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274477196 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100488505 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173554818 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090196354 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102678977 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105757538 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070822595 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137786344 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161525752 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081239187 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164923689 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125270326 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105499046 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119655379 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085961054 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144258144 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08158208 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073328657 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14889676 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114704574 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112041212 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152002375 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105090381 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128958182 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120232121 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135772523 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13374235 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129913884 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106234725 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088336021 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112338658 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126970277 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072744862 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092516339 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080552917 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104744219 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096196628 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083543147 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144548794 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126396325 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101024935 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112367932 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097256216 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148206487 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076864311 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130708892 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120201829 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094768564 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152257817 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153638496 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132059396 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099912207 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146582376 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070480571 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074041432 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.237978573 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125574777 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084153026 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084140428 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11832275 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148184294 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131450035 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139423124 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112805395 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123889797 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155513581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069879059 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115560985 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149815564 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122013222 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106289393 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092768771 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099274862 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143008131 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109452415 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184222295 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115509414 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127145315 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154977916 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100760919 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082095881 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105225655 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142491656 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105653534 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146299368 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100895403 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088334792 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110969617 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074508669 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101279443 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128676883 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123187744 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136992833 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115218769 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134127684 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077457139 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118239506 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121707613 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124249991 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064163245 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121168345 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161997331 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094031361 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120043157 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154622824 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080724518 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124664666 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.325950223 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147759217 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084975533 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11096966 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119362754 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12829022 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121727072 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141162647 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109408515 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135371484 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108616985 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084991104 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087616806 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097270772 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105705746 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09528594 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108830327 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115204736 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095057395 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132399078 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103509395 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109771301 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118935694 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096426028 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089530033 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097113755 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175643436 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120200704 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17420718 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099784115 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147122687 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165943633 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074742214 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079499111 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078436554 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140648122 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084321356 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132772177 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098208162 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106195058 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125496361 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14405466 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095614923 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069108539 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112000199 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140480184 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116577851 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102326869 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112342239 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163680454 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100912785 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079762819 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114508079 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105415657 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102785359 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175745666 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06181002 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097433269 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075406084 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080358705 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128020962 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15362741 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080473988 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104430703 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119287247 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10999399 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126619777 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100468328 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098500864 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115325125 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148734421 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126465212 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08880671 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11025319 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127072937 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153394522 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103329587 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094295131 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168391605 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149491497 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157359458 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087285639 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129044122 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112038068 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106399698 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136693278 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081916124 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161236079 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080394925 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134080791 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101987894 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088513632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127520107 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097050918 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086581184 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144831412 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117492859 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082320146 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078218425 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116400126 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11874937 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104664963 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07416945 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136377835 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071590645 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130144422 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165958422 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080105765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103489072 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.36109088 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08170164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110997078 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105471864 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091802996 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100537804 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176601488 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089594188 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152652989 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144043669 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116192858 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139751399 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101607817 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638240025 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079175993 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154082495 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11804861 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175296321 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098531658 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118922299 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109808385 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125261786 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146628363 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106501138 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17947663 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134084555 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117427348 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080393141 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103747582 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103909712 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089519586 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106205228 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114581745 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117402935 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094586769 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117875032 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124608426 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082958223 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095955859 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158340268 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11829502 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146319284 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142069933 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08547131 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119246373 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139834559 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079867508 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123719291 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154754978 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107287784 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098139629 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.231107613 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10635288 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172493215 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072993201 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165170436 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120308799 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110246864 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113999144 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116664385 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132670668 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108815256 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121837809 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094460501 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111008831 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114278738 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082646887 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077242803 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10488243 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113571067 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097624119 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099340297 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098077322 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152569456 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071451374 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09644972 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1037504 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14700978 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176453982 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089362232 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083937495 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119993778 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113471678 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114195676 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121277719 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07954857 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082684335 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082533902 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076937219 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109328277 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112383242 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104594566 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111941739 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165850971 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082890413 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222997853 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095360293 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105466831 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069750391 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078883244 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096441025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098132728 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109377173 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101039701 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172540701 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094452372 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089885062 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093050751 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072853943 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082835112 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274757696 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112315835 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120460006 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098740024 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062776455 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109131768 seconds)
  done (took 59.04017525 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111225029 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082086046 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096539473 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149464143 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122726559 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213028351 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157003328 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209109324 seconds)
  done (took 2.836908442 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071599811 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093651118 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100693041 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082908464 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067056817 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069373151 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226343462 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080885558 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066568118 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089232319 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079688609 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069282506 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42504713 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067235606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07095415 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063262427 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067364491 seconds)
  done (took 3.480847202 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373173159 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.372691877 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37283309 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07329305 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.855947613 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089134731 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.085309201 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097277539 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071826832 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.282804691 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701604278 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092905886 seconds)
  done (took 14.167550942 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078450656 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072327994 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086619175 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086272006 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074803469 seconds)
  done (took 2.096663545 seconds)
done (took 103.807624756 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082618273 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.397653551 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054129179 seconds)
  done (took 2.180227013 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086187812 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087831629 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087337114 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086138738 seconds)
  done (took 2.051310688 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07720271 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079147514 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.087416335 seconds)
  done (took 1.946304312 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230782444 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.145995055 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089296429 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085456426 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080651617 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078901417 seconds)
  done (took 1.953775948 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075301144 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077371464 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074356144 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077016396 seconds)
  done (took 2.006777254 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079469535 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054764359 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0569381 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05856208 seconds)
  done (took 1.956317548 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088677681 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081527 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078159911 seconds)
  done (took 1.954202824 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110441175 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086552437 seconds)
  done (took 1.906906453 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085016624 seconds)
  done (took 1.7916924 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102749221 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114192134 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13004145 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109860883 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137231916 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109669896 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086172651 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087316413 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077895796 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088181628 seconds)
  done (took 2.744718622 seconds)
done (took 22.737042864 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081911324 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371604411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360615413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091060226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668204309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356920876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989289476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092344074 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113893127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068017121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084159595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647699996 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983610262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324300653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965734006 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414311565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650378142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068539583 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067941954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067994985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977533961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0680334 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06800156 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068283816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64904529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371572388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068882207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414025631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068095393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070250093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354701464 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067912415 seconds)
  done (took 16.402346652 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073329022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118362256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07344817 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084737864 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070539084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069634175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071775617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068863326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120020026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068065875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084809979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068005823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072175035 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06881599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086989629 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068415267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069430326 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068714593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068880684 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068419713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086725194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068194321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068421785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068856273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067810809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080261775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068764377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067924499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068681911 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069986809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071569103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068978712 seconds)
  done (took 4.125471147 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11660196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124907679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0745604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102177862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112205755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070649387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142856628 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092783026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128226181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068454739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085021312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069984937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105004278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071973469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088626035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068990838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069896193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069034956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068810485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069035572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087465233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068182078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06852254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069731588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069000945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082010432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068903403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068959382 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068874551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070725902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072028868 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069130525 seconds)
  done (took 4.393753521 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075398133 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07843161 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084112593 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084244008 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069359608 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072549222 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073912399 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069607968 seconds)
  done (took 2.331957249 seconds)
done (took 28.962669499 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081668605 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07154754 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075569464 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083095406 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075944756 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082576537 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069945826 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076816313 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074829754 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075518179 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077651564 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07086829 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073646524 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069841778 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076952789 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070520148 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082414532 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074810953 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082408411 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08301866 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072203651 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073244283 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.0742329 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080675985 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082124973 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082882999 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080596614 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077290997 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072018154 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072104843 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076628545 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084654287 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071247214 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082755267 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069687197 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068162122 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071839664 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068029456 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079997384 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076786973 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069895417 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076311762 seconds)
  done (took 4.888106832 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091352861 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095325426 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087569905 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06451269 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069637584 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067052347 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089031114 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062153361 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062117218 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089813004 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058730467 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062035867 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065446441 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056575036 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059603689 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057138409 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061459245 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055870849 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059429949 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059453968 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058014592 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054480514 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060218527 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065634268 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056532446 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06233421 seconds)
  done (took 3.458188501 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07727463 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085977534 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088771297 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127127089 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104179178 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077197504 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077954744 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092730167 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085215303 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067428744 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071493834 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094039147 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088809762 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074002585 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06816991 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084635328 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082505374 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069177176 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074530822 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091328327 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08468525 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083916921 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093202314 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081201814 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067002937 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070041129 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071981816 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081796525 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072960685 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076528443 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071946587 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07091026 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069286966 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079047735 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071814048 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069337613 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09059641 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077316876 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07759364 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06818122 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071007611 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068582364 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.10095851 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122343911 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067295655 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074740361 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07554474 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077182138 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067476267 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086101586 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078491881 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067719989 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070589861 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06694494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068086131 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080357447 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06985624 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070198665 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076909345 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070877999 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085514077 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071710347 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083734708 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069503664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077766465 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06928577 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071090259 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069091999 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09591506 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071731122 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109988819 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069551394 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069972427 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078124985 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078031559 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076944083 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070482458 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085970285 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080945704 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074061477 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.0792246 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074335801 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073509878 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090238256 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072463159 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071547703 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070993436 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076816719 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07334561 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071742363 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081659837 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067913267 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070632693 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084655058 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067423111 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069525096 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075792943 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072470569 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0680234 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078767563 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072591636 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068678014 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077042669 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067512639 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070578785 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078151744 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073873502 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066512716 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072534226 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073714144 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068625533 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06931816 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070879923 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069711525 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075944444 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074489427 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072389326 seconds)
  done (took 10.746625638 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165702452 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154415292 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070117583 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145628953 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076786909 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07928824 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148173057 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094318806 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067817624 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06853231 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068983245 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110131766 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106200259 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115680526 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079254066 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067804188 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083413746 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114278703 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150764786 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143194495 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083272017 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076482572 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070665969 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068921384 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070760746 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078635358 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085508229 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076747399 seconds)
  done (took 4.483018487 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083847488 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103801743 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075163635 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088951959 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090981959 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068021188 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070040067 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069754993 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080238821 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079215951 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067941946 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073186526 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074647898 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071178626 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069198031 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074770828 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074995323 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069251402 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071032766 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073083752 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077633518 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08135626 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071895406 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067155862 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074285667 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067803252 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065544679 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085531763 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068590076 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090537761 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066001832 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07494894 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081668012 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068532071 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067958545 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068131241 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067686661 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068073447 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069974313 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066892301 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066558679 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0589189 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067392814 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080640411 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073963736 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056801441 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073013046 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072929546 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07299311 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065571488 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070722177 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070299009 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071000697 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074878191 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072782535 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072768137 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06900432 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066092404 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075968307 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067565161 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064790533 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066475097 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072534478 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067121195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075756582 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072669723 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066743617 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068428811 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071941234 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0766158 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070236505 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073838169 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068128215 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070759296 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072335352 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069555593 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068756459 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066576842 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068112367 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068167321 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056581514 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069404897 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056253654 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073800213 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067215808 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066148177 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067801286 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072732563 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08071411 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068706407 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073682235 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069156039 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066976579 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070710987 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060745681 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070741368 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082812205 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083195608 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067592275 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06596105 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082233163 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07239347 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066815469 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056345545 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075054722 seconds)
  done (took 9.279838663 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.0971461 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087990921 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069941504 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083144611 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090925901 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086086355 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074664959 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076696577 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069709323 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082001422 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073736101 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076287856 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068360979 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077283069 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093164009 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076998353 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069764274 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077361913 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072518551 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100785698 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082753513 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082061854 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074849101 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068217832 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075674609 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079969526 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089187553 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080510416 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078438023 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075625163 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080125407 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088912884 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074108613 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072022478 seconds)
  done (took 4.479657502 seconds)
done (took 39.048894066 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.819599337 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.978180264 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.794051366 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.201652051 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.067301754 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.92912347 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.854343452 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.796844452 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.105840812 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.839978955 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.052281673 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.838730154 seconds)
done (took 66.013791447 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.81711703 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.943921821 seconds)
    (2/2) benchmarking "String"...
    done (took 2.111881312 seconds)
  done (took 5.79577551 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.099511078 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.33860868 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.045287557 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.797556732 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.800786078 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.097381532 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.603959839 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.322937707 seconds)
  done (took 30.750808103 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.100846752 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.009794688 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.512181359 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.548510539 seconds)
  done (took 15.966888314 seconds)
done (took 64.253207769 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.830853356 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.823677386 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.826080127 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.781732129 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.855071934 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.808411961 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.996775518 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.81571929 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.799696007 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.782256133 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.797635161 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.24843536 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.80880664 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.368463138 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.80036493 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.811249594 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.805701489 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.361685756 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.954659174 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.817507932 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.813076041 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.84421434 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.80531142 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.964698157 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.834521693 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.806448398 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.263634389 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.810554778 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.423825784 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.805601694 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.834393114 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.32134139 seconds)
  done (took 205.358862464 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.80137045 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.873410758 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.938531497 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.816990929 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.428898285 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.993244008 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.941346737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.475639156 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.800604549 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.826449612 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.014136635 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.803253763 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.052737715 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.751616473 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.812835461 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.809625349 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.08764551 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.055653504 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.799371843 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.08178371 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.820834191 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.038181317 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.993372474 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.994090589 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.829820557 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.87141579 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.848059348 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.850202906 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.006813388 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.06947713 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.85162087 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.857663438 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.018130759 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.69331002 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.81792284 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.820055815 seconds)
  done (took 172.286868877 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.948933426 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.817712215 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.814002927 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.815084816 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.823567437 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.816011722 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.938593634 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.94357236 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.267197175 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.183552916 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.867217279 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.81562872 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65524184 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.813594085 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.813743695 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.885749226 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.827542421 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.817089719 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.830194884 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.844150438 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.814340468 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.818751428 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.944706469 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.824208039 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.11768621 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.820567493 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.81842019 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820024954 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.186630907 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.815596735 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820336305 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.060517005 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.816586171 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.816373525 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.721982043 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.554868723 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.912827679 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.818947998 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822891677 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.81816053 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.035634095 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.818699495 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.820997061 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.821550161 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995896742 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.816886735 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.945998579 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.818279653 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.319789154 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.818344174 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.821046505 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.504531893 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.500125476 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.811972099 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.807768311 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.811630813 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.807633364 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.807644312 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.81362155 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.471276089 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.898096212 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.817809858 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.822104048 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.825918287 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.820243128 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.936394993 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.820598508 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.242726455 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.875103678 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.938220603 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.938828629 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.820794897 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.886903124 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.911743267 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.816931348 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.818432565 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.819404113 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.817147303 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.902378117 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.818177668 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.93835575 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.827771231 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.817717631 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.866353626 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.887685394 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.819444578 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.714370341 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.82167176 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.815953519 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.135535511 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.885802408 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.817289619 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.819759873 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.817905181 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.81845861 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.938911477 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.939353297 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.611654739 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.821213713 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.582821328 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 2.021595238 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.005196817 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.819642678 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.10085202 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.819911426 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.913783961 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.823808313 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.824016173 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.823884783 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.853007228 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.822937619 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.8826818 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.824768079 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.820238212 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.193455457 seconds)
  done (took 407.660477929 seconds)
done (took 789.052067229 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.494115146 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.456478366 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.586488977 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.489606839 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.468249511 seconds)
  done (took 14.257563927 seconds)
done (took 16.014612913 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.918991502 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.914661874 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.845703765 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.910395495 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.840292276 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.912602522 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.889760604 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.845223071 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.878679441 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.846899701 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.879103086 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.846432159 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.833053196 seconds)
  done (took 26.124192238 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.055660242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.069791807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.896638446 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.061372167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.873665215 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.070824915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.986837512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.972310788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.976081941 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.833318587 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.836204033 seconds)
  done (took 23.397936365 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.05468038 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.067091342 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.899762041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.067250467 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.873750843 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.079132778 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.993040102 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.975352611 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.974411169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.836213141 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.833260616 seconds)
  done (took 23.417907723 seconds)
done (took 74.699722139 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.831880205 seconds)
  done (took 3.596103589 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.853180772 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.991982723 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.834035843 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.831504255 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.828529041 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.829240716 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.829733185 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.830419106 seconds)
  done (took 16.592790164 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.828396196 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.830797051 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.827927611 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.830709479 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.830723407 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.830209765 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.826765576 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.831085295 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.826051694 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.828230699 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.826951598 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.825605776 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.828535827 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.827359149 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.830333977 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.828391496 seconds)
  done (took 31.02526572 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.829153485 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.822705269 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.825290032 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.825762162 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.826576552 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.826160709 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.828101666 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.828292688 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.825673027 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.826824683 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.828884423 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.827645763 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.828309277 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.827419865 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.829621629 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.829986989 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.828780373 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.826340579 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.834766092 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.828728878 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.827557605 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.827461797 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.828629286 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.830868761 seconds)
  done (took 45.636459941 seconds)
done (took 98.610945564 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.625483463 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.385718293 seconds)
  done (took 8.777448435 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.832399223 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.830377881 seconds)
  done (took 5.471735389 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.83103898 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.834970815 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.830489087 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.830833243 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.830533551 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.830012714 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.833395524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.829331495 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.832061746 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.831260987 seconds)
  done (took 20.080042779 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.831567374 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.82961089 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.829081375 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.832336183 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.829512181 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.829658091 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.832039143 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.832629286 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.830526949 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.82911582 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.832059732 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.828284292 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.831921349 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.828545089 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.833941976 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.830748036 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.832446431 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.830184338 seconds)
  done (took 34.720021643 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.836628811 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.83467858 seconds)
  done (took 5.438701722 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.833042188 seconds)
    (2/7) benchmarking "second"...
    done (took 1.829241925 seconds)
    (3/7) benchmarking "month"...
    done (took 1.831262531 seconds)
    (4/7) benchmarking "year"...
    done (took 1.830315906 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.829545946 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.832210145 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.831000856 seconds)
  done (took 14.584275699 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.836766068 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.995300732 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.076162963 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.520350589 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.836027508 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.838623805 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.812059007 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.837636685 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.838801367 seconds)
  done (took 20.358920715 seconds)
done (took 111.194757449 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.674345295 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.829927665 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.195187287 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.890002765 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.876117785 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.125504147 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.843565102 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.049388375 seconds)
done (took 43.250233214 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.847989421 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.300304953 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.333091837 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.366701047 seconds)
  done (took 12.768915482 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.813448172 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.361100918 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.878506575 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.420540079 seconds)
  done (took 20.264196546 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.203890248 seconds)
    (2/2) benchmarking "read"...
    done (took 2.204896175 seconds)
  done (took 6.181739096 seconds)
done (took 47.830577173 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.836575433 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.835433432 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.834944007 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.833832552 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.835260267 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.83590331 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.831734402 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.833471873 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.8353695 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.833187926 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.836075374 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.834099676 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.836760462 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838208384 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830852158 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831291812 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835257455 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.831841606 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832401825 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831196021 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834253028 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.834083429 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.831661872 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.836778052 seconds)
  done (took 45.790888443 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.837047974 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.831669265 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.834070139 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.833211164 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.831606577 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.831064996 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.830797484 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.830793195 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.832973164 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.832400151 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831606107 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.83389053 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.834708178 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.830220722 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834533784 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.8336445 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.833775267 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834050661 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836604648 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.828851774 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.836843568 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829432656 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.830275035 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834669316 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.830880125 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834192409 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.831937885 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.833641491 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834316283 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.834295333 seconds)
  done (took 56.760010169 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.82775125 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.83017289 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.822540162 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.824263701 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.824314555 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.825067181 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.822563778 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.823654384 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.825137025 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.823820708 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.823307405 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.824466317 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.824212831 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.823491001 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.822387166 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.825843514 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.823444277 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.823120052 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.822742489 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.824722156 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.82472496 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.822459475 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.823304522 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.822728783 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.823619045 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.822845762 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.823125568 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.82346063 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.822015939 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.821477493 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.823152269 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.823715967 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.82344252 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.824693232 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.823534342 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.823912004 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.829301807 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.833883865 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.824235013 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.823919891 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.823717307 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.824362146 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.823469529 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.82390497 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.823677137 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.82412751 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.822040074 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.823822565 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.823702063 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.825743897 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.823838216 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.825129786 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.823703306 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.824320229 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.824502311 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.823201915 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.823048042 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.822977485 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.824698298 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.824565645 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.825768755 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.822729561 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.824865108 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.824592127 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.826623956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.824419156 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.825236649 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.824496134 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.824728133 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.825042882 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.825705903 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.824970232 seconds)
  done (took 133.106694377 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.824509689 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.823013405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822790026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.821604882 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82310043 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.824593134 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.821655352 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824964418 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823645907 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.824148083 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824159708 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822581108 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822874065 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.825746936 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824183557 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.82222069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.824000276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822745879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.826439365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826731714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82418987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.820328854 seconds)
  done (took 41.879035976 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823209733 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825104393 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.822192517 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.825034687 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.821842968 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826984152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.8249342 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.82476416 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825903761 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821507568 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821553929 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824816307 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.820095147 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816933001 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82109226 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823954737 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822950934 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81798278 seconds)
  done (took 34.569528644 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.821620752 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.822673674 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.822923716 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.819109327 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.824207304 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.820471397 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816639049 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.81648283 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.818841511 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.815351409 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.814816583 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814378846 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.813415701 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811650645 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816216235 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.811824789 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.813945793 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811089953 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814627374 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811204666 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.811352221 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81399267 seconds)
  done (took 41.713583871 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812305047 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.813749365 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.810156484 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.810768223 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.809256775 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.812142159 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.813596678 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.811106961 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.813632264 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.813778994 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811042848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.815473727 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.813004654 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.813446602 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.811716326 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812029588 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813537432 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812329819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813292342 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.810475232 seconds)
  done (took 37.994750602 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81435443 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814059521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812570933 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814038511 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814340109 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814493809 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814587453 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.815561313 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814140565 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814682325 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812760967 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814661517 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814519457 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813894533 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815509111 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813967999 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814452668 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814787818 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813363356 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814094236 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815227047 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815709613 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.81437238 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815563225 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814747899 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816069002 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816799106 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813421682 seconds)
  done (took 52.555996645 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814579652 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814245062 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.812378805 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.811482412 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811299399 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.810836599 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.810789338 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812821414 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814655568 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810308424 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.814953676 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.813501111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.813756111 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.813760875 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.81412649 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.812893726 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812783524 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811459276 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810481029 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812063996 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.813738053 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813414145 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.812386819 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812341549 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809978028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.813460447 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810352125 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810713852 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813893562 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.810740232 seconds)
  done (took 56.123590541 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.834009286 seconds)
    (2/2) benchmarking "in"...
    done (took 1.831353856 seconds)
  done (took 5.412151689 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.809724707 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811417564 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.812332767 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807789379 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.809041148 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810526055 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810395464 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808947396 seconds)
  done (took 16.226268194 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.814037229 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.810104387 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.810262534 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.809439143 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.811091315 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.811191904 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817271459 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.807896508 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.812670627 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.809819553 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.817693977 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.819109204 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.814377283 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807904087 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.809139622 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81021147 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.80753698 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.808795039 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.808530572 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.807694858 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.8083385 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.8108312 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.811051772 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.806747986 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.811741857 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.822643732 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.815806448 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.810250178 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811156207 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.813843217 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.81004107 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.807002946 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.810402698 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.809189376 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.808236001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.809085551 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821040332 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815527693 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.81710117 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808662055 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809234584 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.805309156 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.812281516 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.813527023 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810423792 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.808407947 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.807626829 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.804434393 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.809506154 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.810791071 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.813459045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808480646 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.806315118 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820986192 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.81226132 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818493632 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.809014642 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.812332095 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.818317348 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.819881784 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.823304726 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.81625347 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809931044 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.808166201 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819028419 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.832466095 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817339515 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.806018547 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.804710976 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.80874882 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.817056775 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823325082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.81767927 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.807183679 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807244475 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.806773058 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810154006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809023009 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81770919 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.812962881 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.807663256 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807219647 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819563517 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831427308 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.811518753 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.807488213 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.808528632 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.810005566 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.810436123 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819378094 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.808706432 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.806901876 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.811181061 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.808278972 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.812065059 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.807868664 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.807575294 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814232443 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.807740355 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.808562258 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807432589 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811093869 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.817157606 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807527542 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807630227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.817695954 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.80727755 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809513017 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.819168167 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.808492666 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808999916 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.810156325 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.815762278 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.804308067 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81210801 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.816907669 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.807105204 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.809487272 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.806022078 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.80743218 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8203016 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.834064487 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.808052642 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.807306303 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.813605355 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.81845043 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809833337 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.811834196 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.807468514 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.806539231 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.805453482 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.810987928 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.806663799 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.811153211 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807681793 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810787545 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.805205913 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.808025231 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.806592954 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.81167862 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.811349619 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.81102268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.811567859 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.814049384 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.807018464 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.812424259 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.817947205 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.809012289 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.81115397 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.810535049 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.806231313 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811293676 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.812000009 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.810538529 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.810009618 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807400759 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.807755794 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.806907125 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808399615 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.808967647 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808350862 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.809363815 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813445314 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.807230321 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.815790301 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.807101687 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.803421532 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.807572396 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.809520741 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.810284191 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.808147457 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.80775074 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.811610663 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.812724259 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.806764498 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.808453702 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.813987482 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808313975 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808853135 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807478434 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.811860169 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.816214595 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.807867449 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.816561314 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.808436122 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807495166 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.80968612 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.811062344 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.807706332 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807885809 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.81151204 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.81358381 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825651519 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817159078 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.812093851 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.809472851 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.809291464 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.812006994 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.814483496 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.806177307 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.808221311 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.807107986 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809061426 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810045575 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.812475368 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.806431051 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.809247651 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.809041351 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.807715454 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.808218997 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809585179 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.809849061 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810189743 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.805294459 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810268756 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.807128193 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.807646008 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.80633676 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.807398081 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.809680864 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.807846149 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.808676348 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.819771272 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.807073083 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811544282 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81134559 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.810670907 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.808940088 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.807857358 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812625767 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.810399262 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818708694 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.811415737 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.811809526 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818159266 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.809518993 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.810002614 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.812240201 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.809043862 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.805119884 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.812831444 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.815904454 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.810450158 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.811584468 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.809461151 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809959005 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80927894 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.81973432 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.806173376 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.810498635 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.809295523 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.812630921 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.806065863 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.813364568 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.812505395 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.814329259 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813406908 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809775059 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.810807068 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813930564 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.810954518 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.81077981 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.809433037 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813576389 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.816568105 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.819137136 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.812256584 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.815666266 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.811949528 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.814336465 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.812173587 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.810386593 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.811161334 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825576792 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.818602717 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821655937 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.816832982 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.811047626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818378143 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.813759363 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.816216163 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811711372 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81270152 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.814508669 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.811830382 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.809255963 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815699131 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.811538184 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814779631 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.813960562 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.813122362 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.812993936 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.812708696 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.811294464 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.811261423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.811608081 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.812805285 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.811557633 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.817348104 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816444906 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.813065577 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.814804103 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822363708 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814886242 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.815769738 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.812982771 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.814813976 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.813761826 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.815921359 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.811781334 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.816449971 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.818765262 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.816848945 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.824238163 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.815715842 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825401694 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.814040601 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.8181646 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.81973269 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.813159936 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.812178084 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.815976276 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.814006764 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823747987 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.81436443 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.817349905 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.818786754 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813527879 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.812739566 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.813257103 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.815892459 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.814762528 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.812736516 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.826040932 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.816237872 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.820469191 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816850963 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.811581673 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.814637163 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.815150435 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.814728518 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82315793 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.814978117 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.816547978 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.81439373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.816221758 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.815948719 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.814175296 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.813425309 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.812394345 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.814739401 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82756307 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.816338528 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817447809 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.815892548 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.828019666 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818322666 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828949637 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.815661844 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.817659745 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.81505945 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.816576127 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.822171634 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818027181 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.818693091 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.814723555 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.818546425 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.817884297 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.816170893 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.819406467 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.818136917 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.816290656 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.818352138 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825659255 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836646356 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.817394623 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819619734 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.813289486 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.817683623 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.82025562 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.817052022 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.81626487 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.820266643 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825211121 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.823059035 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.820817365 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.817839145 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82076256 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818645492 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.819552251 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.821101948 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.818867655 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.818231529 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.822006686 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.818430445 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826050111 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.820462754 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.822569744 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822779588 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.817951386 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.831987773 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.82075565 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.821927707 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818907196 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.818935621 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.820229938 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.819088949 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.819211757 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823513278 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819422541 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.820784285 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825636421 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.826810053 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.823051282 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.819890003 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.819579083 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.822988088 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.822636086 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820331857 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.820502666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819702219 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.821783926 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.819243433 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.824871435 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.821018949 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.818917008 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.823086708 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819079838 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824179872 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.827963984 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822583662 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.816209292 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.821408722 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82032687 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.822240668 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.823307296 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.834033982 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82563623 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.83115791 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.830093862 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.825701824 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.824207807 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824660929 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.82987635 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.822395299 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.82438108 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.822072286 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.825884066 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.821410197 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.827009301 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821976937 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.832761175 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.823769992 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.823471665 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.832501318 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.825284019 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823416195 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.824245994 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.826562048 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.824467202 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.819613879 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.823009644 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.825236695 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833261389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.82791617 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823222675 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826238269 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.824182915 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.823308414 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824110021 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82049248 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.823995229 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.820106071 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.825879567 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823285594 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.823506799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.81821653 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.823826072 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.823165761 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.825862987 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.828713227 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.818789593 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82456445 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.825824449 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.82624533 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824718126 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.822128651 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.820303936 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.821467053 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.826741461 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.82296812 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.82476286 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.825813454 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.823008437 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.823426172 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.821342713 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822685238 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.824666224 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.829601449 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.826726898 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.820949265 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.824026752 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.825523194 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.828677426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.825120179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.825087606 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826374334 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.828283662 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.823642195 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82322604 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.822665548 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.829627211 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.841360318 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.824485699 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825312579 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.826695193 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833898195 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.825418778 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.82268214 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.824580976 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.830054341 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.827552773 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.830361179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.824437591 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834330339 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825179512 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.825948787 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.828845302 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.828177276 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.832303261 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.82912769 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.825002926 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.826048269 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.832181721 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.842173282 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825910267 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.834441193 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854258536 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.82987876 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.829121217 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.825274219 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825802385 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.825414185 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.830136602 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.824720901 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.826619811 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824868978 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.825520287 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.827836448 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832926211 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.829080569 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.826682294 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.8253332 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.827881164 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.829776195 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.825935597 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.826412136 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.826409756 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.827319879 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.825785856 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.828295618 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.829384431 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841423004 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.838978056 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.826765348 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.826288365 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.826878893 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.834003238 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.83075787 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836612459 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.832869733 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.828605397 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.827827452 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.829931468 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826809756 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.823740744 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.829123151 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.830730792 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82752954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.824751173 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.842104024 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833840447 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836088771 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.829708156 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82840264 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.827664758 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.830459496 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826075364 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82908708 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.832885787 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.82853963 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831036522 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.827794953 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.827987826 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.831825013 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.834404686 seconds)
  done (took 1084.960760017 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.826043664 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82523077 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826345472 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.826308664 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824999027 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824638187 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825859284 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826552999 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.826061912 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.825396599 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826486383 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825013293 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.828054963 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82562476 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826259366 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8260205 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825789822 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825997655 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82869667 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825682182 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826438219 seconds)
  done (took 40.110973246 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.829355727 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.828941066 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.827150337 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.830370492 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82639875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828488699 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.827110938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830470279 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.829766455 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826955683 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.829858815 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830373874 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.82869404 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.826458599 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826119977 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828705333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829832573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.828731995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.829121052 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.827116775 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8297473 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.828089808 seconds)
  done (took 41.991361207 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.830522412 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.831612273 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.829741845 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.829606994 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.831620787 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.828082827 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.831514218 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.831085173 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.830566693 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.834159143 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.829727398 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.832761646 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.837239736 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.833496551 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.833113653 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.830201178 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.974129661 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.831280597 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.830139848 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.831511131 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.82753119 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.838566837 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.828783765 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.828482771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.830891998 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.83187039 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.8308747 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.832015098 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.832558578 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.834190154 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.834896531 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.830538981 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.834479671 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.838267041 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.836015281 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.833248955 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.834737888 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.832883774 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.831889174 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.833023617 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.840966259 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.846604189 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.831612863 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.842485251 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.834317234 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.832185879 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.836697138 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.838638317 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.830043892 seconds)
  done (took 91.727816268 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.833195067 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.833127485 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.831317814 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832986569 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.834518547 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.833450885 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.834813539 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835088531 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.831629058 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.830153014 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.835030218 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.829699678 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.830831476 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.832683178 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.832650023 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.829028694 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.831208532 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.830646419 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.8290936 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.829893229 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.831229632 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.832611014 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.833748259 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.828583993 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831855591 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.830255938 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.830200274 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.833011363 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.831440024 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.831044748 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.83219609 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.833930296 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.832184159 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.830728449 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830950441 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.833877622 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.833892461 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.830232123 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834817729 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.833089891 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.833441046 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.833866866 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.833523625 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.835983716 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.831738119 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.832192866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.831867985 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.831194528 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.831464611 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.837238163 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.834596036 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.832300946 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834842354 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.83212876 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.83600336 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.835049269 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.832928645 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.833031414 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.834808938 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.835386263 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.833301545 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.837215461 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.833858516 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.83666506 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.83533487 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.836576734 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.834191808 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836325089 seconds)
  done (took 126.408282503 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837252014 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.838282881 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838278503 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837442084 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837722502 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.836441052 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.836620061 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.837774418 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.837051931 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.837847753 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837447758 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837826684 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.840323613 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.838102337 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837927116 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83856188 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.838752378 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.838992597 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839591487 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838842189 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.837582028 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838710216 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.839025312 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.839500867 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.838767537 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.839760248 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839017029 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.839146644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83845453 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838330961 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839533028 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.83896739 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.838284584 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839393204 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.83949524 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.839042372 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84041712 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839382676 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.839090227 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.839708487 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.839627424 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840240809 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.839245665 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.839771408 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.839683962 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.840246718 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840295785 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.840468653 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.840580281 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840119528 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.839584119 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840882634 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840478124 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.839765335 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840375896 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.840968295 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839857227 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840389453 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839661022 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840384631 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840421577 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.840768476 seconds)
  done (took 115.800217546 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841314219 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840570903 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.837515728 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.83746075 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841441462 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838245335 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841353423 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.840927327 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.83994281 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.841833528 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840841546 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83727483 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838292995 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841976401 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.838349317 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83960224 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838812529 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.840103123 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84183325 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839665816 seconds)
  done (took 38.571679954 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.839324543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.841963908 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.840044376 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83939869 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.842527547 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83960713 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.842772744 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841512102 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838893595 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84168289 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842569545 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.843021969 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840965239 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.839795874 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.843094995 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839815214 seconds)
  done (took 31.232025458 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.840544437 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.843372008 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.842967796 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.843783927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.840951089 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.840464773 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.843208374 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.840712031 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.841011553 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.842308295 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.842823522 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.843118103 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.841775572 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.842673568 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.840267 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.844886724 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.84046923 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.841014817 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.843351241 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.843637607 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.841287478 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.840684019 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.84375094 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.842855597 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.841249434 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.841351736 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.840133776 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.84099517 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.842007002 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.844073723 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.841560185 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.84215671 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.841076307 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.842325594 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.843384622 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.842186595 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.844426526 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.844260303 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.844691277 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.844325118 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.844645298 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.843041769 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.844181402 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.844458919 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.842040297 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.843509406 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.84233817 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.841311883 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.842130939 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.843368151 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.845062954 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.846654753 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.845231597 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.8455712 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.84583244 seconds)
  done (took 103.130483844 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845614341 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846250233 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.841960549 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.846256597 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.845733946 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.8432906 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.845725108 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841959333 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842777378 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.845578912 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.843381961 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.845775382 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842132525 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846599204 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.843723623 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845606207 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.843089414 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844049504 seconds)
  done (took 34.979505522 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.843491311 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844372653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.84573681 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843288524 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.843696545 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.846667585 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843271398 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.84697295 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845791296 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.844562424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84359018 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.846843887 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846706687 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.846157142 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845301144 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843413608 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.846564977 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846618865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.844324928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844500352 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847229376 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846860823 seconds)
  done (took 42.375875636 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.848491801 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.847186777 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.864011442 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.887040254 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.873690442 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.848175527 seconds)
  done (took 12.950051992 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846265981 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847700349 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845552734 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850080613 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848613557 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845365116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845987819 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846359301 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846912587 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845645411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845469048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848205284 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847936568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845442006 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848926715 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848120025 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845332445 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846116665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847562096 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847195195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84559156 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848870042 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846219818 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844622607 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845169146 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846091686 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848813933 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846463759 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845993052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848366008 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848927813 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846694098 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849153481 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84667578 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849394074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848727337 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846219383 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849250105 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849530038 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846722196 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.849162963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849555491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849011471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848467201 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850240171 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847779319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846474286 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847543196 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84620611 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850431321 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849175112 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846922483 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849371786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848600225 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849498591 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850234255 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849488046 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847817517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852188115 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848394181 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84892277 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851692392 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84815397 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848571369 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850424621 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848983088 seconds)
  done (took 123.744013175 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84872763 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849488255 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84951111 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849744405 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849265555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848574614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849224079 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848331266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849781065 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8495609 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851263643 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849957721 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849041928 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849009095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849776104 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849242049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849649695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850114912 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849925547 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852448278 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849705984 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850735729 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849775376 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85013935 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850123879 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85165699 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849797044 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850880461 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850111122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849960093 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850136698 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850446051 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851827857 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851108847 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850058439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850258418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850068099 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849572963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850963142 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854438596 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850800506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854547463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852217448 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8512671 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852408189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851241879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851895217 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851305427 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851193962 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851862826 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852450304 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852548947 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853219823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851062315 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851183904 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851589571 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853492243 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852573008 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851875449 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854110729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851603192 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851299535 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853664782 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850666376 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852486206 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851059515 seconds)
  done (took 123.944993777 seconds)
done (took 2535.8288738 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.901315735 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.8600946 seconds)
  done (took 15.54911593 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.01115127 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.963966777 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.848296459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.864262579 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.849245174 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.843191768 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.850533401 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.848839416 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.8491154 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.849203014 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.848907484 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.032919239 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.855283703 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.848280544 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.849594623 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.941578032 seconds)
  done (took 51.941384498 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.852640662 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.852253601 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.864370227 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.854765818 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.853392704 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.8647444 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.8851093 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.856105383 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.885289621 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.863928446 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.919699017 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.860334784 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.852348617 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.900709816 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.864845343 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.866245523 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.939686787 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.924489973 seconds)
  done (took 35.545489135 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.929357179 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.852240788 seconds)
  done (took 10.571538843 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.847641169 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.863854623 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.859030371 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.870035423 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.851458458 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.868004697 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.873656696 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.884016397 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.886808338 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.874205631 seconds)
  done (took 70.466374401 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.859315911 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.854954958 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.853334041 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.852831 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.845854323 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.849913092 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.853446578 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.850399011 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.533659635 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.887453106 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.859632957 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.860328889 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.855867193 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.855898437 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.852240321 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.878991916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979519769 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.851227649 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.853153728 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.861733958 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.85532598 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.947278868 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.867791991 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.854908905 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.886494944 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.533375563 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.863191213 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.862877128 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.990396658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852672234 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.856160872 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.855877122 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.858120738 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.253530548 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.185841394 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.856617221 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.864893004 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.862755943 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.853601249 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.027406142 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.857557763 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.862545187 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.848199613 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.174136398 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.936079898 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.894938252 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.210406943 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.859413082 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.857183868 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.885890701 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.860824128 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.858431583 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.868957878 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.36625141 seconds)
  done (took 132.067568073 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.853190269 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.429626763 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017257194 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854569337 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.133577987 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094195201 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.855033161 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903925624 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854142314 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101886819 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031795631 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971939684 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852299845 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.853960399 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.858238956 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.852572057 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006894234 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.923468906 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854922003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.853247098 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889140096 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.11875172 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.979955725 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854473052 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.877419055 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082201294 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.979124058 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.969498266 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.345865913 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.853528577 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921191313 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.855939407 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.855415021 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.854034301 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.019511939 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960864614 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95223957 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.856068217 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857602626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.853882945 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.516860352 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076873519 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963971672 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.993538065 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102122315 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082012687 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.5006458 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.853498833 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.490827543 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.051524502 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.062156208 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.107299196 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.981862483 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854540532 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.09851431 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.853207755 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.854219217 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.116588474 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080301625 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.966923305 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854853125 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85351733 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854353496 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.169846244 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857518464 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.965441684 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855116814 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.855116714 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.96632831 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.970539417 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.08448639 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098354918 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.884996971 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.759112252 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.362304055 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.13691907 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.92689763 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117871403 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.857782425 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855523932 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949819684 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.607332155 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.029030742 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.170605394 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.119214548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89653095 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.456529463 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.855067673 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.102175494 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.105046466 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.088292818 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100983899 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.019911233 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.179696216 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854939782 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.85514593 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.052554034 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988967103 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.858530036 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.221967003 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105708763 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.584594542 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887267021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.162509057 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994867698 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857089696 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.484845756 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.85639819 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.058274324 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.899754438 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.857369861 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86002594 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.103311284 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.729890973 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858599536 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.639505405 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.924666257 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.862509047 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12200395 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859400528 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099349843 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860127078 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.168389105 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.346468001 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901067867 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.050043964 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.101165437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.651574554 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125074242 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.171553916 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981959605 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116201232 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.675694352 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859011444 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141175916 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859000116 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.858348395 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.029992888 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.860078865 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012894975 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.861534635 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.118075693 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88437316 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028864981 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861528873 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.133077519 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.904988546 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911385465 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.862058886 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978560911 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861706995 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.895097581 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042940737 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860190599 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.860178793 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.430128937 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.859862197 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00825907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.158361627 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884876973 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.929862633 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.387308724 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860385328 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956174292 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889148375 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.464047235 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.859589332 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.032139278 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.864673776 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.845205397 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.864732209 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.171458745 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.085147926 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.867071178 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.862134577 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.656294021 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.571476727 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.860581641 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.036347694 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.088659784 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.502033863 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082485716 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865692155 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994365407 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.863407126 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.939814296 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213000921 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861930927 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.862501737 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.861931776 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.864319171 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.863079329 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0900742 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893396122 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.552345738 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.002395206 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107039645 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.174397049 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.124988131 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.912785183 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.867510368 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.131259415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.865677731 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.930302966 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.867500529 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891024962 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112251327 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865767463 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094095974 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150117696 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.913128278 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914896951 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.867952964 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864463694 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.863923789 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009292638 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968451838 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865511037 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.863444131 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.98169156 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988781527 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055750013 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.457868858 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.038508304 seconds)
  done (took 901.497919098 seconds)
done (took 1219.428652828 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.86492938 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.866462228 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.854720332 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.86788893 seconds)
  done (took 29.258598348 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.873984339 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.871373534 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.872014643 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.872186155 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.872019421 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.871741298 seconds)
  done (took 13.037202471 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.899834951 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.86900652 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.867021313 seconds)
  done (took 21.441401653 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.941904063 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.273045358 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.976894772 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31108162 seconds)
  done (took 10.307165599 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.874862568 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.87155971 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.872920659 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.873104029 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.874367333 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.875465914 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.874062188 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.874858756 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.876977082 seconds)
  done (took 18.67286749 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.105567479 seconds)
done (took 98.623825686 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.759024445 seconds)
    (2/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.956427603 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.064145175 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.869974828 seconds)
    (5/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.925926462 seconds)
    (6/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.869995158 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.894372949 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.139317771 seconds)
    (9/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.219734478 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.005686537 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.915659992 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.906624445 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.962996702 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.892157305 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.893075993 seconds)
    (16/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.522810438 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.403592133 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.240972961 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.748777651 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.87219695 seconds)
    (21/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.960230051 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.846663113 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.901519242 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.41710496 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.53545655 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.962865595 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.86931055 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.85519823 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.176711231 seconds)
    (30/309) benchmarking ("sort", BigInt, false)...
    done (took 6.872119267 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 4.867998942 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.156074 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.959628157 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.226124995 seconds)
    (35/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.06613304 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.964361509 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.882519538 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.027137307 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045688207 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.196593631 seconds)
    (41/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.376621272 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.003163583 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.641777452 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.258351084 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.855338358 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.096561665 seconds)
    (47/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.968385022 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.878137067 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.959231593 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.207430118 seconds)
    (51/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.872596622 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.067717648 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.102948588 seconds)
    (54/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.184900454 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.978632225 seconds)
    (56/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.852665787 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.275357335 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.127664284 seconds)
    (59/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.893317051 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.024982997 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.24767222 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.897769567 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.294742678 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.927141418 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.210727971 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.812921633 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.258530069 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.873025478 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.872051294 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388551192 seconds)
    (71/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.983488605 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.871224947 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.035344629 seconds)
    (74/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.895810939 seconds)
    (75/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.08592597 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.954793513 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.266379257 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.897638031 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.058406764 seconds)
    (80/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.873331432 seconds)
    (81/309) benchmarking ("map", abs, BigInt, true)...
    done (took 9.771703261 seconds)
    (82/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.043009888 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 5.634215264 seconds)
    (84/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.872653087 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.002245305 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.969932347 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.891000473 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.684384415 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.586137638 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.856060323 seconds)
    (91/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.534588314 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.918153857 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.459436905 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.772244348 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.87400846 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.216052625 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.373431283 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.91799922 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.135767357 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.007681366 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.168839168 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.04221961 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.990432558 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.160013329 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.894560741 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.933477819 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.19434341 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.855187171 seconds)
    (109/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.009719378 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.856070984 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.181219406 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.877992838 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.09716949 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.200611166 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.817373954 seconds)
    (116/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.104404437 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.073692991 seconds)
    (118/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.162153288 seconds)
    (119/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.119593343 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.749677805 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.95146084 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.854940457 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.167334664 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.97001519 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.872436036 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.171838355 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.239654582 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.128324258 seconds)
    (129/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.856677394 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.931504783 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.947874422 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.122803555 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.954280678 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 2.317027438 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.894784247 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.661385607 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.239404988 seconds)
    (138/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.954634837 seconds)
    (139/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.962295124 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.088583326 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.133022512 seconds)
    (142/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.99600945 seconds)
    (143/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.995665368 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.96494747 seconds)
    (145/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.002902121 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.699236528 seconds)
    (147/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.030750934 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.301934123 seconds)
    (149/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.955164684 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.537056078 seconds)
    (151/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.085750346 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.978741206 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.893479863 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.999769858 seconds)
    (155/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.453643033 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.506106195 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.550557049 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.362766961 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.195429432 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.899243719 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.24417963 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.143594548 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.041966929 seconds)
    (164/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.157770251 seconds)
    (165/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.434287199 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.863942287 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.886704627 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.955342774 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.036867017 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.898346245 seconds)
    (171/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.012688133 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.213579362 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.01879243 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.949735089 seconds)
    (175/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.202843068 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.266114557 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.043005964 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.033849943 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.17746179 seconds)
    (180/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.981500761 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.128265735 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.95930692 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.205531118 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.959639056 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.934613372 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.856505132 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.946298034 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.967658447 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.898162399 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.873567235 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.915502605 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.887739444 seconds)
    (193/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.371757413 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 5.69807291 seconds)
    (195/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.080127116 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.895928061 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.935691615 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.528423346 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.859161968 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.106154113 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.044235882 seconds)
    (202/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.016259493 seconds)
    (203/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.005378831 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.225345846 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.934017389 seconds)
    (206/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.237595309 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.745794737 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.929993478 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.158586975 seconds)
    (210/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.099467082 seconds)
    (211/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.004898731 seconds)
    (212/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.010732365 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.001010445 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.983422481 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.117467498 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.876513804 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.953928482 seconds)
    (218/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.017878328 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.863077338 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.598609127 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.087981717 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.015105815 seconds)
    (223/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.042280591 seconds)
    (224/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.972186998 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.874815281 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.011759088 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.864019928 seconds)
    (228/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.989671914 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.900294741 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.897251732 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.07271695 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.27686343 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.877175078 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.948106176 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.875453885 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 4.30878174 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.164408608 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.876909078 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.170253537 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.796388716 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.886106692 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.165034345 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.043656843 seconds)
    (244/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.985354825 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.754496076 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.436983762 seconds)
    (247/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.477144398 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.260360579 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.879128991 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.875730932 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.753428918 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.980460421 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.538681143 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.876851533 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.863516415 seconds)
    (256/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.137883106 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.353637611 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.886226479 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.948148975 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.768958857 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.909218981 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.97135907 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.000283577 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.01492017 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901004261 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.399209048 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.872571157 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.756949792 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.921649873 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.861315666 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.286726729 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.885025136 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.892315683 seconds)
    (274/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.979905861 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.008319867 seconds)
    (276/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.946060075 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.876394635 seconds)
    (278/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.862345832 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.743290937 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.177201826 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.207566983 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.938807457 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.210184112 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.467664885 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.394788816 seconds)
    (286/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.896562219 seconds)
    (287/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.02338158 seconds)
    (288/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.491701416 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.960553216 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.959131227 seconds)
    (291/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.476092546 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.006719772 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.033056805 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.948658638 seconds)
    (295/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.125853978 seconds)
    (296/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.017394165 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.880278814 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.121070167 seconds)
    (299/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.883103512 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.239115272 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.922172771 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.058555319 seconds)
    (303/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.892444333 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.524439447 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.908959773 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.247068249 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.929780337 seconds)
    (308/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.007748811 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171320895 seconds)
  done (took 1023.357434745 seconds)
done (took 1025.178346901 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.911929543 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906476542 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.888752246 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.909411414 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.001611628 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.918125158 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.899100147 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.891937557 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.936761109 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.93792363 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.888660362 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.917295515 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.891085558 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.889688518 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.888432675 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903369844 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.191555809 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.910657149 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.907141361 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.900167493 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.906473898 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.888685419 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.939881545 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.918986775 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.893526316 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.893368209 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.893938532 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.910936351 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.00329033 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.89422792 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.893672971 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.902685847 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.191333775 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.908689161 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.88504669 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.911276942 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.902344041 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.900250243 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.894126586 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.923442638 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.317138606 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.896063222 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.893888439 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.891438435 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.891565776 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.89603156 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.892980951 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.898267302 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904965998 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906019953 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.317246401 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.91210595 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.894597883 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.892822112 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.902824298 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.892608585 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.894755382 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908570128 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.912336386 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908308286 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.181521023 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.916464482 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.894542246 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.90896657 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.900940298 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.355684198 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.893014101 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.898299965 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.318216237 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.902797755 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.355653083 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.907262266 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.894930617 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.90779246 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.926264228 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.193309603 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.908081309 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.892399962 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.901583318 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.892426317 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.904171793 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906669726 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.899054302 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.893608212 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907354771 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.923465364 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.904378986 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.895459675 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.902994652 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.914361045 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.901314405 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.905243782 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.897179322 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.890125793 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.904143616 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.897715599 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.896648539 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.897421844 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.899551156 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.90549102 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.318162505 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916542097 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.890064866 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.890507343 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89350547 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.908928295 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.318360361 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.899871044 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.916176443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.941598056 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.896800241 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.183964079 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.918870642 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911880044 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.903308228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.898236461 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.890296314 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.184786558 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341165225 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.915929868 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.897563034 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.895309423 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912808915 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.898135065 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.892130029 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.197354284 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.916267834 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.909864081 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.017416506 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.906605289 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.929197166 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.895387072 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.89881155 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.92506629 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912091838 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.928121338 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.899122129 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912969666 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.912097952 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.892800911 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.907662171 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.907197345 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.898818688 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.902033734 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.890873532 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.926218988 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910438264 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910096235 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.917981792 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.018246884 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.894938377 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.186273616 seconds)
done (took 297.352701469 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.964042636 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.894811035 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.997792605 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.893807107 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.980898841 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.979946903 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.890120885 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.891507895 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.890620491 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.272358616 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.891471778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.892105343 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.890897914 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.892223894 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.979837856 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.893881216 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.891316413 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.288165638 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.895113459 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.971086067 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.890244581 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.891827855 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.892664934 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.279422141 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.888526904 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.896270646 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.965508529 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.894128948 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.242992034 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.895795015 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.890475345 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.242698482 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.987378664 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.912744155 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.90440303 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.901980504 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.980246177 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.898334483 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978581816 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.978661395 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.997326512 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.934768032 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.895769726 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.896677077 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.897153923 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.896746328 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.893316061 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.923914716 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.897010457 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.892848419 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.237431624 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.905393142 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.894294522 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.893845008 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.89458196 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.926969445 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.893784121 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.896575805 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.998326318 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.89678674 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.96029595 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.280572075 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.274702152 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.895939405 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.898570735 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.894243163 seconds)
  done (took 186.148133673 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.963024654 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.973974177 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.964885011 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.90061361 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.946760025 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.971546799 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.899040945 seconds)
  done (took 15.446384263 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.903198136 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896856278 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.949993504 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.947639499 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.896436577 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.049733872 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.897830972 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.9092086 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.894505576 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.951258453 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.897460529 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.898198557 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.904477171 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.8913313 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.946477707 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.910396907 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.013423445 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.899308841 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.898496109 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.050775201 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895280784 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.904759492 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.953706194 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.910348066 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.899555976 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.905483161 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.484732135 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.898130235 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894749789 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.897467309 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895909241 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.941979476 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.898773446 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.892446128 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895719533 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.016848778 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.898716414 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895233173 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.899316808 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.895459765 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.899273552 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.898445018 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.899309858 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.895806992 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.898851947 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.922790694 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.898649716 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.898919063 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.899013958 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900093722 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.950895336 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.899525922 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.897344984 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.896556906 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.956439332 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.905498807 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.899744746 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.897015237 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899867435 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.896325564 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.052599946 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.948393474 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.899950858 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.948059568 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901513429 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.900458789 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.90010309 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.900600243 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.956018657 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.899648552 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949976789 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.898493665 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.060569007 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.92505912 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.901021703 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.904736238 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.905176215 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.900242813 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.896014097 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.907922925 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.897315957 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.902139005 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.90694735 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.898311494 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.898310472 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.426958851 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.035128533 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.89854764 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.914978234 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.908852753 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.898384276 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.955622885 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.901325521 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.899571529 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.953704689 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.017009852 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.958435052 seconds)
  done (took 209.150034286 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.907904802 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.910673573 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.903414426 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.918911254 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.901742732 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.902799936 seconds)
  done (took 13.27748506 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.905307654 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.902190254 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.901145485 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.90161843 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.90210791 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.903376349 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.90391364 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.905466493 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.906579678 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.902472216 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.903942459 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.904324298 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.90431247 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.902895882 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.902442212 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.903881739 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.903978395 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.900211796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.902669796 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903463641 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.047506685 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.902835461 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.903362938 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.905221868 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.90677474 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.904268799 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.912349744 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.903218511 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.904057345 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.911518044 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.906590339 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.905363987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.905273689 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.909595293 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.908315548 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.906141612 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907356887 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.905228088 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.901336075 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.904316952 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.905210787 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904483596 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.904317914 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.906012602 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.906736432 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.909557012 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.909795423 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.913497619 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.905467599 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.906003351 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.906057626 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.904196025 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.905219717 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.906882661 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.90988462 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910030509 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.910055878 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.906776536 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.904254899 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.909140838 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.905227221 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.906150219 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.909140099 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.908922538 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.911836229 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.906825119 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.907623541 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.909800662 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.905758832 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.905764416 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.908060214 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.903026468 seconds)
  done (took 140.193101181 seconds)
done (took 566.049191853 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.25435377 seconds)
  done (took 9.091146958 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.971278691 seconds)
  done (took 8.921884398 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.316595789 seconds)
  done (took 10.152260781 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.911541789 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.963960125 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.902167965 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.900761055 seconds)
  done (took 29.523237373 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.033278069 seconds)
  done (took 8.869979831 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.910083154 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.900095606 seconds)
  done (took 15.679699763 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.970279758 seconds)
  done (took 8.807813773 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.947359349 seconds)
  done (took 8.786472781 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.925766696 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.906483866 seconds)
  done (took 15.681486006 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.885882109 seconds)
  done (took 8.723012224 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.670056 seconds)
  done (took 11.515774441 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.900956948 seconds)
  done (took 8.749579378 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.958116414 seconds)
  done (took 8.795053313 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.917636259 seconds)
  done (took 9.754518254 seconds)
done (took 164.888192498 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.903043201 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.902848374 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.902336143 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.900781217 seconds)
  done (took 29.44508962 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.94026151 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.941312514 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.941902894 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.951578058 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.944335018 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.939028268 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.933273517 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.933972282 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.952253507 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.943338725 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.943079606 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.942087771 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.9408308 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.93293277 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.94321245 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.942996453 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.951720117 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.941809366 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.933634669 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.945020809 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.907639697 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.951632583 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.944255232 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.907529689 seconds)
  done (took 48.387694185 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.107386696 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.979896943 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.062950251 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.961729179 seconds)
  done (took 9.949703507 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.959413685 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.961244701 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.974106966 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.012176463 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.046510817 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.971496278 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.933300441 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.930868794 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.916944092 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.961518353 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.037232411 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.977930748 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.044733619 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.908862412 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.094370787 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909022438 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.908680726 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.961367149 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.012648835 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.026533368 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.909021255 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.960831668 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.964360265 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.978601612 seconds)
  done (took 49.200465257 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.907547894 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.916069457 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.914393735 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.908437453 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.908292906 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.909002974 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.913442769 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.909737367 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.929611799 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.909899261 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.907855434 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.908632214 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.908125806 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.908895768 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.909399659 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.921911297 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.922804608 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.909397289 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.911871109 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.914958473 seconds)
  done (took 40.090346119 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.904762702 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.761808911 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.25591925 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.160695326 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.90444215 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.905558057 seconds)
  done (took 31.733894919 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.92273938 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.97147722 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.917525177 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.965940869 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.045780499 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.916843422 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.912208713 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.977575121 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.016655342 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978378854 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.928131522 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.935910575 seconds)
  done (took 25.329720968 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.906391845 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.907767913 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.906871459 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.92430963 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.92239758 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.917881365 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.918346098 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.904872733 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.922806818 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.927841822 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.919202548 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.923046218 seconds)
  done (took 44.846829515 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993788831 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.953448863 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.933027021 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591434694 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284003033 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117484231 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.509767367 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23943499 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.909882829 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179064303 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128640103 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009309902 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163363726 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27427296 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933580776 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.392959074 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208715799 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110939129 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934166245 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671329745 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971145589 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.944605235 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.791974736 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967324772 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121040875 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.03613784 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.166666574 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.910166915 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046626685 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946071777 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920301777 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905846709 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18361998 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286321588 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012495173 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917451962 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.526264521 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.620384067 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.895870478 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.722600345 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.763120986 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.044912617 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918579162 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907494332 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842410088 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912154451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275580546 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.911407814 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.618984292 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907979267 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918766071 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001473942 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.911443859 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.723348698 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828708419 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910136705 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.90704201 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914737099 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.478031187 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105313879 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.949283823 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.87541186 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.000282815 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.751947686 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296923937 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.057821954 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.912453998 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912314952 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844060967 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676774131 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964541329 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238474336 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.929726562 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558341466 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20739087 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.112187472 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854224601 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176014293 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310066715 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.875115339 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137203682 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909112756 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845520954 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.854808592 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843447314 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166303948 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946060941 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.689556983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949429446 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.242897451 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92134016 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933190052 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933441987 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134441652 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.794848638 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911094862 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.834947095 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054553457 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932721732 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239248689 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845543531 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.914870856 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168415702 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.122504013 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.841701809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.422138536 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07245443 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.339967492 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.956998971 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.917672498 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952531649 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.183490214 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969684257 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.114176881 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964946717 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.9114992 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203317952 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36056382 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.041870806 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.07027692 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03559732 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.231876174 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937718239 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995324068 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91654829 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912797653 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.756254932 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.464632516 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.912859997 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.914901727 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.841380857 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953297313 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.912464726 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857805903 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.533958933 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112545586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.927956938 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.137505515 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349783352 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218184903 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847687459 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241752835 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968163577 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.136979814 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.576592421 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.005376395 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1748364 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847030284 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.883331918 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959490252 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933733821 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012606228 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936286924 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.92437985 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201167197 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.917877113 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.91708386 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.769023028 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.951351869 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921353469 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.918973056 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665664947 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187563049 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938783702 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923038771 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.803402857 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.928370521 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978099934 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919520787 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924891695 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.450253788 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.628466849 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.921674951 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.496240146 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139727437 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925726804 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.766807179 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031498662 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.996604812 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187536712 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974215525 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.85013565 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.627122024 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.608546661 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916150528 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851282867 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915566166 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925334262 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926352663 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.111613474 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190863988 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961163817 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.677848739 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.959381731 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926685971 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.922357624 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915680374 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.422387228 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.112019642 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.965657909 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.9554248 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060855434 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.929932701 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850786693 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92080983 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921831866 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917211314 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.918596513 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950602702 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.686956655 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294639626 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181493403 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.530058746 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932347603 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.735071923 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.975249082 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.920001965 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.86383491 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.947130967 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.945821921 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050755868 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.929181668 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.756352828 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.625368448 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485835991 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228170842 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221499228 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359719078 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.996454281 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94316074 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252877584 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853054682 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476648144 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976126052 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256597137 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863574671 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002970812 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.582275089 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276478038 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932951388 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146751533 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309614533 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.773394619 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072782442 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131669715 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955263873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.93362608 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875398468 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.443584466 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059349445 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.74500283 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137782831 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257012155 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699863529 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.057053331 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.920639011 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.591522872 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003355242 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.630629925 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093289058 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972378393 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.016142858 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397560441 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930741387 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147590002 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270073493 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.945531897 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.035094924 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857042279 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93230183 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932047265 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.922263935 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.915125388 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.803267104 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.175341387 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932596611 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855024322 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.900513015 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205783805 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.833375693 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.927457885 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921734093 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208916381 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.328108077 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089339802 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.891417442 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.430715433 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929152198 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856724654 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855880719 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.615304345 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92995353 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898065511 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128748695 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.024311199 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833783653 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.861719351 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167865616 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179662444 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.936925358 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198965141 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196768575 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.622683676 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947225829 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.023430305 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713841863 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.043895251 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92438439 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159204107 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676033082 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149455567 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.953305865 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.876136276 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.923819971 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137543271 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.923816457 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.980695545 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163501573 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.645521198 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.927246235 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34492604 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994715589 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.94032553 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978813607 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.016159271 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932657593 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003018285 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934011531 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.934441159 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934414593 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970464988 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.943786788 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.056808972 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.937126944 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017418375 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.121797581 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.443806574 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.929403549 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200737303 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278057222 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249167467 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983011484 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925408305 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923643166 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856722033 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071621698 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.149794054 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195536854 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.053146875 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.037681931 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946114486 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673507486 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.009919657 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160189314 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200591582 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.820235596 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299045052 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960382246 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.923998677 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935379088 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.136378929 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129964931 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217245066 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069062068 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.861482993 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278704649 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199521361 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.925425977 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926130434 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518953877 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.930121819 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.723263626 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.965857959 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.956149547 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211728243 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937755161 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30534693 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94954905 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.088167252 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.701341701 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.674423799 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217793384 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921301804 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992748427 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200976028 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312951978 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24397054 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995975699 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940884586 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.040196503 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075717165 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.808411828 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929231697 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928890579 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97790041 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.639675956 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.93924527 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209217059 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238129136 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.927096184 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.820976233 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952968153 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.941082175 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154253329 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189920362 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182963401 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939899973 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937493451 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.745848844 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205834206 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98821461 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864050214 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.934035158 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030078855 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178005734 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951151334 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.384175976 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.641719958 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194615669 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.928161663 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95197804 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.950860749 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288091613 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257328514 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.46192281 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136847796 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.516388528 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417051345 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228579402 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.935734182 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.949081573 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230220449 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.935796424 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.886319334 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964870919 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.200982871 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244949596 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.943533186 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780054311 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.900998163 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274471482 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49729211 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870139058 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94298622 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.993002581 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.932573428 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.061609739 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944151011 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.829959812 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.949259156 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.708441633 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205167553 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.937951625 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.918560576 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.72044266 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.087119621 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961859101 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075150984 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942703166 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.607527972 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.282831928 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189262553 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.872736564 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.936464331 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.937786848 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934484503 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920990566 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.13035619 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.12946962 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199164075 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.899797293 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.965851598 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938921561 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.150775121 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146149962 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.935331118 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077766144 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892218998 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973298329 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.840280684 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.44181034 seconds)
  done (took 1697.461312873 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935514638 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.961009793 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.946007797 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.98444087 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963211856 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.028906392 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.958819309 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954571249 seconds)
  done (took 57.603217982 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.933376791 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.157677879 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.945399367 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.936037793 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.944757759 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.934811535 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.099565679 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.943522113 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.943531111 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.944539331 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.933847127 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.934072271 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.235995011 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.953484846 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.93473139 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.918312432 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.942069143 seconds)
  done (took 75.50971258 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.934550765 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.119594953 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.976910889 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.947535533 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.914979847 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.941051141 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.705309552 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.945108547 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.933500056 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.03641224 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.563224343 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.933428406 seconds)
  done (took 87.821566956 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.938879046 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.937581233 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.936714791 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.93776606 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.937493147 seconds)
  done (took 11.557039484 seconds)
done (took 2210.798473981 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.252124763 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.143198201 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.156730311 seconds)
  done (took 6.166226407 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.081498563 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.128597456 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.249436662 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.270247987 seconds)
  done (took 10.600427758 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.217294073 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.320945028 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.149592572 seconds)
  done (took 8.556151596 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.323222421 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.945136838 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.03844667 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.930615304 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.931230668 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.933007786 seconds)
  done (took 22.664081386 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.935509453 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.937277345 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.933979488 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.936182015 seconds)
  done (took 9.609273801 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.915940802 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.710563912 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.917392698 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.930564269 seconds)
  done (took 21.341611436 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.682903633 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.694893281 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.678322318 seconds)
  done (took 9.923174331 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.503946161 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.146662609 seconds)
  done (took 9.518042743 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.212956256 seconds)
  done (took 4.091707957 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.078436841 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.213943002 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.425430636 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.4725482 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.525121164 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.112370622 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.301855175 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.205781155 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.337314581 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.400816431 seconds)
  done (took 25.954264342 seconds)
done (took 143.850552211 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.464791014 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.954666288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.148022869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.341209069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.183762079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.147214053 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.164680374 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.323031129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.801643468 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.798990146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.298341284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.179667423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.109461077 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.191271113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.110630434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.316687199 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.172643314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.351715133 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.974493016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.183149809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.158874938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.9201016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.120400447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.932514434 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.169671205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.089254838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.511083626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.309262534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.122703421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.516975875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.089503075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.321294309 seconds)
  done (took 172.358823481 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.850378466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929908422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930128737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930766911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.431744656 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.93039721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932408707 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930361189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.112212427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.091376818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930082295 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.431129885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931858045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929291618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.928923022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928925406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.243982171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.917700991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.941378961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943305833 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.948190762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.372995715 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.948638152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.411002881 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.282975808 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.948986513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929825523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.952653235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.934165274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.942377424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946218549 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930209067 seconds)
  done (took 210.612144089 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.930259435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.931146552 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.92990237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931453234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.931024684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.934870421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933118067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930299168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.695128171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.70971318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930859196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.931450777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934578275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.932042485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.936669265 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.9318165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.938303787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.938520821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.940464333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.941538877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.945573537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.758175172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958559835 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.756498568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.959092586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.941484517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.931208518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941344114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.943057107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.943542079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944347011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932198174 seconds)
  done (took 223.049570052 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.125975024 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.937328187 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.938127646 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.869684469 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.937357453 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.937390456 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.935040789 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.126147817 seconds)
  done (took 19.689634454 seconds)
done (took 627.603107373 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.410508549 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.255844591 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.120712612 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.962682337 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.195520143 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.999008135 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.958428556 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.023022027 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.685031895 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.027434408 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.651294658 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.978380048 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.745945266 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.982796652 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.081229881 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.017154723 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.508574949 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.595671656 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.138108763 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.039018758 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.135561339 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.929452478 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.035627283 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.720177337 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.769210022 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.970124814 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.152161105 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.511931431 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.971489393 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.122967191 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.704656432 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.356793649 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.971720166 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.959485339 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.012551239 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.994700023 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.326943027 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.971788483 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.086808919 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.733580001 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.022560077 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.569782413 seconds)
  done (took 106.275021863 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.929744671 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.927653902 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.927088311 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.928439312 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.928164374 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.927272391 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.927983176 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.926431334 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.927494819 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.927166995 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.927429464 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.928616776 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.92737288 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.929052201 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.926698153 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.929091373 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.928254588 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.930445763 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.927723675 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.927212635 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.92962754 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.927909105 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.928997732 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.927792433 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.929773027 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.92860721 seconds)
  done (took 52.01292936 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.941772574 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.086154161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.176257208 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.961419338 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.942753566 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.946294719 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.961747654 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.946703873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.944269035 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.944420505 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.039948151 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.947092337 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.96128314 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.167425601 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.958447732 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.941796763 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.941877429 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.942940059 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.093183109 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.959456619 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.964119526 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.947922981 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.963029131 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.957929101 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.945086722 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944456942 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.946626434 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.379567923 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.95203435 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.04023145 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.002574778 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.966262486 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.334560763 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.176159574 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.998394968 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.949705495 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.943023234 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.044691393 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.949484876 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944775768 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.962746713 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949206857 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.17666343 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.448075481 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.960599889 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.943902332 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.390479378 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.052752513 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.986493688 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955761181 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.171188118 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.962779875 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.94527056 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.944779897 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.982488975 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.95594942 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.945491785 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.257479913 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.958395997 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.963490658 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.949888392 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.945965249 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.098872829 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.953757387 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.088594987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.95401757 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.953558019 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.947068017 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.167091315 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961553696 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.441796568 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.960911835 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.944589725 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.041852808 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.093499451 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.412085212 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.959348977 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.103923104 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.354161649 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.969943786 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.95366751 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.365663335 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.974433459 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.953360094 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.946119164 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.94749732 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.945732766 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.989678144 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962983894 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.390662521 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.451050389 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.272168423 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.976109798 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.962959337 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947504811 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.261408664 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.955788671 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.946969097 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.171903003 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.465147285 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.96326224 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.955929626 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.434597698 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.961452026 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.966271688 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.956707291 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.175587252 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.96461369 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.991679767 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.946608578 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.955137712 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.950098597 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.96633972 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.955214049 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.948197293 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.429210893 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.062146426 seconds)
  done (took 240.671847922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.94452505 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.942930101 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.941397671 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.94239769 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.942300914 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.949110294 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.942170732 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.943030753 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.947606482 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.941753863 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.942951016 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.942659525 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.94328672 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.949497323 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.986803544 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.950989834 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.557399122 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.945721025 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.944735252 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.945184108 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.594491261 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.950585588 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.943352422 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.947860771 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.944134226 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.94821727 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.947004323 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.976734592 seconds)
  done (took 169.678861314 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.950086837 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065367216 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.967050828 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.980989261 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.958048111 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.948716465 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.975295781 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.969828508 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.958867784 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.947923253 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.949327521 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.01273554 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.964216448 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.052623539 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.983705964 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.984442605 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.057068451 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.959091749 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.948825599 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.949155419 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.981932234 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.945706877 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.013468923 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.080811482 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.967392537 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06774567 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.955161294 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.952547557 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.953116802 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.069572996 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.964652087 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.012096479 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.982893937 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.971498896 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075062182 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.071068584 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.059926045 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.982566298 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.957171834 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.950928336 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.950353533 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.939923445 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.072432902 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.970876722 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.954321312 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.061575633 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.970247906 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.954711344 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.96106788 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.951616816 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.967312197 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.973707431 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.023887061 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086803671 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.98684422 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.979139721 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.979462846 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.245251198 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.963311149 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.054601776 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.946214805 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.071852016 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.971183474 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.940574745 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.95312708 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.958085814 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.982245846 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.984467141 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.06307209 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.960527506 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.055156091 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.989087809 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.959817823 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.953044794 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.955043505 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.073599556 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.07424454 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.988593238 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.993193128 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.986910482 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.948651987 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.954788028 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.943081893 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.972861344 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.957979473 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069786979 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.071661933 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.961298031 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.955492505 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.955613578 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.956054988 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.981584792 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.081851155 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.992473914 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.052747312 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.024574098 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.029485065 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.969827707 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.967792847 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.959768702 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.019815009 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.967613818 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.967550198 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.295602766 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.029958354 seconds)
  done (took 211.4781088 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.049547784 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.426595611 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.010942299 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.012841446 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.246848594 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.376194179 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.760676336 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.003301177 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.005379435 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.033474621 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.168393033 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.062552884 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.017059566 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.992316514 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.436749843 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.995838098 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.004559808 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.029748212 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.010005106 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.588360902 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.298857009 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.122649571 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.002703506 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.140240128 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.984762919 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.291233227 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.329110603 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.382401953 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.04000204 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.354774265 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.34533084 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.685006671 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.211544081 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.250881722 seconds)
  done (took 77.56220931 seconds)
done (took 859.544622844 seconds)
SAVING RESULT...
DONE!
